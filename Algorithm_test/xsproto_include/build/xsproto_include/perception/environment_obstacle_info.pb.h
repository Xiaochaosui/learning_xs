// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perception/environment_obstacle_info.proto

#ifndef PROTOBUF_perception_2fenvironment_5fobstacle_5finfo_2eproto__INCLUDED
#define PROTOBUF_perception_2fenvironment_5fobstacle_5finfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "base/header.pb.h"
#include "perception/perception_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_perception_2fenvironment_5fobstacle_5finfo_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsEnvironmentObstacleInfoImpl();
void InitDefaultsEnvironmentObstacleInfo();
inline void InitDefaults() {
  InitDefaultsEnvironmentObstacleInfo();
}
}  // namespace protobuf_perception_2fenvironment_5fobstacle_5finfo_2eproto
namespace xsproto {
namespace perception {
class EnvironmentObstacleInfo;
class EnvironmentObstacleInfoDefaultTypeInternal;
extern EnvironmentObstacleInfoDefaultTypeInternal _EnvironmentObstacleInfo_default_instance_;
}  // namespace perception
}  // namespace xsproto
namespace xsproto {
namespace perception {

// ===================================================================

class EnvironmentObstacleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.perception.EnvironmentObstacleInfo) */ {
 public:
  EnvironmentObstacleInfo();
  virtual ~EnvironmentObstacleInfo();

  EnvironmentObstacleInfo(const EnvironmentObstacleInfo& from);

  inline EnvironmentObstacleInfo& operator=(const EnvironmentObstacleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnvironmentObstacleInfo(EnvironmentObstacleInfo&& from) noexcept
    : EnvironmentObstacleInfo() {
    *this = ::std::move(from);
  }

  inline EnvironmentObstacleInfo& operator=(EnvironmentObstacleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnvironmentObstacleInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnvironmentObstacleInfo* internal_default_instance() {
    return reinterpret_cast<const EnvironmentObstacleInfo*>(
               &_EnvironmentObstacleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(EnvironmentObstacleInfo* other);
  friend void swap(EnvironmentObstacleInfo& a, EnvironmentObstacleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnvironmentObstacleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EnvironmentObstacleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnvironmentObstacleInfo& from);
  void MergeFrom(const EnvironmentObstacleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnvironmentObstacleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xsproto.perception.Point2D obstacle_points = 3;
  int obstacle_points_size() const;
  void clear_obstacle_points();
  static const int kObstaclePointsFieldNumber = 3;
  const ::xsproto::perception::Point2D& obstacle_points(int index) const;
  ::xsproto::perception::Point2D* mutable_obstacle_points(int index);
  ::xsproto::perception::Point2D* add_obstacle_points();
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::Point2D >*
      mutable_obstacle_points();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::Point2D >&
      obstacle_points() const;

  // repeated .xsproto.perception.Area2D obstacle_areas = 4;
  int obstacle_areas_size() const;
  void clear_obstacle_areas();
  static const int kObstacleAreasFieldNumber = 4;
  const ::xsproto::perception::Area2D& obstacle_areas(int index) const;
  ::xsproto::perception::Area2D* mutable_obstacle_areas(int index);
  ::xsproto::perception::Area2D* add_obstacle_areas();
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::Area2D >*
      mutable_obstacle_areas();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::Area2D >&
      obstacle_areas() const;

  // .xsproto.base.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::xsproto::base::Header& header() const;
  ::xsproto::base::Header* release_header();
  ::xsproto::base::Header* mutable_header();
  void set_allocated_header(::xsproto::base::Header* header);

  // uint32 output_mode = 2;
  void clear_output_mode();
  static const int kOutputModeFieldNumber = 2;
  ::google::protobuf::uint32 output_mode() const;
  void set_output_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xsproto.perception.EnvironmentObstacleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::Point2D > obstacle_points_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::Area2D > obstacle_areas_;
  ::xsproto::base::Header* header_;
  ::google::protobuf::uint32 output_mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_2fenvironment_5fobstacle_5finfo_2eproto::TableStruct;
  friend void ::protobuf_perception_2fenvironment_5fobstacle_5finfo_2eproto::InitDefaultsEnvironmentObstacleInfoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EnvironmentObstacleInfo

// .xsproto.base.Header header = 1;
inline bool EnvironmentObstacleInfo::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::xsproto::base::Header& EnvironmentObstacleInfo::header() const {
  const ::xsproto::base::Header* p = header_;
  // @@protoc_insertion_point(field_get:xsproto.perception.EnvironmentObstacleInfo.header)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::base::Header*>(
      &::xsproto::base::_Header_default_instance_);
}
inline ::xsproto::base::Header* EnvironmentObstacleInfo::release_header() {
  // @@protoc_insertion_point(field_release:xsproto.perception.EnvironmentObstacleInfo.header)
  
  ::xsproto::base::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::xsproto::base::Header* EnvironmentObstacleInfo::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::xsproto::base::Header;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.perception.EnvironmentObstacleInfo.header)
  return header_;
}
inline void EnvironmentObstacleInfo::set_allocated_header(::xsproto::base::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:xsproto.perception.EnvironmentObstacleInfo.header)
}

// uint32 output_mode = 2;
inline void EnvironmentObstacleInfo::clear_output_mode() {
  output_mode_ = 0u;
}
inline ::google::protobuf::uint32 EnvironmentObstacleInfo::output_mode() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.EnvironmentObstacleInfo.output_mode)
  return output_mode_;
}
inline void EnvironmentObstacleInfo::set_output_mode(::google::protobuf::uint32 value) {
  
  output_mode_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.EnvironmentObstacleInfo.output_mode)
}

// repeated .xsproto.perception.Point2D obstacle_points = 3;
inline int EnvironmentObstacleInfo::obstacle_points_size() const {
  return obstacle_points_.size();
}
inline const ::xsproto::perception::Point2D& EnvironmentObstacleInfo::obstacle_points(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.perception.EnvironmentObstacleInfo.obstacle_points)
  return obstacle_points_.Get(index);
}
inline ::xsproto::perception::Point2D* EnvironmentObstacleInfo::mutable_obstacle_points(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.perception.EnvironmentObstacleInfo.obstacle_points)
  return obstacle_points_.Mutable(index);
}
inline ::xsproto::perception::Point2D* EnvironmentObstacleInfo::add_obstacle_points() {
  // @@protoc_insertion_point(field_add:xsproto.perception.EnvironmentObstacleInfo.obstacle_points)
  return obstacle_points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::perception::Point2D >*
EnvironmentObstacleInfo::mutable_obstacle_points() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.perception.EnvironmentObstacleInfo.obstacle_points)
  return &obstacle_points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::Point2D >&
EnvironmentObstacleInfo::obstacle_points() const {
  // @@protoc_insertion_point(field_list:xsproto.perception.EnvironmentObstacleInfo.obstacle_points)
  return obstacle_points_;
}

// repeated .xsproto.perception.Area2D obstacle_areas = 4;
inline int EnvironmentObstacleInfo::obstacle_areas_size() const {
  return obstacle_areas_.size();
}
inline const ::xsproto::perception::Area2D& EnvironmentObstacleInfo::obstacle_areas(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.perception.EnvironmentObstacleInfo.obstacle_areas)
  return obstacle_areas_.Get(index);
}
inline ::xsproto::perception::Area2D* EnvironmentObstacleInfo::mutable_obstacle_areas(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.perception.EnvironmentObstacleInfo.obstacle_areas)
  return obstacle_areas_.Mutable(index);
}
inline ::xsproto::perception::Area2D* EnvironmentObstacleInfo::add_obstacle_areas() {
  // @@protoc_insertion_point(field_add:xsproto.perception.EnvironmentObstacleInfo.obstacle_areas)
  return obstacle_areas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::perception::Area2D >*
EnvironmentObstacleInfo::mutable_obstacle_areas() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.perception.EnvironmentObstacleInfo.obstacle_areas)
  return &obstacle_areas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::Area2D >&
EnvironmentObstacleInfo::obstacle_areas() const {
  // @@protoc_insertion_point(field_list:xsproto.perception.EnvironmentObstacleInfo.obstacle_areas)
  return obstacle_areas_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace xsproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_perception_2fenvironment_5fobstacle_5finfo_2eproto__INCLUDED
