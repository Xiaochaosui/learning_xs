// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perception/ultrasonic_data.proto

#ifndef PROTOBUF_perception_2fultrasonic_5fdata_2eproto__INCLUDED
#define PROTOBUF_perception_2fultrasonic_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base/header.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_perception_2fultrasonic_5fdata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsUltraSonicCell_DistanceImpl();
void InitDefaultsUltraSonicCell_Distance();
void InitDefaultsUltraSonicCellImpl();
void InitDefaultsUltraSonicCell();
void InitDefaultsUltraSonicDataImpl();
void InitDefaultsUltraSonicData();
inline void InitDefaults() {
  InitDefaultsUltraSonicCell_Distance();
  InitDefaultsUltraSonicCell();
  InitDefaultsUltraSonicData();
}
}  // namespace protobuf_perception_2fultrasonic_5fdata_2eproto
namespace xsproto {
namespace perception {
class UltraSonicCell;
class UltraSonicCellDefaultTypeInternal;
extern UltraSonicCellDefaultTypeInternal _UltraSonicCell_default_instance_;
class UltraSonicCell_Distance;
class UltraSonicCell_DistanceDefaultTypeInternal;
extern UltraSonicCell_DistanceDefaultTypeInternal _UltraSonicCell_Distance_default_instance_;
class UltraSonicData;
class UltraSonicDataDefaultTypeInternal;
extern UltraSonicDataDefaultTypeInternal _UltraSonicData_default_instance_;
}  // namespace perception
}  // namespace xsproto
namespace xsproto {
namespace perception {

enum UltraSonicCell_Distance_State {
  UltraSonicCell_Distance_State_STATE_INVALID = 0,
  UltraSonicCell_Distance_State_STATE_NORMAL = 1,
  UltraSonicCell_Distance_State_STATE_MODULE_OFFLINE = 2,
  UltraSonicCell_Distance_State_STATE_MODULE_FAULT = 3,
  UltraSonicCell_Distance_State_STATE_PROBE_OFFLINE = 11,
  UltraSonicCell_Distance_State_STATE_PROBE_FAULT = 12,
  UltraSonicCell_Distance_State_STATE_PROBE_SILENCE = 13,
  UltraSonicCell_Distance_State_UltraSonicCell_Distance_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UltraSonicCell_Distance_State_UltraSonicCell_Distance_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UltraSonicCell_Distance_State_IsValid(int value);
const UltraSonicCell_Distance_State UltraSonicCell_Distance_State_State_MIN = UltraSonicCell_Distance_State_STATE_INVALID;
const UltraSonicCell_Distance_State UltraSonicCell_Distance_State_State_MAX = UltraSonicCell_Distance_State_STATE_PROBE_SILENCE;
const int UltraSonicCell_Distance_State_State_ARRAYSIZE = UltraSonicCell_Distance_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* UltraSonicCell_Distance_State_descriptor();
inline const ::std::string& UltraSonicCell_Distance_State_Name(UltraSonicCell_Distance_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    UltraSonicCell_Distance_State_descriptor(), value);
}
inline bool UltraSonicCell_Distance_State_Parse(
    const ::std::string& name, UltraSonicCell_Distance_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UltraSonicCell_Distance_State>(
    UltraSonicCell_Distance_State_descriptor(), name, value);
}
// ===================================================================

class UltraSonicCell_Distance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.perception.UltraSonicCell.Distance) */ {
 public:
  UltraSonicCell_Distance();
  virtual ~UltraSonicCell_Distance();

  UltraSonicCell_Distance(const UltraSonicCell_Distance& from);

  inline UltraSonicCell_Distance& operator=(const UltraSonicCell_Distance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UltraSonicCell_Distance(UltraSonicCell_Distance&& from) noexcept
    : UltraSonicCell_Distance() {
    *this = ::std::move(from);
  }

  inline UltraSonicCell_Distance& operator=(UltraSonicCell_Distance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UltraSonicCell_Distance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UltraSonicCell_Distance* internal_default_instance() {
    return reinterpret_cast<const UltraSonicCell_Distance*>(
               &_UltraSonicCell_Distance_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UltraSonicCell_Distance* other);
  friend void swap(UltraSonicCell_Distance& a, UltraSonicCell_Distance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UltraSonicCell_Distance* New() const PROTOBUF_FINAL { return New(NULL); }

  UltraSonicCell_Distance* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UltraSonicCell_Distance& from);
  void MergeFrom(const UltraSonicCell_Distance& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UltraSonicCell_Distance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UltraSonicCell_Distance_State State;
  static const State STATE_INVALID =
    UltraSonicCell_Distance_State_STATE_INVALID;
  static const State STATE_NORMAL =
    UltraSonicCell_Distance_State_STATE_NORMAL;
  static const State STATE_MODULE_OFFLINE =
    UltraSonicCell_Distance_State_STATE_MODULE_OFFLINE;
  static const State STATE_MODULE_FAULT =
    UltraSonicCell_Distance_State_STATE_MODULE_FAULT;
  static const State STATE_PROBE_OFFLINE =
    UltraSonicCell_Distance_State_STATE_PROBE_OFFLINE;
  static const State STATE_PROBE_FAULT =
    UltraSonicCell_Distance_State_STATE_PROBE_FAULT;
  static const State STATE_PROBE_SILENCE =
    UltraSonicCell_Distance_State_STATE_PROBE_SILENCE;
  static inline bool State_IsValid(int value) {
    return UltraSonicCell_Distance_State_IsValid(value);
  }
  static const State State_MIN =
    UltraSonicCell_Distance_State_State_MIN;
  static const State State_MAX =
    UltraSonicCell_Distance_State_State_MAX;
  static const int State_ARRAYSIZE =
    UltraSonicCell_Distance_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return UltraSonicCell_Distance_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return UltraSonicCell_Distance_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return UltraSonicCell_Distance_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .xsproto.perception.UltraSonicCell.Distance.State state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::xsproto::perception::UltraSonicCell_Distance_State state() const;
  void set_state(::xsproto::perception::UltraSonicCell_Distance_State value);

  // uint32 data_raw = 2;
  void clear_data_raw();
  static const int kDataRawFieldNumber = 2;
  ::google::protobuf::uint32 data_raw() const;
  void set_data_raw(::google::protobuf::uint32 value);

  // uint32 data_predict = 3;
  void clear_data_predict();
  static const int kDataPredictFieldNumber = 3;
  ::google::protobuf::uint32 data_predict() const;
  void set_data_predict(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xsproto.perception.UltraSonicCell.Distance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int state_;
  ::google::protobuf::uint32 data_raw_;
  ::google::protobuf::uint32 data_predict_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_2fultrasonic_5fdata_2eproto::TableStruct;
  friend void ::protobuf_perception_2fultrasonic_5fdata_2eproto::InitDefaultsUltraSonicCell_DistanceImpl();
};
// -------------------------------------------------------------------

class UltraSonicCell : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.perception.UltraSonicCell) */ {
 public:
  UltraSonicCell();
  virtual ~UltraSonicCell();

  UltraSonicCell(const UltraSonicCell& from);

  inline UltraSonicCell& operator=(const UltraSonicCell& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UltraSonicCell(UltraSonicCell&& from) noexcept
    : UltraSonicCell() {
    *this = ::std::move(from);
  }

  inline UltraSonicCell& operator=(UltraSonicCell&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UltraSonicCell& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UltraSonicCell* internal_default_instance() {
    return reinterpret_cast<const UltraSonicCell*>(
               &_UltraSonicCell_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UltraSonicCell* other);
  friend void swap(UltraSonicCell& a, UltraSonicCell& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UltraSonicCell* New() const PROTOBUF_FINAL { return New(NULL); }

  UltraSonicCell* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UltraSonicCell& from);
  void MergeFrom(const UltraSonicCell& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UltraSonicCell* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UltraSonicCell_Distance Distance;

  // accessors -------------------------------------------------------

  // .xsproto.perception.UltraSonicCell.Distance distance = 6;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 6;
  const ::xsproto::perception::UltraSonicCell_Distance& distance() const;
  ::xsproto::perception::UltraSonicCell_Distance* release_distance();
  ::xsproto::perception::UltraSonicCell_Distance* mutable_distance();
  void set_allocated_distance(::xsproto::perception::UltraSonicCell_Distance* distance);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // sint32 x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // sint32 y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // sint32 z = 4;
  void clear_z();
  static const int kZFieldNumber = 4;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // float direction = 5;
  void clear_direction();
  static const int kDirectionFieldNumber = 5;
  float direction() const;
  void set_direction(float value);

  // @@protoc_insertion_point(class_scope:xsproto.perception.UltraSonicCell)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xsproto::perception::UltraSonicCell_Distance* distance_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 z_;
  float direction_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_2fultrasonic_5fdata_2eproto::TableStruct;
  friend void ::protobuf_perception_2fultrasonic_5fdata_2eproto::InitDefaultsUltraSonicCellImpl();
};
// -------------------------------------------------------------------

class UltraSonicData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.perception.UltraSonicData) */ {
 public:
  UltraSonicData();
  virtual ~UltraSonicData();

  UltraSonicData(const UltraSonicData& from);

  inline UltraSonicData& operator=(const UltraSonicData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UltraSonicData(UltraSonicData&& from) noexcept
    : UltraSonicData() {
    *this = ::std::move(from);
  }

  inline UltraSonicData& operator=(UltraSonicData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UltraSonicData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UltraSonicData* internal_default_instance() {
    return reinterpret_cast<const UltraSonicData*>(
               &_UltraSonicData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UltraSonicData* other);
  friend void swap(UltraSonicData& a, UltraSonicData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UltraSonicData* New() const PROTOBUF_FINAL { return New(NULL); }

  UltraSonicData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UltraSonicData& from);
  void MergeFrom(const UltraSonicData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UltraSonicData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xsproto.perception.UltraSonicCell cells = 2;
  int cells_size() const;
  void clear_cells();
  static const int kCellsFieldNumber = 2;
  const ::xsproto::perception::UltraSonicCell& cells(int index) const;
  ::xsproto::perception::UltraSonicCell* mutable_cells(int index);
  ::xsproto::perception::UltraSonicCell* add_cells();
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::UltraSonicCell >*
      mutable_cells();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::UltraSonicCell >&
      cells() const;

  // .xsproto.base.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::xsproto::base::Header& header() const;
  ::xsproto::base::Header* release_header();
  ::xsproto::base::Header* mutable_header();
  void set_allocated_header(::xsproto::base::Header* header);

  // @@protoc_insertion_point(class_scope:xsproto.perception.UltraSonicData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::UltraSonicCell > cells_;
  ::xsproto::base::Header* header_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_2fultrasonic_5fdata_2eproto::TableStruct;
  friend void ::protobuf_perception_2fultrasonic_5fdata_2eproto::InitDefaultsUltraSonicDataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UltraSonicCell_Distance

// .xsproto.perception.UltraSonicCell.Distance.State state = 1;
inline void UltraSonicCell_Distance::clear_state() {
  state_ = 0;
}
inline ::xsproto::perception::UltraSonicCell_Distance_State UltraSonicCell_Distance::state() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.UltraSonicCell.Distance.state)
  return static_cast< ::xsproto::perception::UltraSonicCell_Distance_State >(state_);
}
inline void UltraSonicCell_Distance::set_state(::xsproto::perception::UltraSonicCell_Distance_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.UltraSonicCell.Distance.state)
}

// uint32 data_raw = 2;
inline void UltraSonicCell_Distance::clear_data_raw() {
  data_raw_ = 0u;
}
inline ::google::protobuf::uint32 UltraSonicCell_Distance::data_raw() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.UltraSonicCell.Distance.data_raw)
  return data_raw_;
}
inline void UltraSonicCell_Distance::set_data_raw(::google::protobuf::uint32 value) {
  
  data_raw_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.UltraSonicCell.Distance.data_raw)
}

// uint32 data_predict = 3;
inline void UltraSonicCell_Distance::clear_data_predict() {
  data_predict_ = 0u;
}
inline ::google::protobuf::uint32 UltraSonicCell_Distance::data_predict() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.UltraSonicCell.Distance.data_predict)
  return data_predict_;
}
inline void UltraSonicCell_Distance::set_data_predict(::google::protobuf::uint32 value) {
  
  data_predict_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.UltraSonicCell.Distance.data_predict)
}

// -------------------------------------------------------------------

// UltraSonicCell

// uint32 id = 1;
inline void UltraSonicCell::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 UltraSonicCell::id() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.UltraSonicCell.id)
  return id_;
}
inline void UltraSonicCell::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.UltraSonicCell.id)
}

// sint32 x = 2;
inline void UltraSonicCell::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 UltraSonicCell::x() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.UltraSonicCell.x)
  return x_;
}
inline void UltraSonicCell::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.UltraSonicCell.x)
}

// sint32 y = 3;
inline void UltraSonicCell::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 UltraSonicCell::y() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.UltraSonicCell.y)
  return y_;
}
inline void UltraSonicCell::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.UltraSonicCell.y)
}

// sint32 z = 4;
inline void UltraSonicCell::clear_z() {
  z_ = 0;
}
inline ::google::protobuf::int32 UltraSonicCell::z() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.UltraSonicCell.z)
  return z_;
}
inline void UltraSonicCell::set_z(::google::protobuf::int32 value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.UltraSonicCell.z)
}

// float direction = 5;
inline void UltraSonicCell::clear_direction() {
  direction_ = 0;
}
inline float UltraSonicCell::direction() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.UltraSonicCell.direction)
  return direction_;
}
inline void UltraSonicCell::set_direction(float value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.UltraSonicCell.direction)
}

// .xsproto.perception.UltraSonicCell.Distance distance = 6;
inline bool UltraSonicCell::has_distance() const {
  return this != internal_default_instance() && distance_ != NULL;
}
inline void UltraSonicCell::clear_distance() {
  if (GetArenaNoVirtual() == NULL && distance_ != NULL) {
    delete distance_;
  }
  distance_ = NULL;
}
inline const ::xsproto::perception::UltraSonicCell_Distance& UltraSonicCell::distance() const {
  const ::xsproto::perception::UltraSonicCell_Distance* p = distance_;
  // @@protoc_insertion_point(field_get:xsproto.perception.UltraSonicCell.distance)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::perception::UltraSonicCell_Distance*>(
      &::xsproto::perception::_UltraSonicCell_Distance_default_instance_);
}
inline ::xsproto::perception::UltraSonicCell_Distance* UltraSonicCell::release_distance() {
  // @@protoc_insertion_point(field_release:xsproto.perception.UltraSonicCell.distance)
  
  ::xsproto::perception::UltraSonicCell_Distance* temp = distance_;
  distance_ = NULL;
  return temp;
}
inline ::xsproto::perception::UltraSonicCell_Distance* UltraSonicCell::mutable_distance() {
  
  if (distance_ == NULL) {
    distance_ = new ::xsproto::perception::UltraSonicCell_Distance;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.perception.UltraSonicCell.distance)
  return distance_;
}
inline void UltraSonicCell::set_allocated_distance(::xsproto::perception::UltraSonicCell_Distance* distance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete distance_;
  }
  if (distance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      distance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distance, submessage_arena);
    }
    
  } else {
    
  }
  distance_ = distance;
  // @@protoc_insertion_point(field_set_allocated:xsproto.perception.UltraSonicCell.distance)
}

// -------------------------------------------------------------------

// UltraSonicData

// .xsproto.base.Header header = 1;
inline bool UltraSonicData::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::xsproto::base::Header& UltraSonicData::header() const {
  const ::xsproto::base::Header* p = header_;
  // @@protoc_insertion_point(field_get:xsproto.perception.UltraSonicData.header)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::base::Header*>(
      &::xsproto::base::_Header_default_instance_);
}
inline ::xsproto::base::Header* UltraSonicData::release_header() {
  // @@protoc_insertion_point(field_release:xsproto.perception.UltraSonicData.header)
  
  ::xsproto::base::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::xsproto::base::Header* UltraSonicData::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::xsproto::base::Header;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.perception.UltraSonicData.header)
  return header_;
}
inline void UltraSonicData::set_allocated_header(::xsproto::base::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:xsproto.perception.UltraSonicData.header)
}

// repeated .xsproto.perception.UltraSonicCell cells = 2;
inline int UltraSonicData::cells_size() const {
  return cells_.size();
}
inline void UltraSonicData::clear_cells() {
  cells_.Clear();
}
inline const ::xsproto::perception::UltraSonicCell& UltraSonicData::cells(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.perception.UltraSonicData.cells)
  return cells_.Get(index);
}
inline ::xsproto::perception::UltraSonicCell* UltraSonicData::mutable_cells(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.perception.UltraSonicData.cells)
  return cells_.Mutable(index);
}
inline ::xsproto::perception::UltraSonicCell* UltraSonicData::add_cells() {
  // @@protoc_insertion_point(field_add:xsproto.perception.UltraSonicData.cells)
  return cells_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::perception::UltraSonicCell >*
UltraSonicData::mutable_cells() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.perception.UltraSonicData.cells)
  return &cells_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::UltraSonicCell >&
UltraSonicData::cells() const {
  // @@protoc_insertion_point(field_list:xsproto.perception.UltraSonicData.cells)
  return cells_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace xsproto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xsproto::perception::UltraSonicCell_Distance_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::perception::UltraSonicCell_Distance_State>() {
  return ::xsproto::perception::UltraSonicCell_Distance_State_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_perception_2fultrasonic_5fdata_2eproto__INCLUDED
