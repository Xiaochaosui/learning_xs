// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/geometry.proto

#ifndef PROTOBUF_common_2fgeometry_2eproto__INCLUDED
#define PROTOBUF_common_2fgeometry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_common_2fgeometry_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPoint2DImpl();
void InitDefaultsPoint2D();
void InitDefaultsPoint3DImpl();
void InitDefaultsPoint3D();
void InitDefaultsTimestampedPoint3DImpl();
void InitDefaultsTimestampedPoint3D();
inline void InitDefaults() {
  InitDefaultsPoint2D();
  InitDefaultsPoint3D();
  InitDefaultsTimestampedPoint3D();
}
}  // namespace protobuf_common_2fgeometry_2eproto
namespace xsproto {
namespace common {
class Point2D;
class Point2DDefaultTypeInternal;
extern Point2DDefaultTypeInternal _Point2D_default_instance_;
class Point3D;
class Point3DDefaultTypeInternal;
extern Point3DDefaultTypeInternal _Point3D_default_instance_;
class TimestampedPoint3D;
class TimestampedPoint3DDefaultTypeInternal;
extern TimestampedPoint3DDefaultTypeInternal _TimestampedPoint3D_default_instance_;
}  // namespace common
}  // namespace xsproto
namespace xsproto {
namespace common {

// ===================================================================

class Point2D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.common.Point2D) */ {
 public:
  Point2D();
  virtual ~Point2D();

  Point2D(const Point2D& from);

  inline Point2D& operator=(const Point2D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point2D(Point2D&& from) noexcept
    : Point2D() {
    *this = ::std::move(from);
  }

  inline Point2D& operator=(Point2D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Point2D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point2D* internal_default_instance() {
    return reinterpret_cast<const Point2D*>(
               &_Point2D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Point2D* other);
  friend void swap(Point2D& a, Point2D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point2D* New() const PROTOBUF_FINAL { return New(NULL); }

  Point2D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point2D& from);
  void MergeFrom(const Point2D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point2D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:xsproto.common.Point2D)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_2fgeometry_2eproto::TableStruct;
  friend void ::protobuf_common_2fgeometry_2eproto::InitDefaultsPoint2DImpl();
};
// -------------------------------------------------------------------

class Point3D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.common.Point3D) */ {
 public:
  Point3D();
  virtual ~Point3D();

  Point3D(const Point3D& from);

  inline Point3D& operator=(const Point3D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point3D(Point3D&& from) noexcept
    : Point3D() {
    *this = ::std::move(from);
  }

  inline Point3D& operator=(Point3D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Point3D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point3D* internal_default_instance() {
    return reinterpret_cast<const Point3D*>(
               &_Point3D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Point3D* other);
  friend void swap(Point3D& a, Point3D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point3D* New() const PROTOBUF_FINAL { return New(NULL); }

  Point3D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point3D& from);
  void MergeFrom(const Point3D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:xsproto.common.Point3D)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_2fgeometry_2eproto::TableStruct;
  friend void ::protobuf_common_2fgeometry_2eproto::InitDefaultsPoint3DImpl();
};
// -------------------------------------------------------------------

class TimestampedPoint3D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.common.TimestampedPoint3D) */ {
 public:
  TimestampedPoint3D();
  virtual ~TimestampedPoint3D();

  TimestampedPoint3D(const TimestampedPoint3D& from);

  inline TimestampedPoint3D& operator=(const TimestampedPoint3D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TimestampedPoint3D(TimestampedPoint3D&& from) noexcept
    : TimestampedPoint3D() {
    *this = ::std::move(from);
  }

  inline TimestampedPoint3D& operator=(TimestampedPoint3D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TimestampedPoint3D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimestampedPoint3D* internal_default_instance() {
    return reinterpret_cast<const TimestampedPoint3D*>(
               &_TimestampedPoint3D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(TimestampedPoint3D* other);
  friend void swap(TimestampedPoint3D& a, TimestampedPoint3D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TimestampedPoint3D* New() const PROTOBUF_FINAL { return New(NULL); }

  TimestampedPoint3D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TimestampedPoint3D& from);
  void MergeFrom(const TimestampedPoint3D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TimestampedPoint3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // double timestamp = 4;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  double timestamp() const;
  void set_timestamp(double value);

  // @@protoc_insertion_point(class_scope:xsproto.common.TimestampedPoint3D)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  double timestamp_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_2fgeometry_2eproto::TableStruct;
  friend void ::protobuf_common_2fgeometry_2eproto::InitDefaultsTimestampedPoint3DImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Point2D

// double x = 1;
inline void Point2D::clear_x() {
  x_ = 0;
}
inline double Point2D::x() const {
  // @@protoc_insertion_point(field_get:xsproto.common.Point2D.x)
  return x_;
}
inline void Point2D::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:xsproto.common.Point2D.x)
}

// double y = 2;
inline void Point2D::clear_y() {
  y_ = 0;
}
inline double Point2D::y() const {
  // @@protoc_insertion_point(field_get:xsproto.common.Point2D.y)
  return y_;
}
inline void Point2D::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:xsproto.common.Point2D.y)
}

// -------------------------------------------------------------------

// Point3D

// double x = 1;
inline void Point3D::clear_x() {
  x_ = 0;
}
inline double Point3D::x() const {
  // @@protoc_insertion_point(field_get:xsproto.common.Point3D.x)
  return x_;
}
inline void Point3D::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:xsproto.common.Point3D.x)
}

// double y = 2;
inline void Point3D::clear_y() {
  y_ = 0;
}
inline double Point3D::y() const {
  // @@protoc_insertion_point(field_get:xsproto.common.Point3D.y)
  return y_;
}
inline void Point3D::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:xsproto.common.Point3D.y)
}

// double z = 3;
inline void Point3D::clear_z() {
  z_ = 0;
}
inline double Point3D::z() const {
  // @@protoc_insertion_point(field_get:xsproto.common.Point3D.z)
  return z_;
}
inline void Point3D::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:xsproto.common.Point3D.z)
}

// -------------------------------------------------------------------

// TimestampedPoint3D

// double x = 1;
inline void TimestampedPoint3D::clear_x() {
  x_ = 0;
}
inline double TimestampedPoint3D::x() const {
  // @@protoc_insertion_point(field_get:xsproto.common.TimestampedPoint3D.x)
  return x_;
}
inline void TimestampedPoint3D::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:xsproto.common.TimestampedPoint3D.x)
}

// double y = 2;
inline void TimestampedPoint3D::clear_y() {
  y_ = 0;
}
inline double TimestampedPoint3D::y() const {
  // @@protoc_insertion_point(field_get:xsproto.common.TimestampedPoint3D.y)
  return y_;
}
inline void TimestampedPoint3D::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:xsproto.common.TimestampedPoint3D.y)
}

// double z = 3;
inline void TimestampedPoint3D::clear_z() {
  z_ = 0;
}
inline double TimestampedPoint3D::z() const {
  // @@protoc_insertion_point(field_get:xsproto.common.TimestampedPoint3D.z)
  return z_;
}
inline void TimestampedPoint3D::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:xsproto.common.TimestampedPoint3D.z)
}

// double timestamp = 4;
inline void TimestampedPoint3D::clear_timestamp() {
  timestamp_ = 0;
}
inline double TimestampedPoint3D::timestamp() const {
  // @@protoc_insertion_point(field_get:xsproto.common.TimestampedPoint3D.timestamp)
  return timestamp_;
}
inline void TimestampedPoint3D::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:xsproto.common.TimestampedPoint3D.timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace xsproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2fgeometry_2eproto__INCLUDED
