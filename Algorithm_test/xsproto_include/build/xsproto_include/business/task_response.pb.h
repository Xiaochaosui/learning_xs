// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: business/task_response.proto

#ifndef PROTOBUF_business_2ftask_5fresponse_2eproto__INCLUDED
#define PROTOBUF_business_2ftask_5fresponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "base/header.pb.h"
#include <google/protobuf/any.pb.h>
#include "business/ci_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_business_2ftask_5fresponse_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsTaskResponseImpl();
void InitDefaultsTaskResponse();
void InitDefaultsAssignResponseImpl();
void InitDefaultsAssignResponse();
inline void InitDefaults() {
  InitDefaultsTaskResponse();
  InitDefaultsAssignResponse();
}
}  // namespace protobuf_business_2ftask_5fresponse_2eproto
namespace xsproto {
namespace communication {
class AssignResponse;
class AssignResponseDefaultTypeInternal;
extern AssignResponseDefaultTypeInternal _AssignResponse_default_instance_;
class TaskResponse;
class TaskResponseDefaultTypeInternal;
extern TaskResponseDefaultTypeInternal _TaskResponse_default_instance_;
}  // namespace communication
}  // namespace xsproto
namespace xsproto {
namespace communication {

// ===================================================================

class TaskResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.TaskResponse) */ {
 public:
  TaskResponse();
  virtual ~TaskResponse();

  TaskResponse(const TaskResponse& from);

  inline TaskResponse& operator=(const TaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TaskResponse(TaskResponse&& from) noexcept
    : TaskResponse() {
    *this = ::std::move(from);
  }

  inline TaskResponse& operator=(TaskResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TaskResponse* internal_default_instance() {
    return reinterpret_cast<const TaskResponse*>(
               &_TaskResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TaskResponse* other);
  friend void swap(TaskResponse& a, TaskResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TaskResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  TaskResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TaskResponse& from);
  void MergeFrom(const TaskResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TaskResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_msg = 6;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 6;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_error_msg(::std::string&& value);
  #endif
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // .xsproto.base.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::xsproto::base::Header& header() const;
  ::xsproto::base::Header* release_header();
  ::xsproto::base::Header* mutable_header();
  void set_allocated_header(::xsproto::base::Header* header);

  // .google.protobuf.Any msg_content = 7;
  bool has_msg_content() const;
  void clear_msg_content();
  static const int kMsgContentFieldNumber = 7;
  const ::google::protobuf::Any& msg_content() const;
  ::google::protobuf::Any* release_msg_content();
  ::google::protobuf::Any* mutable_msg_content();
  void set_allocated_msg_content(::google::protobuf::Any* msg_content);

  // int64 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // int32 seq_num = 3;
  void clear_seq_num();
  static const int kSeqNumFieldNumber = 3;
  ::google::protobuf::int32 seq_num() const;
  void set_seq_num(::google::protobuf::int32 value);

  // int32 msg_code = 4;
  void clear_msg_code();
  static const int kMsgCodeFieldNumber = 4;
  ::google::protobuf::int32 msg_code() const;
  void set_msg_code(::google::protobuf::int32 value);

  // int32 result = 5;
  void clear_result();
  static const int kResultFieldNumber = 5;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.TaskResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  ::xsproto::base::Header* header_;
  ::google::protobuf::Any* msg_content_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 seq_num_;
  ::google::protobuf::int32 msg_code_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2ftask_5fresponse_2eproto::TableStruct;
  friend void ::protobuf_business_2ftask_5fresponse_2eproto::InitDefaultsTaskResponseImpl();
};
// -------------------------------------------------------------------

class AssignResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.AssignResponse) */ {
 public:
  AssignResponse();
  virtual ~AssignResponse();

  AssignResponse(const AssignResponse& from);

  inline AssignResponse& operator=(const AssignResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AssignResponse(AssignResponse&& from) noexcept
    : AssignResponse() {
    *this = ::std::move(from);
  }

  inline AssignResponse& operator=(AssignResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AssignResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AssignResponse* internal_default_instance() {
    return reinterpret_cast<const AssignResponse*>(
               &_AssignResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AssignResponse* other);
  friend void swap(AssignResponse& a, AssignResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AssignResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AssignResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AssignResponse& from);
  void MergeFrom(const AssignResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AssignResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string station_id = 3;
  void clear_station_id();
  static const int kStationIdFieldNumber = 3;
  const ::std::string& station_id() const;
  void set_station_id(const ::std::string& value);
  #if LANG_CXX11
  void set_station_id(::std::string&& value);
  #endif
  void set_station_id(const char* value);
  void set_station_id(const char* value, size_t size);
  ::std::string* mutable_station_id();
  ::std::string* release_station_id();
  void set_allocated_station_id(::std::string* station_id);

  // string station_name = 4;
  void clear_station_name();
  static const int kStationNameFieldNumber = 4;
  const ::std::string& station_name() const;
  void set_station_name(const ::std::string& value);
  #if LANG_CXX11
  void set_station_name(::std::string&& value);
  #endif
  void set_station_name(const char* value);
  void set_station_name(const char* value, size_t size);
  ::std::string* mutable_station_name();
  ::std::string* release_station_name();
  void set_allocated_station_name(::std::string* station_name);

  // string path_name = 5;
  void clear_path_name();
  static const int kPathNameFieldNumber = 5;
  const ::std::string& path_name() const;
  void set_path_name(const ::std::string& value);
  #if LANG_CXX11
  void set_path_name(::std::string&& value);
  #endif
  void set_path_name(const char* value);
  void set_path_name(const char* value, size_t size);
  ::std::string* mutable_path_name();
  ::std::string* release_path_name();
  void set_allocated_path_name(::std::string* path_name);

  // .xsproto.communication.PointGPS start_point = 1;
  bool has_start_point() const;
  void clear_start_point();
  static const int kStartPointFieldNumber = 1;
  const ::xsproto::communication::PointGPS& start_point() const;
  ::xsproto::communication::PointGPS* release_start_point();
  ::xsproto::communication::PointGPS* mutable_start_point();
  void set_allocated_start_point(::xsproto::communication::PointGPS* start_point);

  // .xsproto.communication.PointGPS end_point = 2;
  bool has_end_point() const;
  void clear_end_point();
  static const int kEndPointFieldNumber = 2;
  const ::xsproto::communication::PointGPS& end_point() const;
  ::xsproto::communication::PointGPS* release_end_point();
  ::xsproto::communication::PointGPS* mutable_end_point();
  void set_allocated_end_point(::xsproto::communication::PointGPS* end_point);

  // int32 point_count = 6;
  void clear_point_count();
  static const int kPointCountFieldNumber = 6;
  ::google::protobuf::int32 point_count() const;
  void set_point_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.AssignResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr station_id_;
  ::google::protobuf::internal::ArenaStringPtr station_name_;
  ::google::protobuf::internal::ArenaStringPtr path_name_;
  ::xsproto::communication::PointGPS* start_point_;
  ::xsproto::communication::PointGPS* end_point_;
  ::google::protobuf::int32 point_count_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2ftask_5fresponse_2eproto::TableStruct;
  friend void ::protobuf_business_2ftask_5fresponse_2eproto::InitDefaultsAssignResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TaskResponse

// .xsproto.base.Header header = 1;
inline bool TaskResponse::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::xsproto::base::Header& TaskResponse::header() const {
  const ::xsproto::base::Header* p = header_;
  // @@protoc_insertion_point(field_get:xsproto.communication.TaskResponse.header)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::base::Header*>(
      &::xsproto::base::_Header_default_instance_);
}
inline ::xsproto::base::Header* TaskResponse::release_header() {
  // @@protoc_insertion_point(field_release:xsproto.communication.TaskResponse.header)
  
  ::xsproto::base::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::xsproto::base::Header* TaskResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::xsproto::base::Header;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.TaskResponse.header)
  return header_;
}
inline void TaskResponse::set_allocated_header(::xsproto::base::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.TaskResponse.header)
}

// int64 timestamp = 2;
inline void TaskResponse::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TaskResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.TaskResponse.timestamp)
  return timestamp_;
}
inline void TaskResponse::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.TaskResponse.timestamp)
}

// int32 seq_num = 3;
inline void TaskResponse::clear_seq_num() {
  seq_num_ = 0;
}
inline ::google::protobuf::int32 TaskResponse::seq_num() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.TaskResponse.seq_num)
  return seq_num_;
}
inline void TaskResponse::set_seq_num(::google::protobuf::int32 value) {
  
  seq_num_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.TaskResponse.seq_num)
}

// int32 msg_code = 4;
inline void TaskResponse::clear_msg_code() {
  msg_code_ = 0;
}
inline ::google::protobuf::int32 TaskResponse::msg_code() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.TaskResponse.msg_code)
  return msg_code_;
}
inline void TaskResponse::set_msg_code(::google::protobuf::int32 value) {
  
  msg_code_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.TaskResponse.msg_code)
}

// int32 result = 5;
inline void TaskResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 TaskResponse::result() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.TaskResponse.result)
  return result_;
}
inline void TaskResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.TaskResponse.result)
}

// string error_msg = 6;
inline void TaskResponse::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TaskResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.TaskResponse.error_msg)
  return error_msg_.GetNoArena();
}
inline void TaskResponse::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.TaskResponse.error_msg)
}
#if LANG_CXX11
inline void TaskResponse::set_error_msg(::std::string&& value) {
  
  error_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.TaskResponse.error_msg)
}
#endif
inline void TaskResponse::set_error_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.TaskResponse.error_msg)
}
inline void TaskResponse::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.TaskResponse.error_msg)
}
inline ::std::string* TaskResponse::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.TaskResponse.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:xsproto.communication.TaskResponse.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskResponse::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.TaskResponse.error_msg)
}

// .google.protobuf.Any msg_content = 7;
inline bool TaskResponse::has_msg_content() const {
  return this != internal_default_instance() && msg_content_ != NULL;
}
inline const ::google::protobuf::Any& TaskResponse::msg_content() const {
  const ::google::protobuf::Any* p = msg_content_;
  // @@protoc_insertion_point(field_get:xsproto.communication.TaskResponse.msg_content)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* TaskResponse::release_msg_content() {
  // @@protoc_insertion_point(field_release:xsproto.communication.TaskResponse.msg_content)
  
  ::google::protobuf::Any* temp = msg_content_;
  msg_content_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* TaskResponse::mutable_msg_content() {
  
  if (msg_content_ == NULL) {
    msg_content_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.TaskResponse.msg_content)
  return msg_content_;
}
inline void TaskResponse::set_allocated_msg_content(::google::protobuf::Any* msg_content) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(msg_content_);
  }
  if (msg_content) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg_content = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg_content, submessage_arena);
    }
    
  } else {
    
  }
  msg_content_ = msg_content;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.TaskResponse.msg_content)
}

// -------------------------------------------------------------------

// AssignResponse

// .xsproto.communication.PointGPS start_point = 1;
inline bool AssignResponse::has_start_point() const {
  return this != internal_default_instance() && start_point_ != NULL;
}
inline const ::xsproto::communication::PointGPS& AssignResponse::start_point() const {
  const ::xsproto::communication::PointGPS* p = start_point_;
  // @@protoc_insertion_point(field_get:xsproto.communication.AssignResponse.start_point)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::communication::PointGPS*>(
      &::xsproto::communication::_PointGPS_default_instance_);
}
inline ::xsproto::communication::PointGPS* AssignResponse::release_start_point() {
  // @@protoc_insertion_point(field_release:xsproto.communication.AssignResponse.start_point)
  
  ::xsproto::communication::PointGPS* temp = start_point_;
  start_point_ = NULL;
  return temp;
}
inline ::xsproto::communication::PointGPS* AssignResponse::mutable_start_point() {
  
  if (start_point_ == NULL) {
    start_point_ = new ::xsproto::communication::PointGPS;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.AssignResponse.start_point)
  return start_point_;
}
inline void AssignResponse::set_allocated_start_point(::xsproto::communication::PointGPS* start_point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_point_);
  }
  if (start_point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_point, submessage_arena);
    }
    
  } else {
    
  }
  start_point_ = start_point;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.AssignResponse.start_point)
}

// .xsproto.communication.PointGPS end_point = 2;
inline bool AssignResponse::has_end_point() const {
  return this != internal_default_instance() && end_point_ != NULL;
}
inline const ::xsproto::communication::PointGPS& AssignResponse::end_point() const {
  const ::xsproto::communication::PointGPS* p = end_point_;
  // @@protoc_insertion_point(field_get:xsproto.communication.AssignResponse.end_point)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::communication::PointGPS*>(
      &::xsproto::communication::_PointGPS_default_instance_);
}
inline ::xsproto::communication::PointGPS* AssignResponse::release_end_point() {
  // @@protoc_insertion_point(field_release:xsproto.communication.AssignResponse.end_point)
  
  ::xsproto::communication::PointGPS* temp = end_point_;
  end_point_ = NULL;
  return temp;
}
inline ::xsproto::communication::PointGPS* AssignResponse::mutable_end_point() {
  
  if (end_point_ == NULL) {
    end_point_ = new ::xsproto::communication::PointGPS;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.AssignResponse.end_point)
  return end_point_;
}
inline void AssignResponse::set_allocated_end_point(::xsproto::communication::PointGPS* end_point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(end_point_);
  }
  if (end_point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      end_point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_point, submessage_arena);
    }
    
  } else {
    
  }
  end_point_ = end_point;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.AssignResponse.end_point)
}

// string station_id = 3;
inline void AssignResponse::clear_station_id() {
  station_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AssignResponse::station_id() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.AssignResponse.station_id)
  return station_id_.GetNoArena();
}
inline void AssignResponse::set_station_id(const ::std::string& value) {
  
  station_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.AssignResponse.station_id)
}
#if LANG_CXX11
inline void AssignResponse::set_station_id(::std::string&& value) {
  
  station_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.AssignResponse.station_id)
}
#endif
inline void AssignResponse::set_station_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  station_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.AssignResponse.station_id)
}
inline void AssignResponse::set_station_id(const char* value, size_t size) {
  
  station_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.AssignResponse.station_id)
}
inline ::std::string* AssignResponse::mutable_station_id() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.AssignResponse.station_id)
  return station_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AssignResponse::release_station_id() {
  // @@protoc_insertion_point(field_release:xsproto.communication.AssignResponse.station_id)
  
  return station_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssignResponse::set_allocated_station_id(::std::string* station_id) {
  if (station_id != NULL) {
    
  } else {
    
  }
  station_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), station_id);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.AssignResponse.station_id)
}

// string station_name = 4;
inline void AssignResponse::clear_station_name() {
  station_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AssignResponse::station_name() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.AssignResponse.station_name)
  return station_name_.GetNoArena();
}
inline void AssignResponse::set_station_name(const ::std::string& value) {
  
  station_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.AssignResponse.station_name)
}
#if LANG_CXX11
inline void AssignResponse::set_station_name(::std::string&& value) {
  
  station_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.AssignResponse.station_name)
}
#endif
inline void AssignResponse::set_station_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  station_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.AssignResponse.station_name)
}
inline void AssignResponse::set_station_name(const char* value, size_t size) {
  
  station_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.AssignResponse.station_name)
}
inline ::std::string* AssignResponse::mutable_station_name() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.AssignResponse.station_name)
  return station_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AssignResponse::release_station_name() {
  // @@protoc_insertion_point(field_release:xsproto.communication.AssignResponse.station_name)
  
  return station_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssignResponse::set_allocated_station_name(::std::string* station_name) {
  if (station_name != NULL) {
    
  } else {
    
  }
  station_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), station_name);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.AssignResponse.station_name)
}

// string path_name = 5;
inline void AssignResponse::clear_path_name() {
  path_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AssignResponse::path_name() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.AssignResponse.path_name)
  return path_name_.GetNoArena();
}
inline void AssignResponse::set_path_name(const ::std::string& value) {
  
  path_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.AssignResponse.path_name)
}
#if LANG_CXX11
inline void AssignResponse::set_path_name(::std::string&& value) {
  
  path_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.AssignResponse.path_name)
}
#endif
inline void AssignResponse::set_path_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.AssignResponse.path_name)
}
inline void AssignResponse::set_path_name(const char* value, size_t size) {
  
  path_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.AssignResponse.path_name)
}
inline ::std::string* AssignResponse::mutable_path_name() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.AssignResponse.path_name)
  return path_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AssignResponse::release_path_name() {
  // @@protoc_insertion_point(field_release:xsproto.communication.AssignResponse.path_name)
  
  return path_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssignResponse::set_allocated_path_name(::std::string* path_name) {
  if (path_name != NULL) {
    
  } else {
    
  }
  path_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path_name);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.AssignResponse.path_name)
}

// int32 point_count = 6;
inline void AssignResponse::clear_point_count() {
  point_count_ = 0;
}
inline ::google::protobuf::int32 AssignResponse::point_count() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.AssignResponse.point_count)
  return point_count_;
}
inline void AssignResponse::set_point_count(::google::protobuf::int32 value) {
  
  point_count_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.AssignResponse.point_count)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace communication
}  // namespace xsproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_business_2ftask_5fresponse_2eproto__INCLUDED
