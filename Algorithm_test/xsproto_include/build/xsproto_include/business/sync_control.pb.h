// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: business/sync_control.proto

#ifndef PROTOBUF_business_2fsync_5fcontrol_2eproto__INCLUDED
#define PROTOBUF_business_2fsync_5fcontrol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_business_2fsync_5fcontrol_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSyncControl_RequestData_RequestPropertyImpl();
void InitDefaultsSyncControl_RequestData_RequestProperty();
void InitDefaultsSyncControl_RequestDataImpl();
void InitDefaultsSyncControl_RequestData();
void InitDefaultsSyncControlImpl();
void InitDefaultsSyncControl();
inline void InitDefaults() {
  InitDefaultsSyncControl_RequestData_RequestProperty();
  InitDefaultsSyncControl_RequestData();
  InitDefaultsSyncControl();
}
}  // namespace protobuf_business_2fsync_5fcontrol_2eproto
namespace xsproto {
namespace communication {
class SyncControl;
class SyncControlDefaultTypeInternal;
extern SyncControlDefaultTypeInternal _SyncControl_default_instance_;
class SyncControl_RequestData;
class SyncControl_RequestDataDefaultTypeInternal;
extern SyncControl_RequestDataDefaultTypeInternal _SyncControl_RequestData_default_instance_;
class SyncControl_RequestData_RequestProperty;
class SyncControl_RequestData_RequestPropertyDefaultTypeInternal;
extern SyncControl_RequestData_RequestPropertyDefaultTypeInternal _SyncControl_RequestData_RequestProperty_default_instance_;
}  // namespace communication
}  // namespace xsproto
namespace xsproto {
namespace communication {

enum SyncControl_RequestData_DataType {
  SyncControl_RequestData_DataType_VECTOR = 0,
  SyncControl_RequestData_DataType_MAP_TILE = 1,
  SyncControl_RequestData_DataType_HDMAP = 2,
  SyncControl_RequestData_DataType_MAP_3D = 3,
  SyncControl_RequestData_DataType_MAP_2D = 4,
  SyncControl_RequestData_DataType_POSE = 5,
  SyncControl_RequestData_DataType_PATH_NET = 6,
  SyncControl_RequestData_DataType_SyncControl_RequestData_DataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SyncControl_RequestData_DataType_SyncControl_RequestData_DataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SyncControl_RequestData_DataType_IsValid(int value);
const SyncControl_RequestData_DataType SyncControl_RequestData_DataType_DataType_MIN = SyncControl_RequestData_DataType_VECTOR;
const SyncControl_RequestData_DataType SyncControl_RequestData_DataType_DataType_MAX = SyncControl_RequestData_DataType_PATH_NET;
const int SyncControl_RequestData_DataType_DataType_ARRAYSIZE = SyncControl_RequestData_DataType_DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SyncControl_RequestData_DataType_descriptor();
inline const ::std::string& SyncControl_RequestData_DataType_Name(SyncControl_RequestData_DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SyncControl_RequestData_DataType_descriptor(), value);
}
inline bool SyncControl_RequestData_DataType_Parse(
    const ::std::string& name, SyncControl_RequestData_DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SyncControl_RequestData_DataType>(
    SyncControl_RequestData_DataType_descriptor(), name, value);
}
enum SyncControl_ControlType {
  SyncControl_ControlType_UPLOAD = 0,
  SyncControl_ControlType_DOWNLOAD = 1,
  SyncControl_ControlType_CANCEL = 2,
  SyncControl_ControlType_CHECK_MAP = 3,
  SyncControl_ControlType_SYNC_MAP_SERVER = 4,
  SyncControl_ControlType_SyncControl_ControlType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SyncControl_ControlType_SyncControl_ControlType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SyncControl_ControlType_IsValid(int value);
const SyncControl_ControlType SyncControl_ControlType_ControlType_MIN = SyncControl_ControlType_UPLOAD;
const SyncControl_ControlType SyncControl_ControlType_ControlType_MAX = SyncControl_ControlType_SYNC_MAP_SERVER;
const int SyncControl_ControlType_ControlType_ARRAYSIZE = SyncControl_ControlType_ControlType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SyncControl_ControlType_descriptor();
inline const ::std::string& SyncControl_ControlType_Name(SyncControl_ControlType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SyncControl_ControlType_descriptor(), value);
}
inline bool SyncControl_ControlType_Parse(
    const ::std::string& name, SyncControl_ControlType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SyncControl_ControlType>(
    SyncControl_ControlType_descriptor(), name, value);
}
// ===================================================================

class SyncControl_RequestData_RequestProperty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.SyncControl.RequestData.RequestProperty) */ {
 public:
  SyncControl_RequestData_RequestProperty();
  virtual ~SyncControl_RequestData_RequestProperty();

  SyncControl_RequestData_RequestProperty(const SyncControl_RequestData_RequestProperty& from);

  inline SyncControl_RequestData_RequestProperty& operator=(const SyncControl_RequestData_RequestProperty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncControl_RequestData_RequestProperty(SyncControl_RequestData_RequestProperty&& from) noexcept
    : SyncControl_RequestData_RequestProperty() {
    *this = ::std::move(from);
  }

  inline SyncControl_RequestData_RequestProperty& operator=(SyncControl_RequestData_RequestProperty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncControl_RequestData_RequestProperty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncControl_RequestData_RequestProperty* internal_default_instance() {
    return reinterpret_cast<const SyncControl_RequestData_RequestProperty*>(
               &_SyncControl_RequestData_RequestProperty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SyncControl_RequestData_RequestProperty* other);
  friend void swap(SyncControl_RequestData_RequestProperty& a, SyncControl_RequestData_RequestProperty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncControl_RequestData_RequestProperty* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncControl_RequestData_RequestProperty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncControl_RequestData_RequestProperty& from);
  void MergeFrom(const SyncControl_RequestData_RequestProperty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncControl_RequestData_RequestProperty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string vehicle_code = 1;
  void clear_vehicle_code();
  static const int kVehicleCodeFieldNumber = 1;
  const ::std::string& vehicle_code() const;
  void set_vehicle_code(const ::std::string& value);
  #if LANG_CXX11
  void set_vehicle_code(::std::string&& value);
  #endif
  void set_vehicle_code(const char* value);
  void set_vehicle_code(const char* value, size_t size);
  ::std::string* mutable_vehicle_code();
  ::std::string* release_vehicle_code();
  void set_allocated_vehicle_code(::std::string* vehicle_code);

  // string vehicle_name = 2;
  void clear_vehicle_name();
  static const int kVehicleNameFieldNumber = 2;
  const ::std::string& vehicle_name() const;
  void set_vehicle_name(const ::std::string& value);
  #if LANG_CXX11
  void set_vehicle_name(::std::string&& value);
  #endif
  void set_vehicle_name(const char* value);
  void set_vehicle_name(const char* value, size_t size);
  ::std::string* mutable_vehicle_name();
  ::std::string* release_vehicle_name();
  void set_allocated_vehicle_name(::std::string* vehicle_name);

  // string map_name = 3;
  void clear_map_name();
  static const int kMapNameFieldNumber = 3;
  const ::std::string& map_name() const;
  void set_map_name(const ::std::string& value);
  #if LANG_CXX11
  void set_map_name(::std::string&& value);
  #endif
  void set_map_name(const char* value);
  void set_map_name(const char* value, size_t size);
  ::std::string* mutable_map_name();
  ::std::string* release_map_name();
  void set_allocated_map_name(::std::string* map_name);

  // string site_name = 4;
  void clear_site_name();
  static const int kSiteNameFieldNumber = 4;
  const ::std::string& site_name() const;
  void set_site_name(const ::std::string& value);
  #if LANG_CXX11
  void set_site_name(::std::string&& value);
  #endif
  void set_site_name(const char* value);
  void set_site_name(const char* value, size_t size);
  ::std::string* mutable_site_name();
  ::std::string* release_site_name();
  void set_allocated_site_name(::std::string* site_name);

  // string sub_map_name = 5;
  void clear_sub_map_name();
  static const int kSubMapNameFieldNumber = 5;
  const ::std::string& sub_map_name() const;
  void set_sub_map_name(const ::std::string& value);
  #if LANG_CXX11
  void set_sub_map_name(::std::string&& value);
  #endif
  void set_sub_map_name(const char* value);
  void set_sub_map_name(const char* value, size_t size);
  ::std::string* mutable_sub_map_name();
  ::std::string* release_sub_map_name();
  void set_allocated_sub_map_name(::std::string* sub_map_name);

  // @@protoc_insertion_point(class_scope:xsproto.communication.SyncControl.RequestData.RequestProperty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vehicle_code_;
  ::google::protobuf::internal::ArenaStringPtr vehicle_name_;
  ::google::protobuf::internal::ArenaStringPtr map_name_;
  ::google::protobuf::internal::ArenaStringPtr site_name_;
  ::google::protobuf::internal::ArenaStringPtr sub_map_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2fsync_5fcontrol_2eproto::TableStruct;
  friend void ::protobuf_business_2fsync_5fcontrol_2eproto::InitDefaultsSyncControl_RequestData_RequestPropertyImpl();
};
// -------------------------------------------------------------------

class SyncControl_RequestData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.SyncControl.RequestData) */ {
 public:
  SyncControl_RequestData();
  virtual ~SyncControl_RequestData();

  SyncControl_RequestData(const SyncControl_RequestData& from);

  inline SyncControl_RequestData& operator=(const SyncControl_RequestData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncControl_RequestData(SyncControl_RequestData&& from) noexcept
    : SyncControl_RequestData() {
    *this = ::std::move(from);
  }

  inline SyncControl_RequestData& operator=(SyncControl_RequestData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncControl_RequestData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncControl_RequestData* internal_default_instance() {
    return reinterpret_cast<const SyncControl_RequestData*>(
               &_SyncControl_RequestData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SyncControl_RequestData* other);
  friend void swap(SyncControl_RequestData& a, SyncControl_RequestData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncControl_RequestData* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncControl_RequestData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncControl_RequestData& from);
  void MergeFrom(const SyncControl_RequestData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncControl_RequestData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SyncControl_RequestData_RequestProperty RequestProperty;

  typedef SyncControl_RequestData_DataType DataType;
  static const DataType VECTOR =
    SyncControl_RequestData_DataType_VECTOR;
  static const DataType MAP_TILE =
    SyncControl_RequestData_DataType_MAP_TILE;
  static const DataType HDMAP =
    SyncControl_RequestData_DataType_HDMAP;
  static const DataType MAP_3D =
    SyncControl_RequestData_DataType_MAP_3D;
  static const DataType MAP_2D =
    SyncControl_RequestData_DataType_MAP_2D;
  static const DataType POSE =
    SyncControl_RequestData_DataType_POSE;
  static const DataType PATH_NET =
    SyncControl_RequestData_DataType_PATH_NET;
  static inline bool DataType_IsValid(int value) {
    return SyncControl_RequestData_DataType_IsValid(value);
  }
  static const DataType DataType_MIN =
    SyncControl_RequestData_DataType_DataType_MIN;
  static const DataType DataType_MAX =
    SyncControl_RequestData_DataType_DataType_MAX;
  static const int DataType_ARRAYSIZE =
    SyncControl_RequestData_DataType_DataType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DataType_descriptor() {
    return SyncControl_RequestData_DataType_descriptor();
  }
  static inline const ::std::string& DataType_Name(DataType value) {
    return SyncControl_RequestData_DataType_Name(value);
  }
  static inline bool DataType_Parse(const ::std::string& name,
      DataType* value) {
    return SyncControl_RequestData_DataType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .xsproto.communication.SyncControl.RequestData.DataType data_types = 1;
  int data_types_size() const;
  void clear_data_types();
  static const int kDataTypesFieldNumber = 1;
  ::xsproto::communication::SyncControl_RequestData_DataType data_types(int index) const;
  void set_data_types(int index, ::xsproto::communication::SyncControl_RequestData_DataType value);
  void add_data_types(::xsproto::communication::SyncControl_RequestData_DataType value);
  const ::google::protobuf::RepeatedField<int>& data_types() const;
  ::google::protobuf::RepeatedField<int>* mutable_data_types();

  // string map_path = 3;
  void clear_map_path();
  static const int kMapPathFieldNumber = 3;
  const ::std::string& map_path() const;
  void set_map_path(const ::std::string& value);
  #if LANG_CXX11
  void set_map_path(::std::string&& value);
  #endif
  void set_map_path(const char* value);
  void set_map_path(const char* value, size_t size);
  ::std::string* mutable_map_path();
  ::std::string* release_map_path();
  void set_allocated_map_path(::std::string* map_path);

  // .xsproto.communication.SyncControl.RequestData.RequestProperty request = 2;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 2;
  const ::xsproto::communication::SyncControl_RequestData_RequestProperty& request() const;
  ::xsproto::communication::SyncControl_RequestData_RequestProperty* release_request();
  ::xsproto::communication::SyncControl_RequestData_RequestProperty* mutable_request();
  void set_allocated_request(::xsproto::communication::SyncControl_RequestData_RequestProperty* request);

  // @@protoc_insertion_point(class_scope:xsproto.communication.SyncControl.RequestData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> data_types_;
  mutable int _data_types_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr map_path_;
  ::xsproto::communication::SyncControl_RequestData_RequestProperty* request_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2fsync_5fcontrol_2eproto::TableStruct;
  friend void ::protobuf_business_2fsync_5fcontrol_2eproto::InitDefaultsSyncControl_RequestDataImpl();
};
// -------------------------------------------------------------------

class SyncControl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.SyncControl) */ {
 public:
  SyncControl();
  virtual ~SyncControl();

  SyncControl(const SyncControl& from);

  inline SyncControl& operator=(const SyncControl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncControl(SyncControl&& from) noexcept
    : SyncControl() {
    *this = ::std::move(from);
  }

  inline SyncControl& operator=(SyncControl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncControl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncControl* internal_default_instance() {
    return reinterpret_cast<const SyncControl*>(
               &_SyncControl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SyncControl* other);
  friend void swap(SyncControl& a, SyncControl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncControl* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncControl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncControl& from);
  void MergeFrom(const SyncControl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncControl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SyncControl_RequestData RequestData;

  typedef SyncControl_ControlType ControlType;
  static const ControlType UPLOAD =
    SyncControl_ControlType_UPLOAD;
  static const ControlType DOWNLOAD =
    SyncControl_ControlType_DOWNLOAD;
  static const ControlType CANCEL =
    SyncControl_ControlType_CANCEL;
  static const ControlType CHECK_MAP =
    SyncControl_ControlType_CHECK_MAP;
  static const ControlType SYNC_MAP_SERVER =
    SyncControl_ControlType_SYNC_MAP_SERVER;
  static inline bool ControlType_IsValid(int value) {
    return SyncControl_ControlType_IsValid(value);
  }
  static const ControlType ControlType_MIN =
    SyncControl_ControlType_ControlType_MIN;
  static const ControlType ControlType_MAX =
    SyncControl_ControlType_ControlType_MAX;
  static const int ControlType_ARRAYSIZE =
    SyncControl_ControlType_ControlType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ControlType_descriptor() {
    return SyncControl_ControlType_descriptor();
  }
  static inline const ::std::string& ControlType_Name(ControlType value) {
    return SyncControl_ControlType_Name(value);
  }
  static inline bool ControlType_Parse(const ::std::string& name,
      ControlType* value) {
    return SyncControl_ControlType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .xsproto.communication.SyncControl.RequestData request_data = 2;
  int request_data_size() const;
  void clear_request_data();
  static const int kRequestDataFieldNumber = 2;
  const ::xsproto::communication::SyncControl_RequestData& request_data(int index) const;
  ::xsproto::communication::SyncControl_RequestData* mutable_request_data(int index);
  ::xsproto::communication::SyncControl_RequestData* add_request_data();
  ::google::protobuf::RepeatedPtrField< ::xsproto::communication::SyncControl_RequestData >*
      mutable_request_data();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::communication::SyncControl_RequestData >&
      request_data() const;

  // .xsproto.communication.SyncControl.ControlType control_type = 1;
  void clear_control_type();
  static const int kControlTypeFieldNumber = 1;
  ::xsproto::communication::SyncControl_ControlType control_type() const;
  void set_control_type(::xsproto::communication::SyncControl_ControlType value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.SyncControl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::communication::SyncControl_RequestData > request_data_;
  int control_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2fsync_5fcontrol_2eproto::TableStruct;
  friend void ::protobuf_business_2fsync_5fcontrol_2eproto::InitDefaultsSyncControlImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SyncControl_RequestData_RequestProperty

// string vehicle_code = 1;
inline void SyncControl_RequestData_RequestProperty::clear_vehicle_code() {
  vehicle_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncControl_RequestData_RequestProperty::vehicle_code() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_code)
  return vehicle_code_.GetNoArena();
}
inline void SyncControl_RequestData_RequestProperty::set_vehicle_code(const ::std::string& value) {
  
  vehicle_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_code)
}
#if LANG_CXX11
inline void SyncControl_RequestData_RequestProperty::set_vehicle_code(::std::string&& value) {
  
  vehicle_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_code)
}
#endif
inline void SyncControl_RequestData_RequestProperty::set_vehicle_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vehicle_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_code)
}
inline void SyncControl_RequestData_RequestProperty::set_vehicle_code(const char* value, size_t size) {
  
  vehicle_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_code)
}
inline ::std::string* SyncControl_RequestData_RequestProperty::mutable_vehicle_code() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_code)
  return vehicle_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncControl_RequestData_RequestProperty::release_vehicle_code() {
  // @@protoc_insertion_point(field_release:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_code)
  
  return vehicle_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncControl_RequestData_RequestProperty::set_allocated_vehicle_code(::std::string* vehicle_code) {
  if (vehicle_code != NULL) {
    
  } else {
    
  }
  vehicle_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicle_code);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_code)
}

// string vehicle_name = 2;
inline void SyncControl_RequestData_RequestProperty::clear_vehicle_name() {
  vehicle_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncControl_RequestData_RequestProperty::vehicle_name() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_name)
  return vehicle_name_.GetNoArena();
}
inline void SyncControl_RequestData_RequestProperty::set_vehicle_name(const ::std::string& value) {
  
  vehicle_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_name)
}
#if LANG_CXX11
inline void SyncControl_RequestData_RequestProperty::set_vehicle_name(::std::string&& value) {
  
  vehicle_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_name)
}
#endif
inline void SyncControl_RequestData_RequestProperty::set_vehicle_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vehicle_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_name)
}
inline void SyncControl_RequestData_RequestProperty::set_vehicle_name(const char* value, size_t size) {
  
  vehicle_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_name)
}
inline ::std::string* SyncControl_RequestData_RequestProperty::mutable_vehicle_name() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_name)
  return vehicle_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncControl_RequestData_RequestProperty::release_vehicle_name() {
  // @@protoc_insertion_point(field_release:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_name)
  
  return vehicle_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncControl_RequestData_RequestProperty::set_allocated_vehicle_name(::std::string* vehicle_name) {
  if (vehicle_name != NULL) {
    
  } else {
    
  }
  vehicle_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicle_name);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.SyncControl.RequestData.RequestProperty.vehicle_name)
}

// string map_name = 3;
inline void SyncControl_RequestData_RequestProperty::clear_map_name() {
  map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncControl_RequestData_RequestProperty::map_name() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncControl.RequestData.RequestProperty.map_name)
  return map_name_.GetNoArena();
}
inline void SyncControl_RequestData_RequestProperty::set_map_name(const ::std::string& value) {
  
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncControl.RequestData.RequestProperty.map_name)
}
#if LANG_CXX11
inline void SyncControl_RequestData_RequestProperty::set_map_name(::std::string&& value) {
  
  map_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.SyncControl.RequestData.RequestProperty.map_name)
}
#endif
inline void SyncControl_RequestData_RequestProperty::set_map_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.SyncControl.RequestData.RequestProperty.map_name)
}
inline void SyncControl_RequestData_RequestProperty::set_map_name(const char* value, size_t size) {
  
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.SyncControl.RequestData.RequestProperty.map_name)
}
inline ::std::string* SyncControl_RequestData_RequestProperty::mutable_map_name() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.SyncControl.RequestData.RequestProperty.map_name)
  return map_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncControl_RequestData_RequestProperty::release_map_name() {
  // @@protoc_insertion_point(field_release:xsproto.communication.SyncControl.RequestData.RequestProperty.map_name)
  
  return map_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncControl_RequestData_RequestProperty::set_allocated_map_name(::std::string* map_name) {
  if (map_name != NULL) {
    
  } else {
    
  }
  map_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_name);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.SyncControl.RequestData.RequestProperty.map_name)
}

// string site_name = 4;
inline void SyncControl_RequestData_RequestProperty::clear_site_name() {
  site_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncControl_RequestData_RequestProperty::site_name() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncControl.RequestData.RequestProperty.site_name)
  return site_name_.GetNoArena();
}
inline void SyncControl_RequestData_RequestProperty::set_site_name(const ::std::string& value) {
  
  site_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncControl.RequestData.RequestProperty.site_name)
}
#if LANG_CXX11
inline void SyncControl_RequestData_RequestProperty::set_site_name(::std::string&& value) {
  
  site_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.SyncControl.RequestData.RequestProperty.site_name)
}
#endif
inline void SyncControl_RequestData_RequestProperty::set_site_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  site_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.SyncControl.RequestData.RequestProperty.site_name)
}
inline void SyncControl_RequestData_RequestProperty::set_site_name(const char* value, size_t size) {
  
  site_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.SyncControl.RequestData.RequestProperty.site_name)
}
inline ::std::string* SyncControl_RequestData_RequestProperty::mutable_site_name() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.SyncControl.RequestData.RequestProperty.site_name)
  return site_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncControl_RequestData_RequestProperty::release_site_name() {
  // @@protoc_insertion_point(field_release:xsproto.communication.SyncControl.RequestData.RequestProperty.site_name)
  
  return site_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncControl_RequestData_RequestProperty::set_allocated_site_name(::std::string* site_name) {
  if (site_name != NULL) {
    
  } else {
    
  }
  site_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), site_name);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.SyncControl.RequestData.RequestProperty.site_name)
}

// string sub_map_name = 5;
inline void SyncControl_RequestData_RequestProperty::clear_sub_map_name() {
  sub_map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncControl_RequestData_RequestProperty::sub_map_name() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncControl.RequestData.RequestProperty.sub_map_name)
  return sub_map_name_.GetNoArena();
}
inline void SyncControl_RequestData_RequestProperty::set_sub_map_name(const ::std::string& value) {
  
  sub_map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncControl.RequestData.RequestProperty.sub_map_name)
}
#if LANG_CXX11
inline void SyncControl_RequestData_RequestProperty::set_sub_map_name(::std::string&& value) {
  
  sub_map_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.SyncControl.RequestData.RequestProperty.sub_map_name)
}
#endif
inline void SyncControl_RequestData_RequestProperty::set_sub_map_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sub_map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.SyncControl.RequestData.RequestProperty.sub_map_name)
}
inline void SyncControl_RequestData_RequestProperty::set_sub_map_name(const char* value, size_t size) {
  
  sub_map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.SyncControl.RequestData.RequestProperty.sub_map_name)
}
inline ::std::string* SyncControl_RequestData_RequestProperty::mutable_sub_map_name() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.SyncControl.RequestData.RequestProperty.sub_map_name)
  return sub_map_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncControl_RequestData_RequestProperty::release_sub_map_name() {
  // @@protoc_insertion_point(field_release:xsproto.communication.SyncControl.RequestData.RequestProperty.sub_map_name)
  
  return sub_map_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncControl_RequestData_RequestProperty::set_allocated_sub_map_name(::std::string* sub_map_name) {
  if (sub_map_name != NULL) {
    
  } else {
    
  }
  sub_map_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sub_map_name);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.SyncControl.RequestData.RequestProperty.sub_map_name)
}

// -------------------------------------------------------------------

// SyncControl_RequestData

// repeated .xsproto.communication.SyncControl.RequestData.DataType data_types = 1;
inline int SyncControl_RequestData::data_types_size() const {
  return data_types_.size();
}
inline void SyncControl_RequestData::clear_data_types() {
  data_types_.Clear();
}
inline ::xsproto::communication::SyncControl_RequestData_DataType SyncControl_RequestData::data_types(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncControl.RequestData.data_types)
  return static_cast< ::xsproto::communication::SyncControl_RequestData_DataType >(data_types_.Get(index));
}
inline void SyncControl_RequestData::set_data_types(int index, ::xsproto::communication::SyncControl_RequestData_DataType value) {
  data_types_.Set(index, value);
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncControl.RequestData.data_types)
}
inline void SyncControl_RequestData::add_data_types(::xsproto::communication::SyncControl_RequestData_DataType value) {
  data_types_.Add(value);
  // @@protoc_insertion_point(field_add:xsproto.communication.SyncControl.RequestData.data_types)
}
inline const ::google::protobuf::RepeatedField<int>&
SyncControl_RequestData::data_types() const {
  // @@protoc_insertion_point(field_list:xsproto.communication.SyncControl.RequestData.data_types)
  return data_types_;
}
inline ::google::protobuf::RepeatedField<int>*
SyncControl_RequestData::mutable_data_types() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.communication.SyncControl.RequestData.data_types)
  return &data_types_;
}

// .xsproto.communication.SyncControl.RequestData.RequestProperty request = 2;
inline bool SyncControl_RequestData::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
inline void SyncControl_RequestData::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
}
inline const ::xsproto::communication::SyncControl_RequestData_RequestProperty& SyncControl_RequestData::request() const {
  const ::xsproto::communication::SyncControl_RequestData_RequestProperty* p = request_;
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncControl.RequestData.request)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::communication::SyncControl_RequestData_RequestProperty*>(
      &::xsproto::communication::_SyncControl_RequestData_RequestProperty_default_instance_);
}
inline ::xsproto::communication::SyncControl_RequestData_RequestProperty* SyncControl_RequestData::release_request() {
  // @@protoc_insertion_point(field_release:xsproto.communication.SyncControl.RequestData.request)
  
  ::xsproto::communication::SyncControl_RequestData_RequestProperty* temp = request_;
  request_ = NULL;
  return temp;
}
inline ::xsproto::communication::SyncControl_RequestData_RequestProperty* SyncControl_RequestData::mutable_request() {
  
  if (request_ == NULL) {
    request_ = new ::xsproto::communication::SyncControl_RequestData_RequestProperty;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.SyncControl.RequestData.request)
  return request_;
}
inline void SyncControl_RequestData::set_allocated_request(::xsproto::communication::SyncControl_RequestData_RequestProperty* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete request_;
  }
  if (request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    
  } else {
    
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.SyncControl.RequestData.request)
}

// string map_path = 3;
inline void SyncControl_RequestData::clear_map_path() {
  map_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncControl_RequestData::map_path() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncControl.RequestData.map_path)
  return map_path_.GetNoArena();
}
inline void SyncControl_RequestData::set_map_path(const ::std::string& value) {
  
  map_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncControl.RequestData.map_path)
}
#if LANG_CXX11
inline void SyncControl_RequestData::set_map_path(::std::string&& value) {
  
  map_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.SyncControl.RequestData.map_path)
}
#endif
inline void SyncControl_RequestData::set_map_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  map_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.SyncControl.RequestData.map_path)
}
inline void SyncControl_RequestData::set_map_path(const char* value, size_t size) {
  
  map_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.SyncControl.RequestData.map_path)
}
inline ::std::string* SyncControl_RequestData::mutable_map_path() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.SyncControl.RequestData.map_path)
  return map_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncControl_RequestData::release_map_path() {
  // @@protoc_insertion_point(field_release:xsproto.communication.SyncControl.RequestData.map_path)
  
  return map_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncControl_RequestData::set_allocated_map_path(::std::string* map_path) {
  if (map_path != NULL) {
    
  } else {
    
  }
  map_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_path);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.SyncControl.RequestData.map_path)
}

// -------------------------------------------------------------------

// SyncControl

// .xsproto.communication.SyncControl.ControlType control_type = 1;
inline void SyncControl::clear_control_type() {
  control_type_ = 0;
}
inline ::xsproto::communication::SyncControl_ControlType SyncControl::control_type() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncControl.control_type)
  return static_cast< ::xsproto::communication::SyncControl_ControlType >(control_type_);
}
inline void SyncControl::set_control_type(::xsproto::communication::SyncControl_ControlType value) {
  
  control_type_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncControl.control_type)
}

// repeated .xsproto.communication.SyncControl.RequestData request_data = 2;
inline int SyncControl::request_data_size() const {
  return request_data_.size();
}
inline void SyncControl::clear_request_data() {
  request_data_.Clear();
}
inline const ::xsproto::communication::SyncControl_RequestData& SyncControl::request_data(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncControl.request_data)
  return request_data_.Get(index);
}
inline ::xsproto::communication::SyncControl_RequestData* SyncControl::mutable_request_data(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.communication.SyncControl.request_data)
  return request_data_.Mutable(index);
}
inline ::xsproto::communication::SyncControl_RequestData* SyncControl::add_request_data() {
  // @@protoc_insertion_point(field_add:xsproto.communication.SyncControl.request_data)
  return request_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::communication::SyncControl_RequestData >*
SyncControl::mutable_request_data() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.communication.SyncControl.request_data)
  return &request_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::communication::SyncControl_RequestData >&
SyncControl::request_data() const {
  // @@protoc_insertion_point(field_list:xsproto.communication.SyncControl.request_data)
  return request_data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace communication
}  // namespace xsproto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xsproto::communication::SyncControl_RequestData_DataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::communication::SyncControl_RequestData_DataType>() {
  return ::xsproto::communication::SyncControl_RequestData_DataType_descriptor();
}
template <> struct is_proto_enum< ::xsproto::communication::SyncControl_ControlType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::communication::SyncControl_ControlType>() {
  return ::xsproto::communication::SyncControl_ControlType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_business_2fsync_5fcontrol_2eproto__INCLUDED
