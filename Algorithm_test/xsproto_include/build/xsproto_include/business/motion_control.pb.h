// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: business/motion_control.proto

#ifndef PROTOBUF_business_2fmotion_5fcontrol_2eproto__INCLUDED
#define PROTOBUF_business_2fmotion_5fcontrol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base/header.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_business_2fmotion_5fcontrol_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMotionControlImpl();
void InitDefaultsMotionControl();
void InitDefaultsMotionInfoImpl();
void InitDefaultsMotionInfo();
inline void InitDefaults() {
  InitDefaultsMotionControl();
  InitDefaultsMotionInfo();
}
}  // namespace protobuf_business_2fmotion_5fcontrol_2eproto
namespace xsproto {
namespace communication {
class MotionControl;
class MotionControlDefaultTypeInternal;
extern MotionControlDefaultTypeInternal _MotionControl_default_instance_;
class MotionInfo;
class MotionInfoDefaultTypeInternal;
extern MotionInfoDefaultTypeInternal _MotionInfo_default_instance_;
}  // namespace communication
}  // namespace xsproto
namespace xsproto {
namespace communication {

enum MotionControl_ControlType {
  MotionControl_ControlType_Set = 0,
  MotionControl_ControlType_Get = 1,
  MotionControl_ControlType_MotionControl_ControlType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MotionControl_ControlType_MotionControl_ControlType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MotionControl_ControlType_IsValid(int value);
const MotionControl_ControlType MotionControl_ControlType_ControlType_MIN = MotionControl_ControlType_Set;
const MotionControl_ControlType MotionControl_ControlType_ControlType_MAX = MotionControl_ControlType_Get;
const int MotionControl_ControlType_ControlType_ARRAYSIZE = MotionControl_ControlType_ControlType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MotionControl_ControlType_descriptor();
inline const ::std::string& MotionControl_ControlType_Name(MotionControl_ControlType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MotionControl_ControlType_descriptor(), value);
}
inline bool MotionControl_ControlType_Parse(
    const ::std::string& name, MotionControl_ControlType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MotionControl_ControlType>(
    MotionControl_ControlType_descriptor(), name, value);
}
enum MotionInfo_MotionType {
  MotionInfo_MotionType_ICAN = 0,
  MotionInfo_MotionType_VehicleLock = 1,
  MotionInfo_MotionType_ManualFunc = 2,
  MotionInfo_MotionType_DoubleFlash = 3,
  MotionInfo_MotionType_B2DBoxSourceControl = 4,
  MotionInfo_MotionType_MotionInfo_MotionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MotionInfo_MotionType_MotionInfo_MotionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MotionInfo_MotionType_IsValid(int value);
const MotionInfo_MotionType MotionInfo_MotionType_MotionType_MIN = MotionInfo_MotionType_ICAN;
const MotionInfo_MotionType MotionInfo_MotionType_MotionType_MAX = MotionInfo_MotionType_B2DBoxSourceControl;
const int MotionInfo_MotionType_MotionType_ARRAYSIZE = MotionInfo_MotionType_MotionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MotionInfo_MotionType_descriptor();
inline const ::std::string& MotionInfo_MotionType_Name(MotionInfo_MotionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MotionInfo_MotionType_descriptor(), value);
}
inline bool MotionInfo_MotionType_Parse(
    const ::std::string& name, MotionInfo_MotionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MotionInfo_MotionType>(
    MotionInfo_MotionType_descriptor(), name, value);
}
enum MotionInfo_MotionState {
  MotionInfo_MotionState_Open = 0,
  MotionInfo_MotionState_Close = 1,
  MotionInfo_MotionState_MotionInfo_MotionState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MotionInfo_MotionState_MotionInfo_MotionState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MotionInfo_MotionState_IsValid(int value);
const MotionInfo_MotionState MotionInfo_MotionState_MotionState_MIN = MotionInfo_MotionState_Open;
const MotionInfo_MotionState MotionInfo_MotionState_MotionState_MAX = MotionInfo_MotionState_Close;
const int MotionInfo_MotionState_MotionState_ARRAYSIZE = MotionInfo_MotionState_MotionState_MAX + 1;

const ::google::protobuf::EnumDescriptor* MotionInfo_MotionState_descriptor();
inline const ::std::string& MotionInfo_MotionState_Name(MotionInfo_MotionState value) {
  return ::google::protobuf::internal::NameOfEnum(
    MotionInfo_MotionState_descriptor(), value);
}
inline bool MotionInfo_MotionState_Parse(
    const ::std::string& name, MotionInfo_MotionState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MotionInfo_MotionState>(
    MotionInfo_MotionState_descriptor(), name, value);
}
// ===================================================================

class MotionControl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.MotionControl) */ {
 public:
  MotionControl();
  virtual ~MotionControl();

  MotionControl(const MotionControl& from);

  inline MotionControl& operator=(const MotionControl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MotionControl(MotionControl&& from) noexcept
    : MotionControl() {
    *this = ::std::move(from);
  }

  inline MotionControl& operator=(MotionControl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MotionControl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MotionControl* internal_default_instance() {
    return reinterpret_cast<const MotionControl*>(
               &_MotionControl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MotionControl* other);
  friend void swap(MotionControl& a, MotionControl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotionControl* New() const PROTOBUF_FINAL { return New(NULL); }

  MotionControl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MotionControl& from);
  void MergeFrom(const MotionControl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MotionControl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MotionControl_ControlType ControlType;
  static const ControlType Set =
    MotionControl_ControlType_Set;
  static const ControlType Get =
    MotionControl_ControlType_Get;
  static inline bool ControlType_IsValid(int value) {
    return MotionControl_ControlType_IsValid(value);
  }
  static const ControlType ControlType_MIN =
    MotionControl_ControlType_ControlType_MIN;
  static const ControlType ControlType_MAX =
    MotionControl_ControlType_ControlType_MAX;
  static const int ControlType_ARRAYSIZE =
    MotionControl_ControlType_ControlType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ControlType_descriptor() {
    return MotionControl_ControlType_descriptor();
  }
  static inline const ::std::string& ControlType_Name(ControlType value) {
    return MotionControl_ControlType_Name(value);
  }
  static inline bool ControlType_Parse(const ::std::string& name,
      ControlType* value) {
    return MotionControl_ControlType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .xsproto.base.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::xsproto::base::Header& header() const;
  ::xsproto::base::Header* release_header();
  ::xsproto::base::Header* mutable_header();
  void set_allocated_header(::xsproto::base::Header* header);

  // .xsproto.communication.MotionInfo motion_info = 5;
  bool has_motion_info() const;
  void clear_motion_info();
  static const int kMotionInfoFieldNumber = 5;
  const ::xsproto::communication::MotionInfo& motion_info() const;
  ::xsproto::communication::MotionInfo* release_motion_info();
  ::xsproto::communication::MotionInfo* mutable_motion_info();
  void set_allocated_motion_info(::xsproto::communication::MotionInfo* motion_info);

  // int64 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // int32 seq_num = 3;
  void clear_seq_num();
  static const int kSeqNumFieldNumber = 3;
  ::google::protobuf::int32 seq_num() const;
  void set_seq_num(::google::protobuf::int32 value);

  // .xsproto.communication.MotionControl.ControlType control_type = 4;
  void clear_control_type();
  static const int kControlTypeFieldNumber = 4;
  ::xsproto::communication::MotionControl_ControlType control_type() const;
  void set_control_type(::xsproto::communication::MotionControl_ControlType value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.MotionControl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xsproto::base::Header* header_;
  ::xsproto::communication::MotionInfo* motion_info_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 seq_num_;
  int control_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2fmotion_5fcontrol_2eproto::TableStruct;
  friend void ::protobuf_business_2fmotion_5fcontrol_2eproto::InitDefaultsMotionControlImpl();
};
// -------------------------------------------------------------------

class MotionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.MotionInfo) */ {
 public:
  MotionInfo();
  virtual ~MotionInfo();

  MotionInfo(const MotionInfo& from);

  inline MotionInfo& operator=(const MotionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MotionInfo(MotionInfo&& from) noexcept
    : MotionInfo() {
    *this = ::std::move(from);
  }

  inline MotionInfo& operator=(MotionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MotionInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MotionInfo* internal_default_instance() {
    return reinterpret_cast<const MotionInfo*>(
               &_MotionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MotionInfo* other);
  friend void swap(MotionInfo& a, MotionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MotionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MotionInfo& from);
  void MergeFrom(const MotionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MotionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MotionInfo_MotionType MotionType;
  static const MotionType ICAN =
    MotionInfo_MotionType_ICAN;
  static const MotionType VehicleLock =
    MotionInfo_MotionType_VehicleLock;
  static const MotionType ManualFunc =
    MotionInfo_MotionType_ManualFunc;
  static const MotionType DoubleFlash =
    MotionInfo_MotionType_DoubleFlash;
  static const MotionType B2DBoxSourceControl =
    MotionInfo_MotionType_B2DBoxSourceControl;
  static inline bool MotionType_IsValid(int value) {
    return MotionInfo_MotionType_IsValid(value);
  }
  static const MotionType MotionType_MIN =
    MotionInfo_MotionType_MotionType_MIN;
  static const MotionType MotionType_MAX =
    MotionInfo_MotionType_MotionType_MAX;
  static const int MotionType_ARRAYSIZE =
    MotionInfo_MotionType_MotionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MotionType_descriptor() {
    return MotionInfo_MotionType_descriptor();
  }
  static inline const ::std::string& MotionType_Name(MotionType value) {
    return MotionInfo_MotionType_Name(value);
  }
  static inline bool MotionType_Parse(const ::std::string& name,
      MotionType* value) {
    return MotionInfo_MotionType_Parse(name, value);
  }

  typedef MotionInfo_MotionState MotionState;
  static const MotionState Open =
    MotionInfo_MotionState_Open;
  static const MotionState Close =
    MotionInfo_MotionState_Close;
  static inline bool MotionState_IsValid(int value) {
    return MotionInfo_MotionState_IsValid(value);
  }
  static const MotionState MotionState_MIN =
    MotionInfo_MotionState_MotionState_MIN;
  static const MotionState MotionState_MAX =
    MotionInfo_MotionState_MotionState_MAX;
  static const int MotionState_ARRAYSIZE =
    MotionInfo_MotionState_MotionState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MotionState_descriptor() {
    return MotionInfo_MotionState_descriptor();
  }
  static inline const ::std::string& MotionState_Name(MotionState value) {
    return MotionInfo_MotionState_Name(value);
  }
  static inline bool MotionState_Parse(const ::std::string& name,
      MotionState* value) {
    return MotionInfo_MotionState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .xsproto.communication.MotionInfo.MotionType motion_type = 1;
  void clear_motion_type();
  static const int kMotionTypeFieldNumber = 1;
  ::xsproto::communication::MotionInfo_MotionType motion_type() const;
  void set_motion_type(::xsproto::communication::MotionInfo_MotionType value);

  // .xsproto.communication.MotionInfo.MotionState motion_state = 2;
  void clear_motion_state();
  static const int kMotionStateFieldNumber = 2;
  ::xsproto::communication::MotionInfo_MotionState motion_state() const;
  void set_motion_state(::xsproto::communication::MotionInfo_MotionState value);

  // int32 lock_index = 3;
  void clear_lock_index();
  static const int kLockIndexFieldNumber = 3;
  ::google::protobuf::int32 lock_index() const;
  void set_lock_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.MotionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int motion_type_;
  int motion_state_;
  ::google::protobuf::int32 lock_index_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2fmotion_5fcontrol_2eproto::TableStruct;
  friend void ::protobuf_business_2fmotion_5fcontrol_2eproto::InitDefaultsMotionInfoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MotionControl

// .xsproto.base.Header header = 1;
inline bool MotionControl::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::xsproto::base::Header& MotionControl::header() const {
  const ::xsproto::base::Header* p = header_;
  // @@protoc_insertion_point(field_get:xsproto.communication.MotionControl.header)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::base::Header*>(
      &::xsproto::base::_Header_default_instance_);
}
inline ::xsproto::base::Header* MotionControl::release_header() {
  // @@protoc_insertion_point(field_release:xsproto.communication.MotionControl.header)
  
  ::xsproto::base::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::xsproto::base::Header* MotionControl::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::xsproto::base::Header;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.MotionControl.header)
  return header_;
}
inline void MotionControl::set_allocated_header(::xsproto::base::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.MotionControl.header)
}

// int64 timestamp = 2;
inline void MotionControl::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MotionControl::timestamp() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.MotionControl.timestamp)
  return timestamp_;
}
inline void MotionControl::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.MotionControl.timestamp)
}

// int32 seq_num = 3;
inline void MotionControl::clear_seq_num() {
  seq_num_ = 0;
}
inline ::google::protobuf::int32 MotionControl::seq_num() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.MotionControl.seq_num)
  return seq_num_;
}
inline void MotionControl::set_seq_num(::google::protobuf::int32 value) {
  
  seq_num_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.MotionControl.seq_num)
}

// .xsproto.communication.MotionControl.ControlType control_type = 4;
inline void MotionControl::clear_control_type() {
  control_type_ = 0;
}
inline ::xsproto::communication::MotionControl_ControlType MotionControl::control_type() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.MotionControl.control_type)
  return static_cast< ::xsproto::communication::MotionControl_ControlType >(control_type_);
}
inline void MotionControl::set_control_type(::xsproto::communication::MotionControl_ControlType value) {
  
  control_type_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.MotionControl.control_type)
}

// .xsproto.communication.MotionInfo motion_info = 5;
inline bool MotionControl::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
inline void MotionControl::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) {
    delete motion_info_;
  }
  motion_info_ = NULL;
}
inline const ::xsproto::communication::MotionInfo& MotionControl::motion_info() const {
  const ::xsproto::communication::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:xsproto.communication.MotionControl.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::communication::MotionInfo*>(
      &::xsproto::communication::_MotionInfo_default_instance_);
}
inline ::xsproto::communication::MotionInfo* MotionControl::release_motion_info() {
  // @@protoc_insertion_point(field_release:xsproto.communication.MotionControl.motion_info)
  
  ::xsproto::communication::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
inline ::xsproto::communication::MotionInfo* MotionControl::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::xsproto::communication::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.MotionControl.motion_info)
  return motion_info_;
}
inline void MotionControl::set_allocated_motion_info(::xsproto::communication::MotionInfo* motion_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete motion_info_;
  }
  if (motion_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      motion_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, motion_info, submessage_arena);
    }
    
  } else {
    
  }
  motion_info_ = motion_info;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.MotionControl.motion_info)
}

// -------------------------------------------------------------------

// MotionInfo

// .xsproto.communication.MotionInfo.MotionType motion_type = 1;
inline void MotionInfo::clear_motion_type() {
  motion_type_ = 0;
}
inline ::xsproto::communication::MotionInfo_MotionType MotionInfo::motion_type() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.MotionInfo.motion_type)
  return static_cast< ::xsproto::communication::MotionInfo_MotionType >(motion_type_);
}
inline void MotionInfo::set_motion_type(::xsproto::communication::MotionInfo_MotionType value) {
  
  motion_type_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.MotionInfo.motion_type)
}

// .xsproto.communication.MotionInfo.MotionState motion_state = 2;
inline void MotionInfo::clear_motion_state() {
  motion_state_ = 0;
}
inline ::xsproto::communication::MotionInfo_MotionState MotionInfo::motion_state() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.MotionInfo.motion_state)
  return static_cast< ::xsproto::communication::MotionInfo_MotionState >(motion_state_);
}
inline void MotionInfo::set_motion_state(::xsproto::communication::MotionInfo_MotionState value) {
  
  motion_state_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.MotionInfo.motion_state)
}

// int32 lock_index = 3;
inline void MotionInfo::clear_lock_index() {
  lock_index_ = 0;
}
inline ::google::protobuf::int32 MotionInfo::lock_index() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.MotionInfo.lock_index)
  return lock_index_;
}
inline void MotionInfo::set_lock_index(::google::protobuf::int32 value) {
  
  lock_index_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.MotionInfo.lock_index)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace communication
}  // namespace xsproto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xsproto::communication::MotionControl_ControlType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::communication::MotionControl_ControlType>() {
  return ::xsproto::communication::MotionControl_ControlType_descriptor();
}
template <> struct is_proto_enum< ::xsproto::communication::MotionInfo_MotionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::communication::MotionInfo_MotionType>() {
  return ::xsproto::communication::MotionInfo_MotionType_descriptor();
}
template <> struct is_proto_enum< ::xsproto::communication::MotionInfo_MotionState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::communication::MotionInfo_MotionState>() {
  return ::xsproto::communication::MotionInfo_MotionState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_business_2fmotion_5fcontrol_2eproto__INCLUDED
