// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: planner/lift_info.proto

#ifndef PROTOBUF_planner_2flift_5finfo_2eproto__INCLUDED
#define PROTOBUF_planner_2flift_5finfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "base/header.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_planner_2flift_5finfo_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLiftCommandMessageImpl();
void InitDefaultsLiftCommandMessage();
void InitDefaultsLiftStateMessageImpl();
void InitDefaultsLiftStateMessage();
inline void InitDefaults() {
  InitDefaultsLiftCommandMessage();
  InitDefaultsLiftStateMessage();
}
}  // namespace protobuf_planner_2flift_5finfo_2eproto
namespace xsproto {
namespace planner {
class LiftCommandMessage;
class LiftCommandMessageDefaultTypeInternal;
extern LiftCommandMessageDefaultTypeInternal _LiftCommandMessage_default_instance_;
class LiftStateMessage;
class LiftStateMessageDefaultTypeInternal;
extern LiftStateMessageDefaultTypeInternal _LiftStateMessage_default_instance_;
}  // namespace planner
}  // namespace xsproto
namespace xsproto {
namespace planner {

// ===================================================================

class LiftCommandMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.planner.LiftCommandMessage) */ {
 public:
  LiftCommandMessage();
  virtual ~LiftCommandMessage();

  LiftCommandMessage(const LiftCommandMessage& from);

  inline LiftCommandMessage& operator=(const LiftCommandMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LiftCommandMessage(LiftCommandMessage&& from) noexcept
    : LiftCommandMessage() {
    *this = ::std::move(from);
  }

  inline LiftCommandMessage& operator=(LiftCommandMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LiftCommandMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LiftCommandMessage* internal_default_instance() {
    return reinterpret_cast<const LiftCommandMessage*>(
               &_LiftCommandMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LiftCommandMessage* other);
  friend void swap(LiftCommandMessage& a, LiftCommandMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LiftCommandMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  LiftCommandMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LiftCommandMessage& from);
  void MergeFrom(const LiftCommandMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LiftCommandMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xsproto.base.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::xsproto::base::Header& header() const;
  ::xsproto::base::Header* release_header();
  ::xsproto::base::Header* mutable_header();
  void set_allocated_header(::xsproto::base::Header* header);

  // double timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  double timestamp() const;
  void set_timestamp(double value);

  // uint32 seq = 3;
  void clear_seq();
  static const int kSeqFieldNumber = 3;
  ::google::protobuf::uint32 seq() const;
  void set_seq(::google::protobuf::uint32 value);

  // uint32 cmd = 4;
  void clear_cmd();
  static const int kCmdFieldNumber = 4;
  ::google::protobuf::uint32 cmd() const;
  void set_cmd(::google::protobuf::uint32 value);

  // uint32 id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // int32 floor = 6;
  void clear_floor();
  static const int kFloorFieldNumber = 6;
  ::google::protobuf::int32 floor() const;
  void set_floor(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xsproto.planner.LiftCommandMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xsproto::base::Header* header_;
  double timestamp_;
  ::google::protobuf::uint32 seq_;
  ::google::protobuf::uint32 cmd_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 floor_;
  mutable int _cached_size_;
  friend struct ::protobuf_planner_2flift_5finfo_2eproto::TableStruct;
  friend void ::protobuf_planner_2flift_5finfo_2eproto::InitDefaultsLiftCommandMessageImpl();
};
// -------------------------------------------------------------------

class LiftStateMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.planner.LiftStateMessage) */ {
 public:
  LiftStateMessage();
  virtual ~LiftStateMessage();

  LiftStateMessage(const LiftStateMessage& from);

  inline LiftStateMessage& operator=(const LiftStateMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LiftStateMessage(LiftStateMessage&& from) noexcept
    : LiftStateMessage() {
    *this = ::std::move(from);
  }

  inline LiftStateMessage& operator=(LiftStateMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LiftStateMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LiftStateMessage* internal_default_instance() {
    return reinterpret_cast<const LiftStateMessage*>(
               &_LiftStateMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LiftStateMessage* other);
  friend void swap(LiftStateMessage& a, LiftStateMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LiftStateMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  LiftStateMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LiftStateMessage& from);
  void MergeFrom(const LiftStateMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LiftStateMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xsproto.base.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::xsproto::base::Header& header() const;
  ::xsproto::base::Header* release_header();
  ::xsproto::base::Header* mutable_header();
  void set_allocated_header(::xsproto::base::Header* header);

  // double timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  double timestamp() const;
  void set_timestamp(double value);

  // uint32 seq = 3;
  void clear_seq();
  static const int kSeqFieldNumber = 3;
  ::google::protobuf::uint32 seq() const;
  void set_seq(::google::protobuf::uint32 value);

  // uint32 lift_id = 4;
  void clear_lift_id();
  static const int kLiftIdFieldNumber = 4;
  ::google::protobuf::uint32 lift_id() const;
  void set_lift_id(::google::protobuf::uint32 value);

  // uint32 lift_error = 5;
  void clear_lift_error();
  static const int kLiftErrorFieldNumber = 5;
  ::google::protobuf::uint32 lift_error() const;
  void set_lift_error(::google::protobuf::uint32 value);

  // uint32 lift_state = 6;
  void clear_lift_state();
  static const int kLiftStateFieldNumber = 6;
  ::google::protobuf::uint32 lift_state() const;
  void set_lift_state(::google::protobuf::uint32 value);

  // uint32 lift_door_state = 7;
  void clear_lift_door_state();
  static const int kLiftDoorStateFieldNumber = 7;
  ::google::protobuf::uint32 lift_door_state() const;
  void set_lift_door_state(::google::protobuf::uint32 value);

  // int32 lift_floor = 8;
  void clear_lift_floor();
  static const int kLiftFloorFieldNumber = 8;
  ::google::protobuf::int32 lift_floor() const;
  void set_lift_floor(::google::protobuf::int32 value);

  // int32 lift_target_floor = 9;
  void clear_lift_target_floor();
  static const int kLiftTargetFloorFieldNumber = 9;
  ::google::protobuf::int32 lift_target_floor() const;
  void set_lift_target_floor(::google::protobuf::int32 value);

  // uint32 access_door_id = 10;
  void clear_access_door_id();
  static const int kAccessDoorIdFieldNumber = 10;
  ::google::protobuf::uint32 access_door_id() const;
  void set_access_door_id(::google::protobuf::uint32 value);

  // uint32 access_door_error = 11;
  void clear_access_door_error();
  static const int kAccessDoorErrorFieldNumber = 11;
  ::google::protobuf::uint32 access_door_error() const;
  void set_access_door_error(::google::protobuf::uint32 value);

  // uint32 access_door_state = 12;
  void clear_access_door_state();
  static const int kAccessDoorStateFieldNumber = 12;
  ::google::protobuf::uint32 access_door_state() const;
  void set_access_door_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xsproto.planner.LiftStateMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xsproto::base::Header* header_;
  double timestamp_;
  ::google::protobuf::uint32 seq_;
  ::google::protobuf::uint32 lift_id_;
  ::google::protobuf::uint32 lift_error_;
  ::google::protobuf::uint32 lift_state_;
  ::google::protobuf::uint32 lift_door_state_;
  ::google::protobuf::int32 lift_floor_;
  ::google::protobuf::int32 lift_target_floor_;
  ::google::protobuf::uint32 access_door_id_;
  ::google::protobuf::uint32 access_door_error_;
  ::google::protobuf::uint32 access_door_state_;
  mutable int _cached_size_;
  friend struct ::protobuf_planner_2flift_5finfo_2eproto::TableStruct;
  friend void ::protobuf_planner_2flift_5finfo_2eproto::InitDefaultsLiftStateMessageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LiftCommandMessage

// .xsproto.base.Header header = 1;
inline bool LiftCommandMessage::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::xsproto::base::Header& LiftCommandMessage::header() const {
  const ::xsproto::base::Header* p = header_;
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftCommandMessage.header)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::base::Header*>(
      &::xsproto::base::_Header_default_instance_);
}
inline ::xsproto::base::Header* LiftCommandMessage::release_header() {
  // @@protoc_insertion_point(field_release:xsproto.planner.LiftCommandMessage.header)
  
  ::xsproto::base::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::xsproto::base::Header* LiftCommandMessage::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::xsproto::base::Header;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.planner.LiftCommandMessage.header)
  return header_;
}
inline void LiftCommandMessage::set_allocated_header(::xsproto::base::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:xsproto.planner.LiftCommandMessage.header)
}

// double timestamp = 2;
inline void LiftCommandMessage::clear_timestamp() {
  timestamp_ = 0;
}
inline double LiftCommandMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftCommandMessage.timestamp)
  return timestamp_;
}
inline void LiftCommandMessage::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftCommandMessage.timestamp)
}

// uint32 seq = 3;
inline void LiftCommandMessage::clear_seq() {
  seq_ = 0u;
}
inline ::google::protobuf::uint32 LiftCommandMessage::seq() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftCommandMessage.seq)
  return seq_;
}
inline void LiftCommandMessage::set_seq(::google::protobuf::uint32 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftCommandMessage.seq)
}

// uint32 cmd = 4;
inline void LiftCommandMessage::clear_cmd() {
  cmd_ = 0u;
}
inline ::google::protobuf::uint32 LiftCommandMessage::cmd() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftCommandMessage.cmd)
  return cmd_;
}
inline void LiftCommandMessage::set_cmd(::google::protobuf::uint32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftCommandMessage.cmd)
}

// uint32 id = 5;
inline void LiftCommandMessage::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 LiftCommandMessage::id() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftCommandMessage.id)
  return id_;
}
inline void LiftCommandMessage::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftCommandMessage.id)
}

// int32 floor = 6;
inline void LiftCommandMessage::clear_floor() {
  floor_ = 0;
}
inline ::google::protobuf::int32 LiftCommandMessage::floor() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftCommandMessage.floor)
  return floor_;
}
inline void LiftCommandMessage::set_floor(::google::protobuf::int32 value) {
  
  floor_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftCommandMessage.floor)
}

// -------------------------------------------------------------------

// LiftStateMessage

// .xsproto.base.Header header = 1;
inline bool LiftStateMessage::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::xsproto::base::Header& LiftStateMessage::header() const {
  const ::xsproto::base::Header* p = header_;
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftStateMessage.header)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::base::Header*>(
      &::xsproto::base::_Header_default_instance_);
}
inline ::xsproto::base::Header* LiftStateMessage::release_header() {
  // @@protoc_insertion_point(field_release:xsproto.planner.LiftStateMessage.header)
  
  ::xsproto::base::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::xsproto::base::Header* LiftStateMessage::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::xsproto::base::Header;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.planner.LiftStateMessage.header)
  return header_;
}
inline void LiftStateMessage::set_allocated_header(::xsproto::base::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:xsproto.planner.LiftStateMessage.header)
}

// double timestamp = 2;
inline void LiftStateMessage::clear_timestamp() {
  timestamp_ = 0;
}
inline double LiftStateMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftStateMessage.timestamp)
  return timestamp_;
}
inline void LiftStateMessage::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftStateMessage.timestamp)
}

// uint32 seq = 3;
inline void LiftStateMessage::clear_seq() {
  seq_ = 0u;
}
inline ::google::protobuf::uint32 LiftStateMessage::seq() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftStateMessage.seq)
  return seq_;
}
inline void LiftStateMessage::set_seq(::google::protobuf::uint32 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftStateMessage.seq)
}

// uint32 lift_id = 4;
inline void LiftStateMessage::clear_lift_id() {
  lift_id_ = 0u;
}
inline ::google::protobuf::uint32 LiftStateMessage::lift_id() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftStateMessage.lift_id)
  return lift_id_;
}
inline void LiftStateMessage::set_lift_id(::google::protobuf::uint32 value) {
  
  lift_id_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftStateMessage.lift_id)
}

// uint32 lift_error = 5;
inline void LiftStateMessage::clear_lift_error() {
  lift_error_ = 0u;
}
inline ::google::protobuf::uint32 LiftStateMessage::lift_error() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftStateMessage.lift_error)
  return lift_error_;
}
inline void LiftStateMessage::set_lift_error(::google::protobuf::uint32 value) {
  
  lift_error_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftStateMessage.lift_error)
}

// uint32 lift_state = 6;
inline void LiftStateMessage::clear_lift_state() {
  lift_state_ = 0u;
}
inline ::google::protobuf::uint32 LiftStateMessage::lift_state() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftStateMessage.lift_state)
  return lift_state_;
}
inline void LiftStateMessage::set_lift_state(::google::protobuf::uint32 value) {
  
  lift_state_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftStateMessage.lift_state)
}

// uint32 lift_door_state = 7;
inline void LiftStateMessage::clear_lift_door_state() {
  lift_door_state_ = 0u;
}
inline ::google::protobuf::uint32 LiftStateMessage::lift_door_state() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftStateMessage.lift_door_state)
  return lift_door_state_;
}
inline void LiftStateMessage::set_lift_door_state(::google::protobuf::uint32 value) {
  
  lift_door_state_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftStateMessage.lift_door_state)
}

// int32 lift_floor = 8;
inline void LiftStateMessage::clear_lift_floor() {
  lift_floor_ = 0;
}
inline ::google::protobuf::int32 LiftStateMessage::lift_floor() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftStateMessage.lift_floor)
  return lift_floor_;
}
inline void LiftStateMessage::set_lift_floor(::google::protobuf::int32 value) {
  
  lift_floor_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftStateMessage.lift_floor)
}

// int32 lift_target_floor = 9;
inline void LiftStateMessage::clear_lift_target_floor() {
  lift_target_floor_ = 0;
}
inline ::google::protobuf::int32 LiftStateMessage::lift_target_floor() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftStateMessage.lift_target_floor)
  return lift_target_floor_;
}
inline void LiftStateMessage::set_lift_target_floor(::google::protobuf::int32 value) {
  
  lift_target_floor_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftStateMessage.lift_target_floor)
}

// uint32 access_door_id = 10;
inline void LiftStateMessage::clear_access_door_id() {
  access_door_id_ = 0u;
}
inline ::google::protobuf::uint32 LiftStateMessage::access_door_id() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftStateMessage.access_door_id)
  return access_door_id_;
}
inline void LiftStateMessage::set_access_door_id(::google::protobuf::uint32 value) {
  
  access_door_id_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftStateMessage.access_door_id)
}

// uint32 access_door_error = 11;
inline void LiftStateMessage::clear_access_door_error() {
  access_door_error_ = 0u;
}
inline ::google::protobuf::uint32 LiftStateMessage::access_door_error() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftStateMessage.access_door_error)
  return access_door_error_;
}
inline void LiftStateMessage::set_access_door_error(::google::protobuf::uint32 value) {
  
  access_door_error_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftStateMessage.access_door_error)
}

// uint32 access_door_state = 12;
inline void LiftStateMessage::clear_access_door_state() {
  access_door_state_ = 0u;
}
inline ::google::protobuf::uint32 LiftStateMessage::access_door_state() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LiftStateMessage.access_door_state)
  return access_door_state_;
}
inline void LiftStateMessage::set_access_door_state(::google::protobuf::uint32 value) {
  
  access_door_state_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LiftStateMessage.access_door_state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace planner
}  // namespace xsproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_planner_2flift_5finfo_2eproto__INCLUDED
