// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: planner/local_plan_state.proto

#ifndef PROTOBUF_planner_2flocal_5fplan_5fstate_2eproto__INCLUDED
#define PROTOBUF_planner_2flocal_5fplan_5fstate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base/header.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_planner_2flocal_5fplan_5fstate_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsTaskCommandResponseImpl();
void InitDefaultsTaskCommandResponse();
void InitDefaultsFaultInfoResponseImpl();
void InitDefaultsFaultInfoResponse();
void InitDefaultsLocalPlanStateImpl();
void InitDefaultsLocalPlanState();
inline void InitDefaults() {
  InitDefaultsTaskCommandResponse();
  InitDefaultsFaultInfoResponse();
  InitDefaultsLocalPlanState();
}
}  // namespace protobuf_planner_2flocal_5fplan_5fstate_2eproto
namespace xsproto {
namespace planner {
class FaultInfoResponse;
class FaultInfoResponseDefaultTypeInternal;
extern FaultInfoResponseDefaultTypeInternal _FaultInfoResponse_default_instance_;
class LocalPlanState;
class LocalPlanStateDefaultTypeInternal;
extern LocalPlanStateDefaultTypeInternal _LocalPlanState_default_instance_;
class TaskCommandResponse;
class TaskCommandResponseDefaultTypeInternal;
extern TaskCommandResponseDefaultTypeInternal _TaskCommandResponse_default_instance_;
}  // namespace planner
}  // namespace xsproto
namespace xsproto {
namespace planner {

enum FaultDecisionResult {
  Decision_Normal = 0,
  Decision_Stop = 1,
  Decision_SpeedSlow = 2,
  Decision_PullOver = 3,
  FaultDecisionResult_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FaultDecisionResult_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FaultDecisionResult_IsValid(int value);
const FaultDecisionResult FaultDecisionResult_MIN = Decision_Normal;
const FaultDecisionResult FaultDecisionResult_MAX = Decision_PullOver;
const int FaultDecisionResult_ARRAYSIZE = FaultDecisionResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* FaultDecisionResult_descriptor();
inline const ::std::string& FaultDecisionResult_Name(FaultDecisionResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    FaultDecisionResult_descriptor(), value);
}
inline bool FaultDecisionResult_Parse(
    const ::std::string& name, FaultDecisionResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FaultDecisionResult>(
    FaultDecisionResult_descriptor(), name, value);
}
enum PlanArriveType {
  Arrive_Unknown = 0,
  Arrive_EndPoint = 1,
  Arrive_WaitTrafficLight = 2,
  Arrive_PassTrafficLight = 3,
  Arrive_InChargeArea = 4,
  Arrive_AimChargePile = 5,
  Arrive_ChargeSuccess = 6,
  Arrive_ChargeFailed = 7,
  Arrive_Unreachable = 8,
  PlanArriveType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlanArriveType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlanArriveType_IsValid(int value);
const PlanArriveType PlanArriveType_MIN = Arrive_Unknown;
const PlanArriveType PlanArriveType_MAX = Arrive_Unreachable;
const int PlanArriveType_ARRAYSIZE = PlanArriveType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlanArriveType_descriptor();
inline const ::std::string& PlanArriveType_Name(PlanArriveType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlanArriveType_descriptor(), value);
}
inline bool PlanArriveType_Parse(
    const ::std::string& name, PlanArriveType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlanArriveType>(
    PlanArriveType_descriptor(), name, value);
}
enum PlanPromptType {
  Prompt_Unknown = 0,
  Prompt_ArriveEnd = 1,
  Prompt_TurnLeft = 2,
  Prompt_TurnRight = 3,
  Prompt_BackPath = 4,
  Prompt_Pedestrian = 5,
  Prompt_Whistle = 6,
  Prompt_Vehicle = 7,
  Prompt_Obstacle = 8,
  Prompt_AdvoidObstacle = 9,
  Prompt_StartTask = 10,
  Prompt_EmergencyStop = 11,
  Prompt_Stop = 12,
  Prompt_EntityEmergencyStop = 13,
  Prompt_InDangerArea = 14,
  Prompt_AroundObstacle = 15,
  Prompt_ModeChangeToAuto = 16,
  Prompt_ModeChangeToManual = 17,
  Prompt_UnusualStop = 18,
  PlanPromptType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlanPromptType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlanPromptType_IsValid(int value);
const PlanPromptType PlanPromptType_MIN = Prompt_Unknown;
const PlanPromptType PlanPromptType_MAX = Prompt_UnusualStop;
const int PlanPromptType_ARRAYSIZE = PlanPromptType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlanPromptType_descriptor();
inline const ::std::string& PlanPromptType_Name(PlanPromptType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlanPromptType_descriptor(), value);
}
inline bool PlanPromptType_Parse(
    const ::std::string& name, PlanPromptType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlanPromptType>(
    PlanPromptType_descriptor(), name, value);
}
enum PlanRequestCodeType {
  CODE_UNKNOWN = 0,
  CODE_NO_TRAFFICLIGHT = 1,
  CODE_STOP_CROSS = 2,
  CODE_VEHICLE_IN_LANE = 3,
  CODE_NO_PLAN = 4,
  CODE_GOAL_BLOCAKED = 5,
  CODE_MESSAGE_LOST = 6,
  CODE_REPLAN = 7,
  CODE_MOVE_FAILURE = 8,
  PlanRequestCodeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlanRequestCodeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlanRequestCodeType_IsValid(int value);
const PlanRequestCodeType PlanRequestCodeType_MIN = CODE_UNKNOWN;
const PlanRequestCodeType PlanRequestCodeType_MAX = CODE_MOVE_FAILURE;
const int PlanRequestCodeType_ARRAYSIZE = PlanRequestCodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlanRequestCodeType_descriptor();
inline const ::std::string& PlanRequestCodeType_Name(PlanRequestCodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlanRequestCodeType_descriptor(), value);
}
inline bool PlanRequestCodeType_Parse(
    const ::std::string& name, PlanRequestCodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlanRequestCodeType>(
    PlanRequestCodeType_descriptor(), name, value);
}
enum BusDoorCommand {
  Command_RunLane = 0,
  Command_OpenDoor = 1,
  Command_CloseDoor = 2,
  BusDoorCommand_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BusDoorCommand_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BusDoorCommand_IsValid(int value);
const BusDoorCommand BusDoorCommand_MIN = Command_RunLane;
const BusDoorCommand BusDoorCommand_MAX = Command_CloseDoor;
const int BusDoorCommand_ARRAYSIZE = BusDoorCommand_MAX + 1;

const ::google::protobuf::EnumDescriptor* BusDoorCommand_descriptor();
inline const ::std::string& BusDoorCommand_Name(BusDoorCommand value) {
  return ::google::protobuf::internal::NameOfEnum(
    BusDoorCommand_descriptor(), value);
}
inline bool BusDoorCommand_Parse(
    const ::std::string& name, BusDoorCommand* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BusDoorCommand>(
    BusDoorCommand_descriptor(), name, value);
}
// ===================================================================

class TaskCommandResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.planner.TaskCommandResponse) */ {
 public:
  TaskCommandResponse();
  virtual ~TaskCommandResponse();

  TaskCommandResponse(const TaskCommandResponse& from);

  inline TaskCommandResponse& operator=(const TaskCommandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TaskCommandResponse(TaskCommandResponse&& from) noexcept
    : TaskCommandResponse() {
    *this = ::std::move(from);
  }

  inline TaskCommandResponse& operator=(TaskCommandResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskCommandResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TaskCommandResponse* internal_default_instance() {
    return reinterpret_cast<const TaskCommandResponse*>(
               &_TaskCommandResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TaskCommandResponse* other);
  friend void swap(TaskCommandResponse& a, TaskCommandResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TaskCommandResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  TaskCommandResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TaskCommandResponse& from);
  void MergeFrom(const TaskCommandResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TaskCommandResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 seq_num = 1;
  void clear_seq_num();
  static const int kSeqNumFieldNumber = 1;
  ::google::protobuf::int32 seq_num() const;
  void set_seq_num(::google::protobuf::int32 value);

  // int32 req_id = 2;
  void clear_req_id();
  static const int kReqIdFieldNumber = 2;
  ::google::protobuf::int32 req_id() const;
  void set_req_id(::google::protobuf::int32 value);

  // int32 error_code = 3;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 3;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // int32 state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // int32 reserved1 = 5;
  void clear_reserved1();
  static const int kReserved1FieldNumber = 5;
  ::google::protobuf::int32 reserved1() const;
  void set_reserved1(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xsproto.planner.TaskCommandResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 seq_num_;
  ::google::protobuf::int32 req_id_;
  ::google::protobuf::int32 error_code_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 reserved1_;
  mutable int _cached_size_;
  friend struct ::protobuf_planner_2flocal_5fplan_5fstate_2eproto::TableStruct;
  friend void ::protobuf_planner_2flocal_5fplan_5fstate_2eproto::InitDefaultsTaskCommandResponseImpl();
};
// -------------------------------------------------------------------

class FaultInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.planner.FaultInfoResponse) */ {
 public:
  FaultInfoResponse();
  virtual ~FaultInfoResponse();

  FaultInfoResponse(const FaultInfoResponse& from);

  inline FaultInfoResponse& operator=(const FaultInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaultInfoResponse(FaultInfoResponse&& from) noexcept
    : FaultInfoResponse() {
    *this = ::std::move(from);
  }

  inline FaultInfoResponse& operator=(FaultInfoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaultInfoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaultInfoResponse* internal_default_instance() {
    return reinterpret_cast<const FaultInfoResponse*>(
               &_FaultInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FaultInfoResponse* other);
  friend void swap(FaultInfoResponse& a, FaultInfoResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaultInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  FaultInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FaultInfoResponse& from);
  void MergeFrom(const FaultInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FaultInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 module_id = 1;
  void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  ::google::protobuf::int32 module_id() const;
  void set_module_id(::google::protobuf::int32 value);

  // int32 sub_id = 2;
  void clear_sub_id();
  static const int kSubIdFieldNumber = 2;
  ::google::protobuf::int32 sub_id() const;
  void set_sub_id(::google::protobuf::int32 value);

  // int32 fault_class = 3;
  void clear_fault_class();
  static const int kFaultClassFieldNumber = 3;
  ::google::protobuf::int32 fault_class() const;
  void set_fault_class(::google::protobuf::int32 value);

  // int32 code = 4;
  void clear_code();
  static const int kCodeFieldNumber = 4;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // .xsproto.planner.FaultDecisionResult decision_result = 5;
  void clear_decision_result();
  static const int kDecisionResultFieldNumber = 5;
  ::xsproto::planner::FaultDecisionResult decision_result() const;
  void set_decision_result(::xsproto::planner::FaultDecisionResult value);

  // @@protoc_insertion_point(class_scope:xsproto.planner.FaultInfoResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 module_id_;
  ::google::protobuf::int32 sub_id_;
  ::google::protobuf::int32 fault_class_;
  ::google::protobuf::int32 code_;
  int decision_result_;
  mutable int _cached_size_;
  friend struct ::protobuf_planner_2flocal_5fplan_5fstate_2eproto::TableStruct;
  friend void ::protobuf_planner_2flocal_5fplan_5fstate_2eproto::InitDefaultsFaultInfoResponseImpl();
};
// -------------------------------------------------------------------

class LocalPlanState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.planner.LocalPlanState) */ {
 public:
  LocalPlanState();
  virtual ~LocalPlanState();

  LocalPlanState(const LocalPlanState& from);

  inline LocalPlanState& operator=(const LocalPlanState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalPlanState(LocalPlanState&& from) noexcept
    : LocalPlanState() {
    *this = ::std::move(from);
  }

  inline LocalPlanState& operator=(LocalPlanState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalPlanState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalPlanState* internal_default_instance() {
    return reinterpret_cast<const LocalPlanState*>(
               &_LocalPlanState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(LocalPlanState* other);
  friend void swap(LocalPlanState& a, LocalPlanState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalPlanState* New() const PROTOBUF_FINAL { return New(NULL); }

  LocalPlanState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocalPlanState& from);
  void MergeFrom(const LocalPlanState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocalPlanState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xsproto.planner.FaultInfoResponse fault_response = 11;
  int fault_response_size() const;
  void clear_fault_response();
  static const int kFaultResponseFieldNumber = 11;
  const ::xsproto::planner::FaultInfoResponse& fault_response(int index) const;
  ::xsproto::planner::FaultInfoResponse* mutable_fault_response(int index);
  ::xsproto::planner::FaultInfoResponse* add_fault_response();
  ::google::protobuf::RepeatedPtrField< ::xsproto::planner::FaultInfoResponse >*
      mutable_fault_response();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::planner::FaultInfoResponse >&
      fault_response() const;

  // repeated .xsproto.planner.PlanPromptType voice_type = 15;
  int voice_type_size() const;
  void clear_voice_type();
  static const int kVoiceTypeFieldNumber = 15;
  ::xsproto::planner::PlanPromptType voice_type(int index) const;
  void set_voice_type(int index, ::xsproto::planner::PlanPromptType value);
  void add_voice_type(::xsproto::planner::PlanPromptType value);
  const ::google::protobuf::RepeatedField<int>& voice_type() const;
  ::google::protobuf::RepeatedField<int>* mutable_voice_type();

  // string request_message = 6;
  void clear_request_message();
  static const int kRequestMessageFieldNumber = 6;
  const ::std::string& request_message() const;
  void set_request_message(const ::std::string& value);
  #if LANG_CXX11
  void set_request_message(::std::string&& value);
  #endif
  void set_request_message(const char* value);
  void set_request_message(const char* value, size_t size);
  ::std::string* mutable_request_message();
  ::std::string* release_request_message();
  void set_allocated_request_message(::std::string* request_message);

  // .xsproto.base.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::xsproto::base::Header& header() const;
  ::xsproto::base::Header* release_header();
  ::xsproto::base::Header* mutable_header();
  void set_allocated_header(::xsproto::base::Header* header);

  // .xsproto.planner.TaskCommandResponse task_command_response = 10;
  bool has_task_command_response() const;
  void clear_task_command_response();
  static const int kTaskCommandResponseFieldNumber = 10;
  const ::xsproto::planner::TaskCommandResponse& task_command_response() const;
  ::xsproto::planner::TaskCommandResponse* release_task_command_response();
  ::xsproto::planner::TaskCommandResponse* mutable_task_command_response();
  void set_allocated_task_command_response(::xsproto::planner::TaskCommandResponse* task_command_response);

  // .xsproto.planner.PlanPromptType prompt_type = 2;
  void clear_prompt_type();
  static const int kPromptTypeFieldNumber = 2;
  ::xsproto::planner::PlanPromptType prompt_type() const;
  void set_prompt_type(::xsproto::planner::PlanPromptType value);

  // .xsproto.planner.PlanArriveType arrive_type = 3;
  void clear_arrive_type();
  static const int kArriveTypeFieldNumber = 3;
  ::xsproto::planner::PlanArriveType arrive_type() const;
  void set_arrive_type(::xsproto::planner::PlanArriveType value);

  // int32 is_start = 4;
  void clear_is_start();
  static const int kIsStartFieldNumber = 4;
  ::google::protobuf::int32 is_start() const;
  void set_is_start(::google::protobuf::int32 value);

  // .xsproto.planner.PlanRequestCodeType request_code = 5;
  void clear_request_code();
  static const int kRequestCodeFieldNumber = 5;
  ::xsproto::planner::PlanRequestCodeType request_code() const;
  void set_request_code(::xsproto::planner::PlanRequestCodeType value);

  // uint32 request_replan = 7;
  void clear_request_replan();
  static const int kRequestReplanFieldNumber = 7;
  ::google::protobuf::uint32 request_replan() const;
  void set_request_replan(::google::protobuf::uint32 value);

  // uint32 request_reset = 8;
  void clear_request_reset();
  static const int kRequestResetFieldNumber = 8;
  ::google::protobuf::uint32 request_reset() const;
  void set_request_reset(::google::protobuf::uint32 value);

  // uint32 assist_code = 9;
  void clear_assist_code();
  static const int kAssistCodeFieldNumber = 9;
  ::google::protobuf::uint32 assist_code() const;
  void set_assist_code(::google::protobuf::uint32 value);

  // int32 message_seq_num = 12;
  void clear_message_seq_num();
  static const int kMessageSeqNumFieldNumber = 12;
  ::google::protobuf::int32 message_seq_num() const;
  void set_message_seq_num(::google::protobuf::int32 value);

  // int32 lift_id = 13;
  void clear_lift_id();
  static const int kLiftIdFieldNumber = 13;
  ::google::protobuf::int32 lift_id() const;
  void set_lift_id(::google::protobuf::int32 value);

  // .xsproto.planner.BusDoorCommand bus_door_command = 14;
  void clear_bus_door_command();
  static const int kBusDoorCommandFieldNumber = 14;
  ::xsproto::planner::BusDoorCommand bus_door_command() const;
  void set_bus_door_command(::xsproto::planner::BusDoorCommand value);

  // @@protoc_insertion_point(class_scope:xsproto.planner.LocalPlanState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::planner::FaultInfoResponse > fault_response_;
  ::google::protobuf::RepeatedField<int> voice_type_;
  mutable int _voice_type_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr request_message_;
  ::xsproto::base::Header* header_;
  ::xsproto::planner::TaskCommandResponse* task_command_response_;
  int prompt_type_;
  int arrive_type_;
  ::google::protobuf::int32 is_start_;
  int request_code_;
  ::google::protobuf::uint32 request_replan_;
  ::google::protobuf::uint32 request_reset_;
  ::google::protobuf::uint32 assist_code_;
  ::google::protobuf::int32 message_seq_num_;
  ::google::protobuf::int32 lift_id_;
  int bus_door_command_;
  mutable int _cached_size_;
  friend struct ::protobuf_planner_2flocal_5fplan_5fstate_2eproto::TableStruct;
  friend void ::protobuf_planner_2flocal_5fplan_5fstate_2eproto::InitDefaultsLocalPlanStateImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TaskCommandResponse

// int32 seq_num = 1;
inline void TaskCommandResponse::clear_seq_num() {
  seq_num_ = 0;
}
inline ::google::protobuf::int32 TaskCommandResponse::seq_num() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.TaskCommandResponse.seq_num)
  return seq_num_;
}
inline void TaskCommandResponse::set_seq_num(::google::protobuf::int32 value) {
  
  seq_num_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.TaskCommandResponse.seq_num)
}

// int32 req_id = 2;
inline void TaskCommandResponse::clear_req_id() {
  req_id_ = 0;
}
inline ::google::protobuf::int32 TaskCommandResponse::req_id() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.TaskCommandResponse.req_id)
  return req_id_;
}
inline void TaskCommandResponse::set_req_id(::google::protobuf::int32 value) {
  
  req_id_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.TaskCommandResponse.req_id)
}

// int32 error_code = 3;
inline void TaskCommandResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::google::protobuf::int32 TaskCommandResponse::error_code() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.TaskCommandResponse.error_code)
  return error_code_;
}
inline void TaskCommandResponse::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.TaskCommandResponse.error_code)
}

// int32 state = 4;
inline void TaskCommandResponse::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 TaskCommandResponse::state() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.TaskCommandResponse.state)
  return state_;
}
inline void TaskCommandResponse::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.TaskCommandResponse.state)
}

// int32 reserved1 = 5;
inline void TaskCommandResponse::clear_reserved1() {
  reserved1_ = 0;
}
inline ::google::protobuf::int32 TaskCommandResponse::reserved1() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.TaskCommandResponse.reserved1)
  return reserved1_;
}
inline void TaskCommandResponse::set_reserved1(::google::protobuf::int32 value) {
  
  reserved1_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.TaskCommandResponse.reserved1)
}

// -------------------------------------------------------------------

// FaultInfoResponse

// int32 module_id = 1;
inline void FaultInfoResponse::clear_module_id() {
  module_id_ = 0;
}
inline ::google::protobuf::int32 FaultInfoResponse::module_id() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.FaultInfoResponse.module_id)
  return module_id_;
}
inline void FaultInfoResponse::set_module_id(::google::protobuf::int32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.FaultInfoResponse.module_id)
}

// int32 sub_id = 2;
inline void FaultInfoResponse::clear_sub_id() {
  sub_id_ = 0;
}
inline ::google::protobuf::int32 FaultInfoResponse::sub_id() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.FaultInfoResponse.sub_id)
  return sub_id_;
}
inline void FaultInfoResponse::set_sub_id(::google::protobuf::int32 value) {
  
  sub_id_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.FaultInfoResponse.sub_id)
}

// int32 fault_class = 3;
inline void FaultInfoResponse::clear_fault_class() {
  fault_class_ = 0;
}
inline ::google::protobuf::int32 FaultInfoResponse::fault_class() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.FaultInfoResponse.fault_class)
  return fault_class_;
}
inline void FaultInfoResponse::set_fault_class(::google::protobuf::int32 value) {
  
  fault_class_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.FaultInfoResponse.fault_class)
}

// int32 code = 4;
inline void FaultInfoResponse::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 FaultInfoResponse::code() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.FaultInfoResponse.code)
  return code_;
}
inline void FaultInfoResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.FaultInfoResponse.code)
}

// .xsproto.planner.FaultDecisionResult decision_result = 5;
inline void FaultInfoResponse::clear_decision_result() {
  decision_result_ = 0;
}
inline ::xsproto::planner::FaultDecisionResult FaultInfoResponse::decision_result() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.FaultInfoResponse.decision_result)
  return static_cast< ::xsproto::planner::FaultDecisionResult >(decision_result_);
}
inline void FaultInfoResponse::set_decision_result(::xsproto::planner::FaultDecisionResult value) {
  
  decision_result_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.FaultInfoResponse.decision_result)
}

// -------------------------------------------------------------------

// LocalPlanState

// .xsproto.base.Header header = 1;
inline bool LocalPlanState::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::xsproto::base::Header& LocalPlanState::header() const {
  const ::xsproto::base::Header* p = header_;
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.header)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::base::Header*>(
      &::xsproto::base::_Header_default_instance_);
}
inline ::xsproto::base::Header* LocalPlanState::release_header() {
  // @@protoc_insertion_point(field_release:xsproto.planner.LocalPlanState.header)
  
  ::xsproto::base::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::xsproto::base::Header* LocalPlanState::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::xsproto::base::Header;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.planner.LocalPlanState.header)
  return header_;
}
inline void LocalPlanState::set_allocated_header(::xsproto::base::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:xsproto.planner.LocalPlanState.header)
}

// .xsproto.planner.PlanPromptType prompt_type = 2;
inline void LocalPlanState::clear_prompt_type() {
  prompt_type_ = 0;
}
inline ::xsproto::planner::PlanPromptType LocalPlanState::prompt_type() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.prompt_type)
  return static_cast< ::xsproto::planner::PlanPromptType >(prompt_type_);
}
inline void LocalPlanState::set_prompt_type(::xsproto::planner::PlanPromptType value) {
  
  prompt_type_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LocalPlanState.prompt_type)
}

// .xsproto.planner.PlanArriveType arrive_type = 3;
inline void LocalPlanState::clear_arrive_type() {
  arrive_type_ = 0;
}
inline ::xsproto::planner::PlanArriveType LocalPlanState::arrive_type() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.arrive_type)
  return static_cast< ::xsproto::planner::PlanArriveType >(arrive_type_);
}
inline void LocalPlanState::set_arrive_type(::xsproto::planner::PlanArriveType value) {
  
  arrive_type_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LocalPlanState.arrive_type)
}

// int32 is_start = 4;
inline void LocalPlanState::clear_is_start() {
  is_start_ = 0;
}
inline ::google::protobuf::int32 LocalPlanState::is_start() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.is_start)
  return is_start_;
}
inline void LocalPlanState::set_is_start(::google::protobuf::int32 value) {
  
  is_start_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LocalPlanState.is_start)
}

// .xsproto.planner.PlanRequestCodeType request_code = 5;
inline void LocalPlanState::clear_request_code() {
  request_code_ = 0;
}
inline ::xsproto::planner::PlanRequestCodeType LocalPlanState::request_code() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.request_code)
  return static_cast< ::xsproto::planner::PlanRequestCodeType >(request_code_);
}
inline void LocalPlanState::set_request_code(::xsproto::planner::PlanRequestCodeType value) {
  
  request_code_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LocalPlanState.request_code)
}

// string request_message = 6;
inline void LocalPlanState::clear_request_message() {
  request_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalPlanState::request_message() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.request_message)
  return request_message_.GetNoArena();
}
inline void LocalPlanState::set_request_message(const ::std::string& value) {
  
  request_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.planner.LocalPlanState.request_message)
}
#if LANG_CXX11
inline void LocalPlanState::set_request_message(::std::string&& value) {
  
  request_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.planner.LocalPlanState.request_message)
}
#endif
inline void LocalPlanState::set_request_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.planner.LocalPlanState.request_message)
}
inline void LocalPlanState::set_request_message(const char* value, size_t size) {
  
  request_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.planner.LocalPlanState.request_message)
}
inline ::std::string* LocalPlanState::mutable_request_message() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.planner.LocalPlanState.request_message)
  return request_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalPlanState::release_request_message() {
  // @@protoc_insertion_point(field_release:xsproto.planner.LocalPlanState.request_message)
  
  return request_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalPlanState::set_allocated_request_message(::std::string* request_message) {
  if (request_message != NULL) {
    
  } else {
    
  }
  request_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_message);
  // @@protoc_insertion_point(field_set_allocated:xsproto.planner.LocalPlanState.request_message)
}

// uint32 request_replan = 7;
inline void LocalPlanState::clear_request_replan() {
  request_replan_ = 0u;
}
inline ::google::protobuf::uint32 LocalPlanState::request_replan() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.request_replan)
  return request_replan_;
}
inline void LocalPlanState::set_request_replan(::google::protobuf::uint32 value) {
  
  request_replan_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LocalPlanState.request_replan)
}

// uint32 request_reset = 8;
inline void LocalPlanState::clear_request_reset() {
  request_reset_ = 0u;
}
inline ::google::protobuf::uint32 LocalPlanState::request_reset() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.request_reset)
  return request_reset_;
}
inline void LocalPlanState::set_request_reset(::google::protobuf::uint32 value) {
  
  request_reset_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LocalPlanState.request_reset)
}

// uint32 assist_code = 9;
inline void LocalPlanState::clear_assist_code() {
  assist_code_ = 0u;
}
inline ::google::protobuf::uint32 LocalPlanState::assist_code() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.assist_code)
  return assist_code_;
}
inline void LocalPlanState::set_assist_code(::google::protobuf::uint32 value) {
  
  assist_code_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LocalPlanState.assist_code)
}

// .xsproto.planner.TaskCommandResponse task_command_response = 10;
inline bool LocalPlanState::has_task_command_response() const {
  return this != internal_default_instance() && task_command_response_ != NULL;
}
inline void LocalPlanState::clear_task_command_response() {
  if (GetArenaNoVirtual() == NULL && task_command_response_ != NULL) {
    delete task_command_response_;
  }
  task_command_response_ = NULL;
}
inline const ::xsproto::planner::TaskCommandResponse& LocalPlanState::task_command_response() const {
  const ::xsproto::planner::TaskCommandResponse* p = task_command_response_;
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.task_command_response)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::planner::TaskCommandResponse*>(
      &::xsproto::planner::_TaskCommandResponse_default_instance_);
}
inline ::xsproto::planner::TaskCommandResponse* LocalPlanState::release_task_command_response() {
  // @@protoc_insertion_point(field_release:xsproto.planner.LocalPlanState.task_command_response)
  
  ::xsproto::planner::TaskCommandResponse* temp = task_command_response_;
  task_command_response_ = NULL;
  return temp;
}
inline ::xsproto::planner::TaskCommandResponse* LocalPlanState::mutable_task_command_response() {
  
  if (task_command_response_ == NULL) {
    task_command_response_ = new ::xsproto::planner::TaskCommandResponse;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.planner.LocalPlanState.task_command_response)
  return task_command_response_;
}
inline void LocalPlanState::set_allocated_task_command_response(::xsproto::planner::TaskCommandResponse* task_command_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete task_command_response_;
  }
  if (task_command_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      task_command_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_command_response, submessage_arena);
    }
    
  } else {
    
  }
  task_command_response_ = task_command_response;
  // @@protoc_insertion_point(field_set_allocated:xsproto.planner.LocalPlanState.task_command_response)
}

// repeated .xsproto.planner.FaultInfoResponse fault_response = 11;
inline int LocalPlanState::fault_response_size() const {
  return fault_response_.size();
}
inline void LocalPlanState::clear_fault_response() {
  fault_response_.Clear();
}
inline const ::xsproto::planner::FaultInfoResponse& LocalPlanState::fault_response(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.fault_response)
  return fault_response_.Get(index);
}
inline ::xsproto::planner::FaultInfoResponse* LocalPlanState::mutable_fault_response(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.planner.LocalPlanState.fault_response)
  return fault_response_.Mutable(index);
}
inline ::xsproto::planner::FaultInfoResponse* LocalPlanState::add_fault_response() {
  // @@protoc_insertion_point(field_add:xsproto.planner.LocalPlanState.fault_response)
  return fault_response_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::planner::FaultInfoResponse >*
LocalPlanState::mutable_fault_response() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.planner.LocalPlanState.fault_response)
  return &fault_response_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::planner::FaultInfoResponse >&
LocalPlanState::fault_response() const {
  // @@protoc_insertion_point(field_list:xsproto.planner.LocalPlanState.fault_response)
  return fault_response_;
}

// int32 message_seq_num = 12;
inline void LocalPlanState::clear_message_seq_num() {
  message_seq_num_ = 0;
}
inline ::google::protobuf::int32 LocalPlanState::message_seq_num() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.message_seq_num)
  return message_seq_num_;
}
inline void LocalPlanState::set_message_seq_num(::google::protobuf::int32 value) {
  
  message_seq_num_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LocalPlanState.message_seq_num)
}

// int32 lift_id = 13;
inline void LocalPlanState::clear_lift_id() {
  lift_id_ = 0;
}
inline ::google::protobuf::int32 LocalPlanState::lift_id() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.lift_id)
  return lift_id_;
}
inline void LocalPlanState::set_lift_id(::google::protobuf::int32 value) {
  
  lift_id_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LocalPlanState.lift_id)
}

// .xsproto.planner.BusDoorCommand bus_door_command = 14;
inline void LocalPlanState::clear_bus_door_command() {
  bus_door_command_ = 0;
}
inline ::xsproto::planner::BusDoorCommand LocalPlanState::bus_door_command() const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.bus_door_command)
  return static_cast< ::xsproto::planner::BusDoorCommand >(bus_door_command_);
}
inline void LocalPlanState::set_bus_door_command(::xsproto::planner::BusDoorCommand value) {
  
  bus_door_command_ = value;
  // @@protoc_insertion_point(field_set:xsproto.planner.LocalPlanState.bus_door_command)
}

// repeated .xsproto.planner.PlanPromptType voice_type = 15;
inline int LocalPlanState::voice_type_size() const {
  return voice_type_.size();
}
inline void LocalPlanState::clear_voice_type() {
  voice_type_.Clear();
}
inline ::xsproto::planner::PlanPromptType LocalPlanState::voice_type(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.planner.LocalPlanState.voice_type)
  return static_cast< ::xsproto::planner::PlanPromptType >(voice_type_.Get(index));
}
inline void LocalPlanState::set_voice_type(int index, ::xsproto::planner::PlanPromptType value) {
  voice_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:xsproto.planner.LocalPlanState.voice_type)
}
inline void LocalPlanState::add_voice_type(::xsproto::planner::PlanPromptType value) {
  voice_type_.Add(value);
  // @@protoc_insertion_point(field_add:xsproto.planner.LocalPlanState.voice_type)
}
inline const ::google::protobuf::RepeatedField<int>&
LocalPlanState::voice_type() const {
  // @@protoc_insertion_point(field_list:xsproto.planner.LocalPlanState.voice_type)
  return voice_type_;
}
inline ::google::protobuf::RepeatedField<int>*
LocalPlanState::mutable_voice_type() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.planner.LocalPlanState.voice_type)
  return &voice_type_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace planner
}  // namespace xsproto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xsproto::planner::FaultDecisionResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::planner::FaultDecisionResult>() {
  return ::xsproto::planner::FaultDecisionResult_descriptor();
}
template <> struct is_proto_enum< ::xsproto::planner::PlanArriveType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::planner::PlanArriveType>() {
  return ::xsproto::planner::PlanArriveType_descriptor();
}
template <> struct is_proto_enum< ::xsproto::planner::PlanPromptType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::planner::PlanPromptType>() {
  return ::xsproto::planner::PlanPromptType_descriptor();
}
template <> struct is_proto_enum< ::xsproto::planner::PlanRequestCodeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::planner::PlanRequestCodeType>() {
  return ::xsproto::planner::PlanRequestCodeType_descriptor();
}
template <> struct is_proto_enum< ::xsproto::planner::BusDoorCommand> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::planner::BusDoorCommand>() {
  return ::xsproto::planner::BusDoorCommand_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_planner_2flocal_5fplan_5fstate_2eproto__INCLUDED
