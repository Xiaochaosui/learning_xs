// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: business/sync_progress.proto

#ifndef PROTOBUF_business_2fsync_5fprogress_2eproto__INCLUDED
#define PROTOBUF_business_2fsync_5fprogress_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_business_2fsync_5fprogress_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSyncProgress_DataProgressImpl();
void InitDefaultsSyncProgress_DataProgress();
void InitDefaultsSyncProgressImpl();
void InitDefaultsSyncProgress();
inline void InitDefaults() {
  InitDefaultsSyncProgress_DataProgress();
  InitDefaultsSyncProgress();
}
}  // namespace protobuf_business_2fsync_5fprogress_2eproto
namespace xsproto {
namespace communication {
class SyncProgress;
class SyncProgressDefaultTypeInternal;
extern SyncProgressDefaultTypeInternal _SyncProgress_default_instance_;
class SyncProgress_DataProgress;
class SyncProgress_DataProgressDefaultTypeInternal;
extern SyncProgress_DataProgressDefaultTypeInternal _SyncProgress_DataProgress_default_instance_;
}  // namespace communication
}  // namespace xsproto
namespace xsproto {
namespace communication {

// ===================================================================

class SyncProgress_DataProgress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.SyncProgress.DataProgress) */ {
 public:
  SyncProgress_DataProgress();
  virtual ~SyncProgress_DataProgress();

  SyncProgress_DataProgress(const SyncProgress_DataProgress& from);

  inline SyncProgress_DataProgress& operator=(const SyncProgress_DataProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncProgress_DataProgress(SyncProgress_DataProgress&& from) noexcept
    : SyncProgress_DataProgress() {
    *this = ::std::move(from);
  }

  inline SyncProgress_DataProgress& operator=(SyncProgress_DataProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncProgress_DataProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncProgress_DataProgress* internal_default_instance() {
    return reinterpret_cast<const SyncProgress_DataProgress*>(
               &_SyncProgress_DataProgress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SyncProgress_DataProgress* other);
  friend void swap(SyncProgress_DataProgress& a, SyncProgress_DataProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncProgress_DataProgress* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncProgress_DataProgress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncProgress_DataProgress& from);
  void MergeFrom(const SyncProgress_DataProgress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncProgress_DataProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double total = 1;
  void clear_total();
  static const int kTotalFieldNumber = 1;
  double total() const;
  void set_total(double value);

  // double current = 2;
  void clear_current();
  static const int kCurrentFieldNumber = 2;
  double current() const;
  void set_current(double value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.SyncProgress.DataProgress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double total_;
  double current_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2fsync_5fprogress_2eproto::TableStruct;
  friend void ::protobuf_business_2fsync_5fprogress_2eproto::InitDefaultsSyncProgress_DataProgressImpl();
};
// -------------------------------------------------------------------

class SyncProgress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.SyncProgress) */ {
 public:
  SyncProgress();
  virtual ~SyncProgress();

  SyncProgress(const SyncProgress& from);

  inline SyncProgress& operator=(const SyncProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncProgress(SyncProgress&& from) noexcept
    : SyncProgress() {
    *this = ::std::move(from);
  }

  inline SyncProgress& operator=(SyncProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncProgress* internal_default_instance() {
    return reinterpret_cast<const SyncProgress*>(
               &_SyncProgress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SyncProgress* other);
  friend void swap(SyncProgress& a, SyncProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncProgress* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncProgress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncProgress& from);
  void MergeFrom(const SyncProgress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SyncProgress_DataProgress DataProgress;

  // accessors -------------------------------------------------------

  // repeated .xsproto.communication.SyncProgress.DataProgress progress = 1;
  int progress_size() const;
  void clear_progress();
  static const int kProgressFieldNumber = 1;
  const ::xsproto::communication::SyncProgress_DataProgress& progress(int index) const;
  ::xsproto::communication::SyncProgress_DataProgress* mutable_progress(int index);
  ::xsproto::communication::SyncProgress_DataProgress* add_progress();
  ::google::protobuf::RepeatedPtrField< ::xsproto::communication::SyncProgress_DataProgress >*
      mutable_progress();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::communication::SyncProgress_DataProgress >&
      progress() const;

  // double total = 2;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  double total() const;
  void set_total(double value);

  // double current = 3;
  void clear_current();
  static const int kCurrentFieldNumber = 3;
  double current() const;
  void set_current(double value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.SyncProgress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::communication::SyncProgress_DataProgress > progress_;
  double total_;
  double current_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2fsync_5fprogress_2eproto::TableStruct;
  friend void ::protobuf_business_2fsync_5fprogress_2eproto::InitDefaultsSyncProgressImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SyncProgress_DataProgress

// double total = 1;
inline void SyncProgress_DataProgress::clear_total() {
  total_ = 0;
}
inline double SyncProgress_DataProgress::total() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncProgress.DataProgress.total)
  return total_;
}
inline void SyncProgress_DataProgress::set_total(double value) {
  
  total_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncProgress.DataProgress.total)
}

// double current = 2;
inline void SyncProgress_DataProgress::clear_current() {
  current_ = 0;
}
inline double SyncProgress_DataProgress::current() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncProgress.DataProgress.current)
  return current_;
}
inline void SyncProgress_DataProgress::set_current(double value) {
  
  current_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncProgress.DataProgress.current)
}

// -------------------------------------------------------------------

// SyncProgress

// repeated .xsproto.communication.SyncProgress.DataProgress progress = 1;
inline int SyncProgress::progress_size() const {
  return progress_.size();
}
inline void SyncProgress::clear_progress() {
  progress_.Clear();
}
inline const ::xsproto::communication::SyncProgress_DataProgress& SyncProgress::progress(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncProgress.progress)
  return progress_.Get(index);
}
inline ::xsproto::communication::SyncProgress_DataProgress* SyncProgress::mutable_progress(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.communication.SyncProgress.progress)
  return progress_.Mutable(index);
}
inline ::xsproto::communication::SyncProgress_DataProgress* SyncProgress::add_progress() {
  // @@protoc_insertion_point(field_add:xsproto.communication.SyncProgress.progress)
  return progress_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::communication::SyncProgress_DataProgress >*
SyncProgress::mutable_progress() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.communication.SyncProgress.progress)
  return &progress_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::communication::SyncProgress_DataProgress >&
SyncProgress::progress() const {
  // @@protoc_insertion_point(field_list:xsproto.communication.SyncProgress.progress)
  return progress_;
}

// double total = 2;
inline void SyncProgress::clear_total() {
  total_ = 0;
}
inline double SyncProgress::total() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncProgress.total)
  return total_;
}
inline void SyncProgress::set_total(double value) {
  
  total_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncProgress.total)
}

// double current = 3;
inline void SyncProgress::clear_current() {
  current_ = 0;
}
inline double SyncProgress::current() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncProgress.current)
  return current_;
}
inline void SyncProgress::set_current(double value) {
  
  current_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncProgress.current)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace communication
}  // namespace xsproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_business_2fsync_5fprogress_2eproto__INCLUDED
