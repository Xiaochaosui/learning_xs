// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: business/sync_state.proto

#ifndef PROTOBUF_business_2fsync_5fstate_2eproto__INCLUDED
#define PROTOBUF_business_2fsync_5fstate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "business/sync_base.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_business_2fsync_5fstate_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSyncStateImpl();
void InitDefaultsSyncState();
inline void InitDefaults() {
  InitDefaultsSyncState();
}
}  // namespace protobuf_business_2fsync_5fstate_2eproto
namespace xsproto {
namespace communication {
class SyncState;
class SyncStateDefaultTypeInternal;
extern SyncStateDefaultTypeInternal _SyncState_default_instance_;
}  // namespace communication
}  // namespace xsproto
namespace xsproto {
namespace communication {

enum SyncState_State {
  SyncState_State_ERROR = 0,
  SyncState_State_COMPLETE = 1,
  SyncState_State_SyncState_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SyncState_State_SyncState_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SyncState_State_IsValid(int value);
const SyncState_State SyncState_State_State_MIN = SyncState_State_ERROR;
const SyncState_State SyncState_State_State_MAX = SyncState_State_COMPLETE;
const int SyncState_State_State_ARRAYSIZE = SyncState_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* SyncState_State_descriptor();
inline const ::std::string& SyncState_State_Name(SyncState_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    SyncState_State_descriptor(), value);
}
inline bool SyncState_State_Parse(
    const ::std::string& name, SyncState_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SyncState_State>(
    SyncState_State_descriptor(), name, value);
}
// ===================================================================

class SyncState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.SyncState) */ {
 public:
  SyncState();
  virtual ~SyncState();

  SyncState(const SyncState& from);

  inline SyncState& operator=(const SyncState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncState(SyncState&& from) noexcept
    : SyncState() {
    *this = ::std::move(from);
  }

  inline SyncState& operator=(SyncState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncState* internal_default_instance() {
    return reinterpret_cast<const SyncState*>(
               &_SyncState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SyncState* other);
  friend void swap(SyncState& a, SyncState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncState* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncState& from);
  void MergeFrom(const SyncState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SyncState_State State;
  static const State ERROR =
    SyncState_State_ERROR;
  static const State COMPLETE =
    SyncState_State_COMPLETE;
  static inline bool State_IsValid(int value) {
    return SyncState_State_IsValid(value);
  }
  static const State State_MIN =
    SyncState_State_State_MIN;
  static const State State_MAX =
    SyncState_State_State_MAX;
  static const int State_ARRAYSIZE =
    SyncState_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return SyncState_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return SyncState_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return SyncState_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string error_msg = 3;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 3;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_error_msg(::std::string&& value);
  #endif
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // .xsproto.communication.SyncBase base = 4;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 4;
  const ::xsproto::communication::SyncBase& base() const;
  ::xsproto::communication::SyncBase* release_base();
  ::xsproto::communication::SyncBase* mutable_base();
  void set_allocated_base(::xsproto::communication::SyncBase* base);

  // .xsproto.communication.SyncState.State state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::xsproto::communication::SyncState_State state() const;
  void set_state(::xsproto::communication::SyncState_State value);

  // int32 error_code = 2;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.SyncState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  ::xsproto::communication::SyncBase* base_;
  int state_;
  ::google::protobuf::int32 error_code_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2fsync_5fstate_2eproto::TableStruct;
  friend void ::protobuf_business_2fsync_5fstate_2eproto::InitDefaultsSyncStateImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SyncState

// .xsproto.communication.SyncState.State state = 1;
inline void SyncState::clear_state() {
  state_ = 0;
}
inline ::xsproto::communication::SyncState_State SyncState::state() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncState.state)
  return static_cast< ::xsproto::communication::SyncState_State >(state_);
}
inline void SyncState::set_state(::xsproto::communication::SyncState_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncState.state)
}

// int32 error_code = 2;
inline void SyncState::clear_error_code() {
  error_code_ = 0;
}
inline ::google::protobuf::int32 SyncState::error_code() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncState.error_code)
  return error_code_;
}
inline void SyncState::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncState.error_code)
}

// string error_msg = 3;
inline void SyncState::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncState::error_msg() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncState.error_msg)
  return error_msg_.GetNoArena();
}
inline void SyncState::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.SyncState.error_msg)
}
#if LANG_CXX11
inline void SyncState::set_error_msg(::std::string&& value) {
  
  error_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.SyncState.error_msg)
}
#endif
inline void SyncState::set_error_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.SyncState.error_msg)
}
inline void SyncState::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.SyncState.error_msg)
}
inline ::std::string* SyncState::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.SyncState.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncState::release_error_msg() {
  // @@protoc_insertion_point(field_release:xsproto.communication.SyncState.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncState::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.SyncState.error_msg)
}

// .xsproto.communication.SyncBase base = 4;
inline bool SyncState::has_base() const {
  return this != internal_default_instance() && base_ != NULL;
}
inline const ::xsproto::communication::SyncBase& SyncState::base() const {
  const ::xsproto::communication::SyncBase* p = base_;
  // @@protoc_insertion_point(field_get:xsproto.communication.SyncState.base)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::communication::SyncBase*>(
      &::xsproto::communication::_SyncBase_default_instance_);
}
inline ::xsproto::communication::SyncBase* SyncState::release_base() {
  // @@protoc_insertion_point(field_release:xsproto.communication.SyncState.base)
  
  ::xsproto::communication::SyncBase* temp = base_;
  base_ = NULL;
  return temp;
}
inline ::xsproto::communication::SyncBase* SyncState::mutable_base() {
  
  if (base_ == NULL) {
    base_ = new ::xsproto::communication::SyncBase;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.SyncState.base)
  return base_;
}
inline void SyncState::set_allocated_base(::xsproto::communication::SyncBase* base) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(base_);
  }
  if (base) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base, submessage_arena);
    }
    
  } else {
    
  }
  base_ = base;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.SyncState.base)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace communication
}  // namespace xsproto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xsproto::communication::SyncState_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::communication::SyncState_State>() {
  return ::xsproto::communication::SyncState_State_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_business_2fsync_5fstate_2eproto__INCLUDED
