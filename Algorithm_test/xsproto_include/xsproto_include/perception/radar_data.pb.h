// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perception/radar_data.proto

#ifndef PROTOBUF_perception_2fradar_5fdata_2eproto__INCLUDED
#define PROTOBUF_perception_2fradar_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "base/header.pb.h"
#include "perception/perception_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_perception_2fradar_5fdata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRadarPointImpl();
void InitDefaultsRadarPoint();
void InitDefaultsRadarObjectImpl();
void InitDefaultsRadarObject();
void InitDefaultsRadarDataImpl();
void InitDefaultsRadarData();
inline void InitDefaults() {
  InitDefaultsRadarPoint();
  InitDefaultsRadarObject();
  InitDefaultsRadarData();
}
}  // namespace protobuf_perception_2fradar_5fdata_2eproto
namespace xsproto {
namespace perception {
class RadarData;
class RadarDataDefaultTypeInternal;
extern RadarDataDefaultTypeInternal _RadarData_default_instance_;
class RadarObject;
class RadarObjectDefaultTypeInternal;
extern RadarObjectDefaultTypeInternal _RadarObject_default_instance_;
class RadarPoint;
class RadarPointDefaultTypeInternal;
extern RadarPointDefaultTypeInternal _RadarPoint_default_instance_;
}  // namespace perception
}  // namespace xsproto
namespace xsproto {
namespace perception {

// ===================================================================

class RadarPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.perception.RadarPoint) */ {
 public:
  RadarPoint();
  virtual ~RadarPoint();

  RadarPoint(const RadarPoint& from);

  inline RadarPoint& operator=(const RadarPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RadarPoint(RadarPoint&& from) noexcept
    : RadarPoint() {
    *this = ::std::move(from);
  }

  inline RadarPoint& operator=(RadarPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RadarPoint* internal_default_instance() {
    return reinterpret_cast<const RadarPoint*>(
               &_RadarPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RadarPoint* other);
  friend void swap(RadarPoint& a, RadarPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RadarPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  RadarPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RadarPoint& from);
  void MergeFrom(const RadarPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RadarPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // float vx = 4;
  void clear_vx();
  static const int kVxFieldNumber = 4;
  float vx() const;
  void set_vx(float value);

  // float vy = 5;
  void clear_vy();
  static const int kVyFieldNumber = 5;
  float vy() const;
  void set_vy(float value);

  // float vz = 6;
  void clear_vz();
  static const int kVzFieldNumber = 6;
  float vz() const;
  void set_vz(float value);

  // float snr = 7;
  void clear_snr();
  static const int kSnrFieldNumber = 7;
  float snr() const;
  void set_snr(float value);

  // float doppler_speed = 8;
  void clear_doppler_speed();
  static const int kDopplerSpeedFieldNumber = 8;
  float doppler_speed() const;
  void set_doppler_speed(float value);

  // float range = 9;
  void clear_range();
  static const int kRangeFieldNumber = 9;
  float range() const;
  void set_range(float value);

  // float azimuth_angle = 10;
  void clear_azimuth_angle();
  static const int kAzimuthAngleFieldNumber = 10;
  float azimuth_angle() const;
  void set_azimuth_angle(float value);

  // float elevation_angle = 11;
  void clear_elevation_angle();
  static const int kElevationAngleFieldNumber = 11;
  float elevation_angle() const;
  void set_elevation_angle(float value);

  // @@protoc_insertion_point(class_scope:xsproto.perception.RadarPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  float vx_;
  float vy_;
  float vz_;
  float snr_;
  float doppler_speed_;
  float range_;
  float azimuth_angle_;
  float elevation_angle_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_2fradar_5fdata_2eproto::TableStruct;
  friend void ::protobuf_perception_2fradar_5fdata_2eproto::InitDefaultsRadarPointImpl();
};
// -------------------------------------------------------------------

class RadarObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.perception.RadarObject) */ {
 public:
  RadarObject();
  virtual ~RadarObject();

  RadarObject(const RadarObject& from);

  inline RadarObject& operator=(const RadarObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RadarObject(RadarObject&& from) noexcept
    : RadarObject() {
    *this = ::std::move(from);
  }

  inline RadarObject& operator=(RadarObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RadarObject* internal_default_instance() {
    return reinterpret_cast<const RadarObject*>(
               &_RadarObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RadarObject* other);
  friend void swap(RadarObject& a, RadarObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RadarObject* New() const PROTOBUF_FINAL { return New(NULL); }

  RadarObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RadarObject& from);
  void MergeFrom(const RadarObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RadarObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // float x = 3;
  void clear_x();
  static const int kXFieldNumber = 3;
  float x() const;
  void set_x(float value);

  // float y = 4;
  void clear_y();
  static const int kYFieldNumber = 4;
  float y() const;
  void set_y(float value);

  // float z = 5;
  void clear_z();
  static const int kZFieldNumber = 5;
  float z() const;
  void set_z(float value);

  // float snr = 6;
  void clear_snr();
  static const int kSnrFieldNumber = 6;
  float snr() const;
  void set_snr(float value);

  // float vx = 7;
  void clear_vx();
  static const int kVxFieldNumber = 7;
  float vx() const;
  void set_vx(float value);

  // float vy = 8;
  void clear_vy();
  static const int kVyFieldNumber = 8;
  float vy() const;
  void set_vy(float value);

  // float vz = 9;
  void clear_vz();
  static const int kVzFieldNumber = 9;
  float vz() const;
  void set_vz(float value);

  // float h = 10;
  void clear_h();
  static const int kHFieldNumber = 10;
  float h() const;
  void set_h(float value);

  // float w = 11;
  void clear_w();
  static const int kWFieldNumber = 11;
  float w() const;
  void set_w(float value);

  // float l = 12;
  void clear_l();
  static const int kLFieldNumber = 12;
  float l() const;
  void set_l(float value);

  // float r_angle = 13;
  void clear_r_angle();
  static const int kRAngleFieldNumber = 13;
  float r_angle() const;
  void set_r_angle(float value);

  // float score = 14;
  void clear_score();
  static const int kScoreFieldNumber = 14;
  float score() const;
  void set_score(float value);

  // sint32 obj_rcs = 15;
  void clear_obj_rcs();
  static const int kObjRcsFieldNumber = 15;
  ::google::protobuf::int32 obj_rcs() const;
  void set_obj_rcs(::google::protobuf::int32 value);

  // uint32 probexist = 16;
  void clear_probexist();
  static const int kProbexistFieldNumber = 16;
  ::google::protobuf::uint32 probexist() const;
  void set_probexist(::google::protobuf::uint32 value);

  // uint32 meas_state = 17;
  void clear_meas_state();
  static const int kMeasStateFieldNumber = 17;
  ::google::protobuf::uint32 meas_state() const;
  void set_meas_state(::google::protobuf::uint32 value);

  // uint32 distLong_rms = 18;
  void clear_distlong_rms();
  static const int kDistLongRmsFieldNumber = 18;
  ::google::protobuf::uint32 distlong_rms() const;
  void set_distlong_rms(::google::protobuf::uint32 value);

  // uint32 distLat_rms = 19;
  void clear_distlat_rms();
  static const int kDistLatRmsFieldNumber = 19;
  ::google::protobuf::uint32 distlat_rms() const;
  void set_distlat_rms(::google::protobuf::uint32 value);

  // uint32 vrelLong_rms = 20;
  void clear_vrellong_rms();
  static const int kVrelLongRmsFieldNumber = 20;
  ::google::protobuf::uint32 vrellong_rms() const;
  void set_vrellong_rms(::google::protobuf::uint32 value);

  // uint32 vrelLat_rms = 21;
  void clear_vrellat_rms();
  static const int kVrelLatRmsFieldNumber = 21;
  ::google::protobuf::uint32 vrellat_rms() const;
  void set_vrellat_rms(::google::protobuf::uint32 value);

  // uint32 arelLong_rms = 22;
  void clear_arellong_rms();
  static const int kArelLongRmsFieldNumber = 22;
  ::google::protobuf::uint32 arellong_rms() const;
  void set_arellong_rms(::google::protobuf::uint32 value);

  // uint32 arelLat_rms = 23;
  void clear_arellat_rms();
  static const int kArelLatRmsFieldNumber = 23;
  ::google::protobuf::uint32 arellat_rms() const;
  void set_arellat_rms(::google::protobuf::uint32 value);

  // uint32 orientation_rms = 24;
  void clear_orientation_rms();
  static const int kOrientationRmsFieldNumber = 24;
  ::google::protobuf::uint32 orientation_rms() const;
  void set_orientation_rms(::google::protobuf::uint32 value);

  // uint32 dyn_prop = 25;
  void clear_dyn_prop();
  static const int kDynPropFieldNumber = 25;
  ::google::protobuf::uint32 dyn_prop() const;
  void set_dyn_prop(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xsproto.perception.RadarObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  float x_;
  float y_;
  float z_;
  float snr_;
  float vx_;
  float vy_;
  float vz_;
  float h_;
  float w_;
  float l_;
  float r_angle_;
  float score_;
  ::google::protobuf::int32 obj_rcs_;
  ::google::protobuf::uint32 probexist_;
  ::google::protobuf::uint32 meas_state_;
  ::google::protobuf::uint32 distlong_rms_;
  ::google::protobuf::uint32 distlat_rms_;
  ::google::protobuf::uint32 vrellong_rms_;
  ::google::protobuf::uint32 vrellat_rms_;
  ::google::protobuf::uint32 arellong_rms_;
  ::google::protobuf::uint32 arellat_rms_;
  ::google::protobuf::uint32 orientation_rms_;
  ::google::protobuf::uint32 dyn_prop_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_2fradar_5fdata_2eproto::TableStruct;
  friend void ::protobuf_perception_2fradar_5fdata_2eproto::InitDefaultsRadarObjectImpl();
};
// -------------------------------------------------------------------

class RadarData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.perception.RadarData) */ {
 public:
  RadarData();
  virtual ~RadarData();

  RadarData(const RadarData& from);

  inline RadarData& operator=(const RadarData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RadarData(RadarData&& from) noexcept
    : RadarData() {
    *this = ::std::move(from);
  }

  inline RadarData& operator=(RadarData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RadarData* internal_default_instance() {
    return reinterpret_cast<const RadarData*>(
               &_RadarData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RadarData* other);
  friend void swap(RadarData& a, RadarData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RadarData* New() const PROTOBUF_FINAL { return New(NULL); }

  RadarData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RadarData& from);
  void MergeFrom(const RadarData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RadarData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xsproto.perception.RadarPoint radar_points = 3;
  int radar_points_size() const;
  void clear_radar_points();
  static const int kRadarPointsFieldNumber = 3;
  const ::xsproto::perception::RadarPoint& radar_points(int index) const;
  ::xsproto::perception::RadarPoint* mutable_radar_points(int index);
  ::xsproto::perception::RadarPoint* add_radar_points();
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::RadarPoint >*
      mutable_radar_points();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::RadarPoint >&
      radar_points() const;

  // repeated .xsproto.perception.RadarObject radar_objects = 4;
  int radar_objects_size() const;
  void clear_radar_objects();
  static const int kRadarObjectsFieldNumber = 4;
  const ::xsproto::perception::RadarObject& radar_objects(int index) const;
  ::xsproto::perception::RadarObject* mutable_radar_objects(int index);
  ::xsproto::perception::RadarObject* add_radar_objects();
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::RadarObject >*
      mutable_radar_objects();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::RadarObject >&
      radar_objects() const;

  // .xsproto.base.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::xsproto::base::Header& header() const;
  ::xsproto::base::Header* release_header();
  ::xsproto::base::Header* mutable_header();
  void set_allocated_header(::xsproto::base::Header* header);

  // .xsproto.perception.ExtrinsicParameters extrinsic_params = 2;
  bool has_extrinsic_params() const;
  void clear_extrinsic_params();
  static const int kExtrinsicParamsFieldNumber = 2;
  const ::xsproto::perception::ExtrinsicParameters& extrinsic_params() const;
  ::xsproto::perception::ExtrinsicParameters* release_extrinsic_params();
  ::xsproto::perception::ExtrinsicParameters* mutable_extrinsic_params();
  void set_allocated_extrinsic_params(::xsproto::perception::ExtrinsicParameters* extrinsic_params);

  // uint32 radar_id = 5;
  void clear_radar_id();
  static const int kRadarIdFieldNumber = 5;
  ::google::protobuf::uint32 radar_id() const;
  void set_radar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xsproto.perception.RadarData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::RadarPoint > radar_points_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::RadarObject > radar_objects_;
  ::xsproto::base::Header* header_;
  ::xsproto::perception::ExtrinsicParameters* extrinsic_params_;
  ::google::protobuf::uint32 radar_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_2fradar_5fdata_2eproto::TableStruct;
  friend void ::protobuf_perception_2fradar_5fdata_2eproto::InitDefaultsRadarDataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RadarPoint

// float x = 1;
inline void RadarPoint::clear_x() {
  x_ = 0;
}
inline float RadarPoint::x() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarPoint.x)
  return x_;
}
inline void RadarPoint::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarPoint.x)
}

// float y = 2;
inline void RadarPoint::clear_y() {
  y_ = 0;
}
inline float RadarPoint::y() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarPoint.y)
  return y_;
}
inline void RadarPoint::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarPoint.y)
}

// float z = 3;
inline void RadarPoint::clear_z() {
  z_ = 0;
}
inline float RadarPoint::z() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarPoint.z)
  return z_;
}
inline void RadarPoint::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarPoint.z)
}

// float vx = 4;
inline void RadarPoint::clear_vx() {
  vx_ = 0;
}
inline float RadarPoint::vx() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarPoint.vx)
  return vx_;
}
inline void RadarPoint::set_vx(float value) {
  
  vx_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarPoint.vx)
}

// float vy = 5;
inline void RadarPoint::clear_vy() {
  vy_ = 0;
}
inline float RadarPoint::vy() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarPoint.vy)
  return vy_;
}
inline void RadarPoint::set_vy(float value) {
  
  vy_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarPoint.vy)
}

// float vz = 6;
inline void RadarPoint::clear_vz() {
  vz_ = 0;
}
inline float RadarPoint::vz() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarPoint.vz)
  return vz_;
}
inline void RadarPoint::set_vz(float value) {
  
  vz_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarPoint.vz)
}

// float snr = 7;
inline void RadarPoint::clear_snr() {
  snr_ = 0;
}
inline float RadarPoint::snr() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarPoint.snr)
  return snr_;
}
inline void RadarPoint::set_snr(float value) {
  
  snr_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarPoint.snr)
}

// float doppler_speed = 8;
inline void RadarPoint::clear_doppler_speed() {
  doppler_speed_ = 0;
}
inline float RadarPoint::doppler_speed() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarPoint.doppler_speed)
  return doppler_speed_;
}
inline void RadarPoint::set_doppler_speed(float value) {
  
  doppler_speed_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarPoint.doppler_speed)
}

// float range = 9;
inline void RadarPoint::clear_range() {
  range_ = 0;
}
inline float RadarPoint::range() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarPoint.range)
  return range_;
}
inline void RadarPoint::set_range(float value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarPoint.range)
}

// float azimuth_angle = 10;
inline void RadarPoint::clear_azimuth_angle() {
  azimuth_angle_ = 0;
}
inline float RadarPoint::azimuth_angle() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarPoint.azimuth_angle)
  return azimuth_angle_;
}
inline void RadarPoint::set_azimuth_angle(float value) {
  
  azimuth_angle_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarPoint.azimuth_angle)
}

// float elevation_angle = 11;
inline void RadarPoint::clear_elevation_angle() {
  elevation_angle_ = 0;
}
inline float RadarPoint::elevation_angle() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarPoint.elevation_angle)
  return elevation_angle_;
}
inline void RadarPoint::set_elevation_angle(float value) {
  
  elevation_angle_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarPoint.elevation_angle)
}

// -------------------------------------------------------------------

// RadarObject

// uint32 id = 1;
inline void RadarObject::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 RadarObject::id() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.id)
  return id_;
}
inline void RadarObject::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.id)
}

// uint32 type = 2;
inline void RadarObject::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 RadarObject::type() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.type)
  return type_;
}
inline void RadarObject::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.type)
}

// float x = 3;
inline void RadarObject::clear_x() {
  x_ = 0;
}
inline float RadarObject::x() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.x)
  return x_;
}
inline void RadarObject::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.x)
}

// float y = 4;
inline void RadarObject::clear_y() {
  y_ = 0;
}
inline float RadarObject::y() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.y)
  return y_;
}
inline void RadarObject::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.y)
}

// float z = 5;
inline void RadarObject::clear_z() {
  z_ = 0;
}
inline float RadarObject::z() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.z)
  return z_;
}
inline void RadarObject::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.z)
}

// float snr = 6;
inline void RadarObject::clear_snr() {
  snr_ = 0;
}
inline float RadarObject::snr() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.snr)
  return snr_;
}
inline void RadarObject::set_snr(float value) {
  
  snr_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.snr)
}

// float vx = 7;
inline void RadarObject::clear_vx() {
  vx_ = 0;
}
inline float RadarObject::vx() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.vx)
  return vx_;
}
inline void RadarObject::set_vx(float value) {
  
  vx_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.vx)
}

// float vy = 8;
inline void RadarObject::clear_vy() {
  vy_ = 0;
}
inline float RadarObject::vy() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.vy)
  return vy_;
}
inline void RadarObject::set_vy(float value) {
  
  vy_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.vy)
}

// float vz = 9;
inline void RadarObject::clear_vz() {
  vz_ = 0;
}
inline float RadarObject::vz() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.vz)
  return vz_;
}
inline void RadarObject::set_vz(float value) {
  
  vz_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.vz)
}

// float h = 10;
inline void RadarObject::clear_h() {
  h_ = 0;
}
inline float RadarObject::h() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.h)
  return h_;
}
inline void RadarObject::set_h(float value) {
  
  h_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.h)
}

// float w = 11;
inline void RadarObject::clear_w() {
  w_ = 0;
}
inline float RadarObject::w() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.w)
  return w_;
}
inline void RadarObject::set_w(float value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.w)
}

// float l = 12;
inline void RadarObject::clear_l() {
  l_ = 0;
}
inline float RadarObject::l() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.l)
  return l_;
}
inline void RadarObject::set_l(float value) {
  
  l_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.l)
}

// float r_angle = 13;
inline void RadarObject::clear_r_angle() {
  r_angle_ = 0;
}
inline float RadarObject::r_angle() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.r_angle)
  return r_angle_;
}
inline void RadarObject::set_r_angle(float value) {
  
  r_angle_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.r_angle)
}

// float score = 14;
inline void RadarObject::clear_score() {
  score_ = 0;
}
inline float RadarObject::score() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.score)
  return score_;
}
inline void RadarObject::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.score)
}

// sint32 obj_rcs = 15;
inline void RadarObject::clear_obj_rcs() {
  obj_rcs_ = 0;
}
inline ::google::protobuf::int32 RadarObject::obj_rcs() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.obj_rcs)
  return obj_rcs_;
}
inline void RadarObject::set_obj_rcs(::google::protobuf::int32 value) {
  
  obj_rcs_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.obj_rcs)
}

// uint32 probexist = 16;
inline void RadarObject::clear_probexist() {
  probexist_ = 0u;
}
inline ::google::protobuf::uint32 RadarObject::probexist() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.probexist)
  return probexist_;
}
inline void RadarObject::set_probexist(::google::protobuf::uint32 value) {
  
  probexist_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.probexist)
}

// uint32 meas_state = 17;
inline void RadarObject::clear_meas_state() {
  meas_state_ = 0u;
}
inline ::google::protobuf::uint32 RadarObject::meas_state() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.meas_state)
  return meas_state_;
}
inline void RadarObject::set_meas_state(::google::protobuf::uint32 value) {
  
  meas_state_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.meas_state)
}

// uint32 distLong_rms = 18;
inline void RadarObject::clear_distlong_rms() {
  distlong_rms_ = 0u;
}
inline ::google::protobuf::uint32 RadarObject::distlong_rms() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.distLong_rms)
  return distlong_rms_;
}
inline void RadarObject::set_distlong_rms(::google::protobuf::uint32 value) {
  
  distlong_rms_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.distLong_rms)
}

// uint32 distLat_rms = 19;
inline void RadarObject::clear_distlat_rms() {
  distlat_rms_ = 0u;
}
inline ::google::protobuf::uint32 RadarObject::distlat_rms() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.distLat_rms)
  return distlat_rms_;
}
inline void RadarObject::set_distlat_rms(::google::protobuf::uint32 value) {
  
  distlat_rms_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.distLat_rms)
}

// uint32 vrelLong_rms = 20;
inline void RadarObject::clear_vrellong_rms() {
  vrellong_rms_ = 0u;
}
inline ::google::protobuf::uint32 RadarObject::vrellong_rms() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.vrelLong_rms)
  return vrellong_rms_;
}
inline void RadarObject::set_vrellong_rms(::google::protobuf::uint32 value) {
  
  vrellong_rms_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.vrelLong_rms)
}

// uint32 vrelLat_rms = 21;
inline void RadarObject::clear_vrellat_rms() {
  vrellat_rms_ = 0u;
}
inline ::google::protobuf::uint32 RadarObject::vrellat_rms() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.vrelLat_rms)
  return vrellat_rms_;
}
inline void RadarObject::set_vrellat_rms(::google::protobuf::uint32 value) {
  
  vrellat_rms_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.vrelLat_rms)
}

// uint32 arelLong_rms = 22;
inline void RadarObject::clear_arellong_rms() {
  arellong_rms_ = 0u;
}
inline ::google::protobuf::uint32 RadarObject::arellong_rms() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.arelLong_rms)
  return arellong_rms_;
}
inline void RadarObject::set_arellong_rms(::google::protobuf::uint32 value) {
  
  arellong_rms_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.arelLong_rms)
}

// uint32 arelLat_rms = 23;
inline void RadarObject::clear_arellat_rms() {
  arellat_rms_ = 0u;
}
inline ::google::protobuf::uint32 RadarObject::arellat_rms() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.arelLat_rms)
  return arellat_rms_;
}
inline void RadarObject::set_arellat_rms(::google::protobuf::uint32 value) {
  
  arellat_rms_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.arelLat_rms)
}

// uint32 orientation_rms = 24;
inline void RadarObject::clear_orientation_rms() {
  orientation_rms_ = 0u;
}
inline ::google::protobuf::uint32 RadarObject::orientation_rms() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.orientation_rms)
  return orientation_rms_;
}
inline void RadarObject::set_orientation_rms(::google::protobuf::uint32 value) {
  
  orientation_rms_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.orientation_rms)
}

// uint32 dyn_prop = 25;
inline void RadarObject::clear_dyn_prop() {
  dyn_prop_ = 0u;
}
inline ::google::protobuf::uint32 RadarObject::dyn_prop() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarObject.dyn_prop)
  return dyn_prop_;
}
inline void RadarObject::set_dyn_prop(::google::protobuf::uint32 value) {
  
  dyn_prop_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarObject.dyn_prop)
}

// -------------------------------------------------------------------

// RadarData

// .xsproto.base.Header header = 1;
inline bool RadarData::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::xsproto::base::Header& RadarData::header() const {
  const ::xsproto::base::Header* p = header_;
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarData.header)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::base::Header*>(
      &::xsproto::base::_Header_default_instance_);
}
inline ::xsproto::base::Header* RadarData::release_header() {
  // @@protoc_insertion_point(field_release:xsproto.perception.RadarData.header)
  
  ::xsproto::base::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::xsproto::base::Header* RadarData::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::xsproto::base::Header;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.perception.RadarData.header)
  return header_;
}
inline void RadarData::set_allocated_header(::xsproto::base::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:xsproto.perception.RadarData.header)
}

// .xsproto.perception.ExtrinsicParameters extrinsic_params = 2;
inline bool RadarData::has_extrinsic_params() const {
  return this != internal_default_instance() && extrinsic_params_ != NULL;
}
inline const ::xsproto::perception::ExtrinsicParameters& RadarData::extrinsic_params() const {
  const ::xsproto::perception::ExtrinsicParameters* p = extrinsic_params_;
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarData.extrinsic_params)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::perception::ExtrinsicParameters*>(
      &::xsproto::perception::_ExtrinsicParameters_default_instance_);
}
inline ::xsproto::perception::ExtrinsicParameters* RadarData::release_extrinsic_params() {
  // @@protoc_insertion_point(field_release:xsproto.perception.RadarData.extrinsic_params)
  
  ::xsproto::perception::ExtrinsicParameters* temp = extrinsic_params_;
  extrinsic_params_ = NULL;
  return temp;
}
inline ::xsproto::perception::ExtrinsicParameters* RadarData::mutable_extrinsic_params() {
  
  if (extrinsic_params_ == NULL) {
    extrinsic_params_ = new ::xsproto::perception::ExtrinsicParameters;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.perception.RadarData.extrinsic_params)
  return extrinsic_params_;
}
inline void RadarData::set_allocated_extrinsic_params(::xsproto::perception::ExtrinsicParameters* extrinsic_params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(extrinsic_params_);
  }
  if (extrinsic_params) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      extrinsic_params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extrinsic_params, submessage_arena);
    }
    
  } else {
    
  }
  extrinsic_params_ = extrinsic_params;
  // @@protoc_insertion_point(field_set_allocated:xsproto.perception.RadarData.extrinsic_params)
}

// repeated .xsproto.perception.RadarPoint radar_points = 3;
inline int RadarData::radar_points_size() const {
  return radar_points_.size();
}
inline void RadarData::clear_radar_points() {
  radar_points_.Clear();
}
inline const ::xsproto::perception::RadarPoint& RadarData::radar_points(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarData.radar_points)
  return radar_points_.Get(index);
}
inline ::xsproto::perception::RadarPoint* RadarData::mutable_radar_points(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.perception.RadarData.radar_points)
  return radar_points_.Mutable(index);
}
inline ::xsproto::perception::RadarPoint* RadarData::add_radar_points() {
  // @@protoc_insertion_point(field_add:xsproto.perception.RadarData.radar_points)
  return radar_points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::perception::RadarPoint >*
RadarData::mutable_radar_points() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.perception.RadarData.radar_points)
  return &radar_points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::RadarPoint >&
RadarData::radar_points() const {
  // @@protoc_insertion_point(field_list:xsproto.perception.RadarData.radar_points)
  return radar_points_;
}

// repeated .xsproto.perception.RadarObject radar_objects = 4;
inline int RadarData::radar_objects_size() const {
  return radar_objects_.size();
}
inline void RadarData::clear_radar_objects() {
  radar_objects_.Clear();
}
inline const ::xsproto::perception::RadarObject& RadarData::radar_objects(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarData.radar_objects)
  return radar_objects_.Get(index);
}
inline ::xsproto::perception::RadarObject* RadarData::mutable_radar_objects(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.perception.RadarData.radar_objects)
  return radar_objects_.Mutable(index);
}
inline ::xsproto::perception::RadarObject* RadarData::add_radar_objects() {
  // @@protoc_insertion_point(field_add:xsproto.perception.RadarData.radar_objects)
  return radar_objects_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::perception::RadarObject >*
RadarData::mutable_radar_objects() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.perception.RadarData.radar_objects)
  return &radar_objects_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::RadarObject >&
RadarData::radar_objects() const {
  // @@protoc_insertion_point(field_list:xsproto.perception.RadarData.radar_objects)
  return radar_objects_;
}

// uint32 radar_id = 5;
inline void RadarData::clear_radar_id() {
  radar_id_ = 0u;
}
inline ::google::protobuf::uint32 RadarData::radar_id() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.RadarData.radar_id)
  return radar_id_;
}
inline void RadarData::set_radar_id(::google::protobuf::uint32 value) {
  
  radar_id_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.RadarData.radar_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace xsproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_perception_2fradar_5fdata_2eproto__INCLUDED
