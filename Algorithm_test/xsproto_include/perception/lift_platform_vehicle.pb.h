// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perception/lift_platform_vehicle.proto

#ifndef PROTOBUF_perception_2flift_5fplatform_5fvehicle_2eproto__INCLUDED
#define PROTOBUF_perception_2flift_5fplatform_5fvehicle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "base/header.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_perception_2flift_5fplatform_5fvehicle_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsTwoDimAreaImpl();
void InitDefaultsTwoDimArea();
void InitDefaultsSingleObjectImpl();
void InitDefaultsSingleObject();
void InitDefaultsLiftPlatformVehiclesImpl();
void InitDefaultsLiftPlatformVehicles();
inline void InitDefaults() {
  InitDefaultsTwoDimArea();
  InitDefaultsSingleObject();
  InitDefaultsLiftPlatformVehicles();
}
}  // namespace protobuf_perception_2flift_5fplatform_5fvehicle_2eproto
namespace xsproto {
namespace perception {
class LiftPlatformVehicles;
class LiftPlatformVehiclesDefaultTypeInternal;
extern LiftPlatformVehiclesDefaultTypeInternal _LiftPlatformVehicles_default_instance_;
class SingleObject;
class SingleObjectDefaultTypeInternal;
extern SingleObjectDefaultTypeInternal _SingleObject_default_instance_;
class TwoDimArea;
class TwoDimAreaDefaultTypeInternal;
extern TwoDimAreaDefaultTypeInternal _TwoDimArea_default_instance_;
}  // namespace perception
}  // namespace xsproto
namespace xsproto {
namespace perception {

// ===================================================================

class TwoDimArea : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.perception.TwoDimArea) */ {
 public:
  TwoDimArea();
  virtual ~TwoDimArea();

  TwoDimArea(const TwoDimArea& from);

  inline TwoDimArea& operator=(const TwoDimArea& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TwoDimArea(TwoDimArea&& from) noexcept
    : TwoDimArea() {
    *this = ::std::move(from);
  }

  inline TwoDimArea& operator=(TwoDimArea&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TwoDimArea& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TwoDimArea* internal_default_instance() {
    return reinterpret_cast<const TwoDimArea*>(
               &_TwoDimArea_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TwoDimArea* other);
  friend void swap(TwoDimArea& a, TwoDimArea& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TwoDimArea* New() const PROTOBUF_FINAL { return New(NULL); }

  TwoDimArea* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TwoDimArea& from);
  void MergeFrom(const TwoDimArea& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TwoDimArea* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double x = 1;
  int x_size() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x(int index) const;
  void set_x(int index, double value);
  void add_x(double value);
  const ::google::protobuf::RepeatedField< double >&
      x() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_x();

  // repeated double y = 2;
  int y_size() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y(int index) const;
  void set_y(int index, double value);
  void add_y(double value);
  const ::google::protobuf::RepeatedField< double >&
      y() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_y();

  // uint32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // bool close_loop = 4;
  void clear_close_loop();
  static const int kCloseLoopFieldNumber = 4;
  bool close_loop() const;
  void set_close_loop(bool value);

  // @@protoc_insertion_point(class_scope:xsproto.perception.TwoDimArea)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > x_;
  mutable int _x_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > y_;
  mutable int _y_cached_byte_size_;
  ::google::protobuf::uint32 type_;
  bool close_loop_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_2flift_5fplatform_5fvehicle_2eproto::TableStruct;
  friend void ::protobuf_perception_2flift_5fplatform_5fvehicle_2eproto::InitDefaultsTwoDimAreaImpl();
};
// -------------------------------------------------------------------

class SingleObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.perception.SingleObject) */ {
 public:
  SingleObject();
  virtual ~SingleObject();

  SingleObject(const SingleObject& from);

  inline SingleObject& operator=(const SingleObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SingleObject(SingleObject&& from) noexcept
    : SingleObject() {
    *this = ::std::move(from);
  }

  inline SingleObject& operator=(SingleObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SingleObject* internal_default_instance() {
    return reinterpret_cast<const SingleObject*>(
               &_SingleObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SingleObject* other);
  friend void swap(SingleObject& a, SingleObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SingleObject* New() const PROTOBUF_FINAL { return New(NULL); }

  SingleObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SingleObject& from);
  void MergeFrom(const SingleObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SingleObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xsproto.perception.TwoDimArea rear_region = 5;
  bool has_rear_region() const;
  void clear_rear_region();
  static const int kRearRegionFieldNumber = 5;
  const ::xsproto::perception::TwoDimArea& rear_region() const;
  ::xsproto::perception::TwoDimArea* release_rear_region();
  ::xsproto::perception::TwoDimArea* mutable_rear_region();
  void set_allocated_rear_region(::xsproto::perception::TwoDimArea* rear_region);

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double orientation_angle = 3;
  void clear_orientation_angle();
  static const int kOrientationAngleFieldNumber = 3;
  double orientation_angle() const;
  void set_orientation_angle(double value);

  // bool is_rear_visible = 4;
  void clear_is_rear_visible();
  static const int kIsRearVisibleFieldNumber = 4;
  bool is_rear_visible() const;
  void set_is_rear_visible(bool value);

  // @@protoc_insertion_point(class_scope:xsproto.perception.SingleObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xsproto::perception::TwoDimArea* rear_region_;
  double x_;
  double y_;
  double orientation_angle_;
  bool is_rear_visible_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_2flift_5fplatform_5fvehicle_2eproto::TableStruct;
  friend void ::protobuf_perception_2flift_5fplatform_5fvehicle_2eproto::InitDefaultsSingleObjectImpl();
};
// -------------------------------------------------------------------

class LiftPlatformVehicles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.perception.LiftPlatformVehicles) */ {
 public:
  LiftPlatformVehicles();
  virtual ~LiftPlatformVehicles();

  LiftPlatformVehicles(const LiftPlatformVehicles& from);

  inline LiftPlatformVehicles& operator=(const LiftPlatformVehicles& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LiftPlatformVehicles(LiftPlatformVehicles&& from) noexcept
    : LiftPlatformVehicles() {
    *this = ::std::move(from);
  }

  inline LiftPlatformVehicles& operator=(LiftPlatformVehicles&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LiftPlatformVehicles& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LiftPlatformVehicles* internal_default_instance() {
    return reinterpret_cast<const LiftPlatformVehicles*>(
               &_LiftPlatformVehicles_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(LiftPlatformVehicles* other);
  friend void swap(LiftPlatformVehicles& a, LiftPlatformVehicles& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LiftPlatformVehicles* New() const PROTOBUF_FINAL { return New(NULL); }

  LiftPlatformVehicles* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LiftPlatformVehicles& from);
  void MergeFrom(const LiftPlatformVehicles& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LiftPlatformVehicles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xsproto.perception.SingleObject detected_vehicles = 2;
  int detected_vehicles_size() const;
  void clear_detected_vehicles();
  static const int kDetectedVehiclesFieldNumber = 2;
  const ::xsproto::perception::SingleObject& detected_vehicles(int index) const;
  ::xsproto::perception::SingleObject* mutable_detected_vehicles(int index);
  ::xsproto::perception::SingleObject* add_detected_vehicles();
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::SingleObject >*
      mutable_detected_vehicles();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::SingleObject >&
      detected_vehicles() const;

  // .xsproto.base.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::xsproto::base::Header& header() const;
  ::xsproto::base::Header* release_header();
  ::xsproto::base::Header* mutable_header();
  void set_allocated_header(::xsproto::base::Header* header);

  // @@protoc_insertion_point(class_scope:xsproto.perception.LiftPlatformVehicles)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::SingleObject > detected_vehicles_;
  ::xsproto::base::Header* header_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_2flift_5fplatform_5fvehicle_2eproto::TableStruct;
  friend void ::protobuf_perception_2flift_5fplatform_5fvehicle_2eproto::InitDefaultsLiftPlatformVehiclesImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TwoDimArea

// repeated double x = 1;
inline int TwoDimArea::x_size() const {
  return x_.size();
}
inline void TwoDimArea::clear_x() {
  x_.Clear();
}
inline double TwoDimArea::x(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.perception.TwoDimArea.x)
  return x_.Get(index);
}
inline void TwoDimArea::set_x(int index, double value) {
  x_.Set(index, value);
  // @@protoc_insertion_point(field_set:xsproto.perception.TwoDimArea.x)
}
inline void TwoDimArea::add_x(double value) {
  x_.Add(value);
  // @@protoc_insertion_point(field_add:xsproto.perception.TwoDimArea.x)
}
inline const ::google::protobuf::RepeatedField< double >&
TwoDimArea::x() const {
  // @@protoc_insertion_point(field_list:xsproto.perception.TwoDimArea.x)
  return x_;
}
inline ::google::protobuf::RepeatedField< double >*
TwoDimArea::mutable_x() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.perception.TwoDimArea.x)
  return &x_;
}

// repeated double y = 2;
inline int TwoDimArea::y_size() const {
  return y_.size();
}
inline void TwoDimArea::clear_y() {
  y_.Clear();
}
inline double TwoDimArea::y(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.perception.TwoDimArea.y)
  return y_.Get(index);
}
inline void TwoDimArea::set_y(int index, double value) {
  y_.Set(index, value);
  // @@protoc_insertion_point(field_set:xsproto.perception.TwoDimArea.y)
}
inline void TwoDimArea::add_y(double value) {
  y_.Add(value);
  // @@protoc_insertion_point(field_add:xsproto.perception.TwoDimArea.y)
}
inline const ::google::protobuf::RepeatedField< double >&
TwoDimArea::y() const {
  // @@protoc_insertion_point(field_list:xsproto.perception.TwoDimArea.y)
  return y_;
}
inline ::google::protobuf::RepeatedField< double >*
TwoDimArea::mutable_y() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.perception.TwoDimArea.y)
  return &y_;
}

// uint32 type = 3;
inline void TwoDimArea::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 TwoDimArea::type() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.TwoDimArea.type)
  return type_;
}
inline void TwoDimArea::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.TwoDimArea.type)
}

// bool close_loop = 4;
inline void TwoDimArea::clear_close_loop() {
  close_loop_ = false;
}
inline bool TwoDimArea::close_loop() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.TwoDimArea.close_loop)
  return close_loop_;
}
inline void TwoDimArea::set_close_loop(bool value) {
  
  close_loop_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.TwoDimArea.close_loop)
}

// -------------------------------------------------------------------

// SingleObject

// double x = 1;
inline void SingleObject::clear_x() {
  x_ = 0;
}
inline double SingleObject::x() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.SingleObject.x)
  return x_;
}
inline void SingleObject::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.SingleObject.x)
}

// double y = 2;
inline void SingleObject::clear_y() {
  y_ = 0;
}
inline double SingleObject::y() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.SingleObject.y)
  return y_;
}
inline void SingleObject::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.SingleObject.y)
}

// double orientation_angle = 3;
inline void SingleObject::clear_orientation_angle() {
  orientation_angle_ = 0;
}
inline double SingleObject::orientation_angle() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.SingleObject.orientation_angle)
  return orientation_angle_;
}
inline void SingleObject::set_orientation_angle(double value) {
  
  orientation_angle_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.SingleObject.orientation_angle)
}

// bool is_rear_visible = 4;
inline void SingleObject::clear_is_rear_visible() {
  is_rear_visible_ = false;
}
inline bool SingleObject::is_rear_visible() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.SingleObject.is_rear_visible)
  return is_rear_visible_;
}
inline void SingleObject::set_is_rear_visible(bool value) {
  
  is_rear_visible_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.SingleObject.is_rear_visible)
}

// .xsproto.perception.TwoDimArea rear_region = 5;
inline bool SingleObject::has_rear_region() const {
  return this != internal_default_instance() && rear_region_ != NULL;
}
inline void SingleObject::clear_rear_region() {
  if (GetArenaNoVirtual() == NULL && rear_region_ != NULL) {
    delete rear_region_;
  }
  rear_region_ = NULL;
}
inline const ::xsproto::perception::TwoDimArea& SingleObject::rear_region() const {
  const ::xsproto::perception::TwoDimArea* p = rear_region_;
  // @@protoc_insertion_point(field_get:xsproto.perception.SingleObject.rear_region)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::perception::TwoDimArea*>(
      &::xsproto::perception::_TwoDimArea_default_instance_);
}
inline ::xsproto::perception::TwoDimArea* SingleObject::release_rear_region() {
  // @@protoc_insertion_point(field_release:xsproto.perception.SingleObject.rear_region)
  
  ::xsproto::perception::TwoDimArea* temp = rear_region_;
  rear_region_ = NULL;
  return temp;
}
inline ::xsproto::perception::TwoDimArea* SingleObject::mutable_rear_region() {
  
  if (rear_region_ == NULL) {
    rear_region_ = new ::xsproto::perception::TwoDimArea;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.perception.SingleObject.rear_region)
  return rear_region_;
}
inline void SingleObject::set_allocated_rear_region(::xsproto::perception::TwoDimArea* rear_region) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rear_region_;
  }
  if (rear_region) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rear_region = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rear_region, submessage_arena);
    }
    
  } else {
    
  }
  rear_region_ = rear_region;
  // @@protoc_insertion_point(field_set_allocated:xsproto.perception.SingleObject.rear_region)
}

// -------------------------------------------------------------------

// LiftPlatformVehicles

// .xsproto.base.Header header = 1;
inline bool LiftPlatformVehicles::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::xsproto::base::Header& LiftPlatformVehicles::header() const {
  const ::xsproto::base::Header* p = header_;
  // @@protoc_insertion_point(field_get:xsproto.perception.LiftPlatformVehicles.header)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::base::Header*>(
      &::xsproto::base::_Header_default_instance_);
}
inline ::xsproto::base::Header* LiftPlatformVehicles::release_header() {
  // @@protoc_insertion_point(field_release:xsproto.perception.LiftPlatformVehicles.header)
  
  ::xsproto::base::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::xsproto::base::Header* LiftPlatformVehicles::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::xsproto::base::Header;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.perception.LiftPlatformVehicles.header)
  return header_;
}
inline void LiftPlatformVehicles::set_allocated_header(::xsproto::base::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:xsproto.perception.LiftPlatformVehicles.header)
}

// repeated .xsproto.perception.SingleObject detected_vehicles = 2;
inline int LiftPlatformVehicles::detected_vehicles_size() const {
  return detected_vehicles_.size();
}
inline void LiftPlatformVehicles::clear_detected_vehicles() {
  detected_vehicles_.Clear();
}
inline const ::xsproto::perception::SingleObject& LiftPlatformVehicles::detected_vehicles(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.perception.LiftPlatformVehicles.detected_vehicles)
  return detected_vehicles_.Get(index);
}
inline ::xsproto::perception::SingleObject* LiftPlatformVehicles::mutable_detected_vehicles(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.perception.LiftPlatformVehicles.detected_vehicles)
  return detected_vehicles_.Mutable(index);
}
inline ::xsproto::perception::SingleObject* LiftPlatformVehicles::add_detected_vehicles() {
  // @@protoc_insertion_point(field_add:xsproto.perception.LiftPlatformVehicles.detected_vehicles)
  return detected_vehicles_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::perception::SingleObject >*
LiftPlatformVehicles::mutable_detected_vehicles() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.perception.LiftPlatformVehicles.detected_vehicles)
  return &detected_vehicles_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::SingleObject >&
LiftPlatformVehicles::detected_vehicles() const {
  // @@protoc_insertion_point(field_list:xsproto.perception.LiftPlatformVehicles.detected_vehicles)
  return detected_vehicles_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace xsproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_perception_2flift_5fplatform_5fvehicle_2eproto__INCLUDED
