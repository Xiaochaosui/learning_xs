// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perception/prediction.proto

#ifndef PROTOBUF_perception_2fprediction_2eproto__INCLUDED
#define PROTOBUF_perception_2fprediction_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base/header.pb.h"
#include "common/geometry.pb.h"
#include "perception/obstacle_object_info.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_perception_2fprediction_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPredictionTrajectoryImpl();
void InitDefaultsPredictionTrajectory();
void InitDefaultsPredictionVehicleObjectImpl();
void InitDefaultsPredictionVehicleObject();
void InitDefaultsPredictionVehicleInfoMsgImpl();
void InitDefaultsPredictionVehicleInfoMsg();
inline void InitDefaults() {
  InitDefaultsPredictionTrajectory();
  InitDefaultsPredictionVehicleObject();
  InitDefaultsPredictionVehicleInfoMsg();
}
}  // namespace protobuf_perception_2fprediction_2eproto
namespace xsproto {
namespace perception {
class PredictionTrajectory;
class PredictionTrajectoryDefaultTypeInternal;
extern PredictionTrajectoryDefaultTypeInternal _PredictionTrajectory_default_instance_;
class PredictionVehicleInfoMsg;
class PredictionVehicleInfoMsgDefaultTypeInternal;
extern PredictionVehicleInfoMsgDefaultTypeInternal _PredictionVehicleInfoMsg_default_instance_;
class PredictionVehicleObject;
class PredictionVehicleObjectDefaultTypeInternal;
extern PredictionVehicleObjectDefaultTypeInternal _PredictionVehicleObject_default_instance_;
}  // namespace perception
}  // namespace xsproto
namespace xsproto {
namespace perception {

enum MovementIntention {
  INT_KEEP_LANE = 0,
  INT_KEEP_LANE_INTSEC = 1,
  INT_CHANGE_TO_LEFT = 2,
  INT_CHANGE_TO_RIGHT = 3,
  INT_TURN_LEFT = 4,
  INT_TURN_RIGHT = 5,
  INT_TURN_BACK = 6,
  INT_WAIT_AT_INT = 7,
  INT_WAIT_IN_QUEUING = 8,
  INT_CROSSING = 9,
  INT_YIELD = 10,
  INT_QUEUE_JUMP = 11,
  INT_CUT_TO_FRONT = 12,
  INT_INTERCHANGE = 13,
  INT_CUT_OUT = 14,
  INT_DO_NOT_DRIVE = 15,
  INT_PARKING_ROADSIDE = 16,
  INT_DIRECTION_KEEP = 17,
  MovementIntention_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MovementIntention_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MovementIntention_IsValid(int value);
const MovementIntention MovementIntention_MIN = INT_KEEP_LANE;
const MovementIntention MovementIntention_MAX = INT_DIRECTION_KEEP;
const int MovementIntention_ARRAYSIZE = MovementIntention_MAX + 1;

const ::google::protobuf::EnumDescriptor* MovementIntention_descriptor();
inline const ::std::string& MovementIntention_Name(MovementIntention value) {
  return ::google::protobuf::internal::NameOfEnum(
    MovementIntention_descriptor(), value);
}
inline bool MovementIntention_Parse(
    const ::std::string& name, MovementIntention* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MovementIntention>(
    MovementIntention_descriptor(), name, value);
}
// ===================================================================

class PredictionTrajectory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.perception.PredictionTrajectory) */ {
 public:
  PredictionTrajectory();
  virtual ~PredictionTrajectory();

  PredictionTrajectory(const PredictionTrajectory& from);

  inline PredictionTrajectory& operator=(const PredictionTrajectory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictionTrajectory(PredictionTrajectory&& from) noexcept
    : PredictionTrajectory() {
    *this = ::std::move(from);
  }

  inline PredictionTrajectory& operator=(PredictionTrajectory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PredictionTrajectory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictionTrajectory* internal_default_instance() {
    return reinterpret_cast<const PredictionTrajectory*>(
               &_PredictionTrajectory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PredictionTrajectory* other);
  friend void swap(PredictionTrajectory& a, PredictionTrajectory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictionTrajectory* New() const PROTOBUF_FINAL { return New(NULL); }

  PredictionTrajectory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PredictionTrajectory& from);
  void MergeFrom(const PredictionTrajectory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PredictionTrajectory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xsproto.common.TimestampedPoint3D points = 3;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  const ::xsproto::common::TimestampedPoint3D& points(int index) const;
  ::xsproto::common::TimestampedPoint3D* mutable_points(int index);
  ::xsproto::common::TimestampedPoint3D* add_points();
  ::google::protobuf::RepeatedPtrField< ::xsproto::common::TimestampedPoint3D >*
      mutable_points();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::common::TimestampedPoint3D >&
      points() const;

  // double probablity = 2;
  void clear_probablity();
  static const int kProbablityFieldNumber = 2;
  double probablity() const;
  void set_probablity(double value);

  // .xsproto.perception.MovementIntention intention = 1;
  void clear_intention();
  static const int kIntentionFieldNumber = 1;
  ::xsproto::perception::MovementIntention intention() const;
  void set_intention(::xsproto::perception::MovementIntention value);

  // @@protoc_insertion_point(class_scope:xsproto.perception.PredictionTrajectory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::common::TimestampedPoint3D > points_;
  double probablity_;
  int intention_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_2fprediction_2eproto::TableStruct;
  friend void ::protobuf_perception_2fprediction_2eproto::InitDefaultsPredictionTrajectoryImpl();
};
// -------------------------------------------------------------------

class PredictionVehicleObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.perception.PredictionVehicleObject) */ {
 public:
  PredictionVehicleObject();
  virtual ~PredictionVehicleObject();

  PredictionVehicleObject(const PredictionVehicleObject& from);

  inline PredictionVehicleObject& operator=(const PredictionVehicleObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictionVehicleObject(PredictionVehicleObject&& from) noexcept
    : PredictionVehicleObject() {
    *this = ::std::move(from);
  }

  inline PredictionVehicleObject& operator=(PredictionVehicleObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PredictionVehicleObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictionVehicleObject* internal_default_instance() {
    return reinterpret_cast<const PredictionVehicleObject*>(
               &_PredictionVehicleObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PredictionVehicleObject* other);
  friend void swap(PredictionVehicleObject& a, PredictionVehicleObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictionVehicleObject* New() const PROTOBUF_FINAL { return New(NULL); }

  PredictionVehicleObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PredictionVehicleObject& from);
  void MergeFrom(const PredictionVehicleObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PredictionVehicleObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xsproto.perception.PredictionTrajectory trajectories = 2;
  int trajectories_size() const;
  void clear_trajectories();
  static const int kTrajectoriesFieldNumber = 2;
  const ::xsproto::perception::PredictionTrajectory& trajectories(int index) const;
  ::xsproto::perception::PredictionTrajectory* mutable_trajectories(int index);
  ::xsproto::perception::PredictionTrajectory* add_trajectories();
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::PredictionTrajectory >*
      mutable_trajectories();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::PredictionTrajectory >&
      trajectories() const;

  // .xsproto.perception.ObstacleObject obstacle_obj = 1;
  bool has_obstacle_obj() const;
  void clear_obstacle_obj();
  static const int kObstacleObjFieldNumber = 1;
  const ::xsproto::perception::ObstacleObject& obstacle_obj() const;
  ::xsproto::perception::ObstacleObject* release_obstacle_obj();
  ::xsproto::perception::ObstacleObject* mutable_obstacle_obj();
  void set_allocated_obstacle_obj(::xsproto::perception::ObstacleObject* obstacle_obj);

  // bool in_road_flag = 3;
  void clear_in_road_flag();
  static const int kInRoadFlagFieldNumber = 3;
  bool in_road_flag() const;
  void set_in_road_flag(bool value);

  // @@protoc_insertion_point(class_scope:xsproto.perception.PredictionVehicleObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::PredictionTrajectory > trajectories_;
  ::xsproto::perception::ObstacleObject* obstacle_obj_;
  bool in_road_flag_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_2fprediction_2eproto::TableStruct;
  friend void ::protobuf_perception_2fprediction_2eproto::InitDefaultsPredictionVehicleObjectImpl();
};
// -------------------------------------------------------------------

class PredictionVehicleInfoMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.perception.PredictionVehicleInfoMsg) */ {
 public:
  PredictionVehicleInfoMsg();
  virtual ~PredictionVehicleInfoMsg();

  PredictionVehicleInfoMsg(const PredictionVehicleInfoMsg& from);

  inline PredictionVehicleInfoMsg& operator=(const PredictionVehicleInfoMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictionVehicleInfoMsg(PredictionVehicleInfoMsg&& from) noexcept
    : PredictionVehicleInfoMsg() {
    *this = ::std::move(from);
  }

  inline PredictionVehicleInfoMsg& operator=(PredictionVehicleInfoMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PredictionVehicleInfoMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictionVehicleInfoMsg* internal_default_instance() {
    return reinterpret_cast<const PredictionVehicleInfoMsg*>(
               &_PredictionVehicleInfoMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PredictionVehicleInfoMsg* other);
  friend void swap(PredictionVehicleInfoMsg& a, PredictionVehicleInfoMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictionVehicleInfoMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  PredictionVehicleInfoMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PredictionVehicleInfoMsg& from);
  void MergeFrom(const PredictionVehicleInfoMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PredictionVehicleInfoMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xsproto.perception.PredictionVehicleObject prediction_vehicle_object = 2;
  int prediction_vehicle_object_size() const;
  void clear_prediction_vehicle_object();
  static const int kPredictionVehicleObjectFieldNumber = 2;
  const ::xsproto::perception::PredictionVehicleObject& prediction_vehicle_object(int index) const;
  ::xsproto::perception::PredictionVehicleObject* mutable_prediction_vehicle_object(int index);
  ::xsproto::perception::PredictionVehicleObject* add_prediction_vehicle_object();
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::PredictionVehicleObject >*
      mutable_prediction_vehicle_object();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::PredictionVehicleObject >&
      prediction_vehicle_object() const;

  // .xsproto.base.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::xsproto::base::Header& header() const;
  ::xsproto::base::Header* release_header();
  ::xsproto::base::Header* mutable_header();
  void set_allocated_header(::xsproto::base::Header* header);

  // @@protoc_insertion_point(class_scope:xsproto.perception.PredictionVehicleInfoMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::perception::PredictionVehicleObject > prediction_vehicle_object_;
  ::xsproto::base::Header* header_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_2fprediction_2eproto::TableStruct;
  friend void ::protobuf_perception_2fprediction_2eproto::InitDefaultsPredictionVehicleInfoMsgImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PredictionTrajectory

// .xsproto.perception.MovementIntention intention = 1;
inline void PredictionTrajectory::clear_intention() {
  intention_ = 0;
}
inline ::xsproto::perception::MovementIntention PredictionTrajectory::intention() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.PredictionTrajectory.intention)
  return static_cast< ::xsproto::perception::MovementIntention >(intention_);
}
inline void PredictionTrajectory::set_intention(::xsproto::perception::MovementIntention value) {
  
  intention_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.PredictionTrajectory.intention)
}

// double probablity = 2;
inline void PredictionTrajectory::clear_probablity() {
  probablity_ = 0;
}
inline double PredictionTrajectory::probablity() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.PredictionTrajectory.probablity)
  return probablity_;
}
inline void PredictionTrajectory::set_probablity(double value) {
  
  probablity_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.PredictionTrajectory.probablity)
}

// repeated .xsproto.common.TimestampedPoint3D points = 3;
inline int PredictionTrajectory::points_size() const {
  return points_.size();
}
inline const ::xsproto::common::TimestampedPoint3D& PredictionTrajectory::points(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.perception.PredictionTrajectory.points)
  return points_.Get(index);
}
inline ::xsproto::common::TimestampedPoint3D* PredictionTrajectory::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.perception.PredictionTrajectory.points)
  return points_.Mutable(index);
}
inline ::xsproto::common::TimestampedPoint3D* PredictionTrajectory::add_points() {
  // @@protoc_insertion_point(field_add:xsproto.perception.PredictionTrajectory.points)
  return points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::common::TimestampedPoint3D >*
PredictionTrajectory::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.perception.PredictionTrajectory.points)
  return &points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::common::TimestampedPoint3D >&
PredictionTrajectory::points() const {
  // @@protoc_insertion_point(field_list:xsproto.perception.PredictionTrajectory.points)
  return points_;
}

// -------------------------------------------------------------------

// PredictionVehicleObject

// .xsproto.perception.ObstacleObject obstacle_obj = 1;
inline bool PredictionVehicleObject::has_obstacle_obj() const {
  return this != internal_default_instance() && obstacle_obj_ != NULL;
}
inline const ::xsproto::perception::ObstacleObject& PredictionVehicleObject::obstacle_obj() const {
  const ::xsproto::perception::ObstacleObject* p = obstacle_obj_;
  // @@protoc_insertion_point(field_get:xsproto.perception.PredictionVehicleObject.obstacle_obj)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::perception::ObstacleObject*>(
      &::xsproto::perception::_ObstacleObject_default_instance_);
}
inline ::xsproto::perception::ObstacleObject* PredictionVehicleObject::release_obstacle_obj() {
  // @@protoc_insertion_point(field_release:xsproto.perception.PredictionVehicleObject.obstacle_obj)
  
  ::xsproto::perception::ObstacleObject* temp = obstacle_obj_;
  obstacle_obj_ = NULL;
  return temp;
}
inline ::xsproto::perception::ObstacleObject* PredictionVehicleObject::mutable_obstacle_obj() {
  
  if (obstacle_obj_ == NULL) {
    obstacle_obj_ = new ::xsproto::perception::ObstacleObject;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.perception.PredictionVehicleObject.obstacle_obj)
  return obstacle_obj_;
}
inline void PredictionVehicleObject::set_allocated_obstacle_obj(::xsproto::perception::ObstacleObject* obstacle_obj) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(obstacle_obj_);
  }
  if (obstacle_obj) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      obstacle_obj = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, obstacle_obj, submessage_arena);
    }
    
  } else {
    
  }
  obstacle_obj_ = obstacle_obj;
  // @@protoc_insertion_point(field_set_allocated:xsproto.perception.PredictionVehicleObject.obstacle_obj)
}

// repeated .xsproto.perception.PredictionTrajectory trajectories = 2;
inline int PredictionVehicleObject::trajectories_size() const {
  return trajectories_.size();
}
inline void PredictionVehicleObject::clear_trajectories() {
  trajectories_.Clear();
}
inline const ::xsproto::perception::PredictionTrajectory& PredictionVehicleObject::trajectories(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.perception.PredictionVehicleObject.trajectories)
  return trajectories_.Get(index);
}
inline ::xsproto::perception::PredictionTrajectory* PredictionVehicleObject::mutable_trajectories(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.perception.PredictionVehicleObject.trajectories)
  return trajectories_.Mutable(index);
}
inline ::xsproto::perception::PredictionTrajectory* PredictionVehicleObject::add_trajectories() {
  // @@protoc_insertion_point(field_add:xsproto.perception.PredictionVehicleObject.trajectories)
  return trajectories_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::perception::PredictionTrajectory >*
PredictionVehicleObject::mutable_trajectories() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.perception.PredictionVehicleObject.trajectories)
  return &trajectories_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::PredictionTrajectory >&
PredictionVehicleObject::trajectories() const {
  // @@protoc_insertion_point(field_list:xsproto.perception.PredictionVehicleObject.trajectories)
  return trajectories_;
}

// bool in_road_flag = 3;
inline void PredictionVehicleObject::clear_in_road_flag() {
  in_road_flag_ = false;
}
inline bool PredictionVehicleObject::in_road_flag() const {
  // @@protoc_insertion_point(field_get:xsproto.perception.PredictionVehicleObject.in_road_flag)
  return in_road_flag_;
}
inline void PredictionVehicleObject::set_in_road_flag(bool value) {
  
  in_road_flag_ = value;
  // @@protoc_insertion_point(field_set:xsproto.perception.PredictionVehicleObject.in_road_flag)
}

// -------------------------------------------------------------------

// PredictionVehicleInfoMsg

// .xsproto.base.Header header = 1;
inline bool PredictionVehicleInfoMsg::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::xsproto::base::Header& PredictionVehicleInfoMsg::header() const {
  const ::xsproto::base::Header* p = header_;
  // @@protoc_insertion_point(field_get:xsproto.perception.PredictionVehicleInfoMsg.header)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::base::Header*>(
      &::xsproto::base::_Header_default_instance_);
}
inline ::xsproto::base::Header* PredictionVehicleInfoMsg::release_header() {
  // @@protoc_insertion_point(field_release:xsproto.perception.PredictionVehicleInfoMsg.header)
  
  ::xsproto::base::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::xsproto::base::Header* PredictionVehicleInfoMsg::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::xsproto::base::Header;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.perception.PredictionVehicleInfoMsg.header)
  return header_;
}
inline void PredictionVehicleInfoMsg::set_allocated_header(::xsproto::base::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:xsproto.perception.PredictionVehicleInfoMsg.header)
}

// repeated .xsproto.perception.PredictionVehicleObject prediction_vehicle_object = 2;
inline int PredictionVehicleInfoMsg::prediction_vehicle_object_size() const {
  return prediction_vehicle_object_.size();
}
inline void PredictionVehicleInfoMsg::clear_prediction_vehicle_object() {
  prediction_vehicle_object_.Clear();
}
inline const ::xsproto::perception::PredictionVehicleObject& PredictionVehicleInfoMsg::prediction_vehicle_object(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.perception.PredictionVehicleInfoMsg.prediction_vehicle_object)
  return prediction_vehicle_object_.Get(index);
}
inline ::xsproto::perception::PredictionVehicleObject* PredictionVehicleInfoMsg::mutable_prediction_vehicle_object(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.perception.PredictionVehicleInfoMsg.prediction_vehicle_object)
  return prediction_vehicle_object_.Mutable(index);
}
inline ::xsproto::perception::PredictionVehicleObject* PredictionVehicleInfoMsg::add_prediction_vehicle_object() {
  // @@protoc_insertion_point(field_add:xsproto.perception.PredictionVehicleInfoMsg.prediction_vehicle_object)
  return prediction_vehicle_object_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::perception::PredictionVehicleObject >*
PredictionVehicleInfoMsg::mutable_prediction_vehicle_object() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.perception.PredictionVehicleInfoMsg.prediction_vehicle_object)
  return &prediction_vehicle_object_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::perception::PredictionVehicleObject >&
PredictionVehicleInfoMsg::prediction_vehicle_object() const {
  // @@protoc_insertion_point(field_list:xsproto.perception.PredictionVehicleInfoMsg.prediction_vehicle_object)
  return prediction_vehicle_object_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace xsproto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xsproto::perception::MovementIntention> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::perception::MovementIntention>() {
  return ::xsproto::perception::MovementIntention_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_perception_2fprediction_2eproto__INCLUDED
