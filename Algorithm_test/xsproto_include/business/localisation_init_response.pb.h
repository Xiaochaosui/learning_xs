// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: business/localisation_init_response.proto

#ifndef PROTOBUF_business_2flocalisation_5finit_5fresponse_2eproto__INCLUDED
#define PROTOBUF_business_2flocalisation_5finit_5fresponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "base/header.pb.h"
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_business_2flocalisation_5finit_5fresponse_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLocalisationInitResponseImpl();
void InitDefaultsLocalisationInitResponse();
void InitDefaultsInitStationListImpl();
void InitDefaultsInitStationList();
void InitDefaultsInitStationImpl();
void InitDefaultsInitStation();
void InitDefaultsInitResponsePoseImpl();
void InitDefaultsInitResponsePose();
void InitDefaultsInitMatchResultImpl();
void InitDefaultsInitMatchResult();
void InitDefaultsInitRangeDataImpl();
void InitDefaultsInitRangeData();
void InitDefaultsInitStatusImpl();
void InitDefaultsInitStatus();
inline void InitDefaults() {
  InitDefaultsLocalisationInitResponse();
  InitDefaultsInitStationList();
  InitDefaultsInitStation();
  InitDefaultsInitResponsePose();
  InitDefaultsInitMatchResult();
  InitDefaultsInitRangeData();
  InitDefaultsInitStatus();
}
}  // namespace protobuf_business_2flocalisation_5finit_5fresponse_2eproto
namespace xsproto {
namespace communication {
class InitMatchResult;
class InitMatchResultDefaultTypeInternal;
extern InitMatchResultDefaultTypeInternal _InitMatchResult_default_instance_;
class InitRangeData;
class InitRangeDataDefaultTypeInternal;
extern InitRangeDataDefaultTypeInternal _InitRangeData_default_instance_;
class InitResponsePose;
class InitResponsePoseDefaultTypeInternal;
extern InitResponsePoseDefaultTypeInternal _InitResponsePose_default_instance_;
class InitStation;
class InitStationDefaultTypeInternal;
extern InitStationDefaultTypeInternal _InitStation_default_instance_;
class InitStationList;
class InitStationListDefaultTypeInternal;
extern InitStationListDefaultTypeInternal _InitStationList_default_instance_;
class InitStatus;
class InitStatusDefaultTypeInternal;
extern InitStatusDefaultTypeInternal _InitStatus_default_instance_;
class LocalisationInitResponse;
class LocalisationInitResponseDefaultTypeInternal;
extern LocalisationInitResponseDefaultTypeInternal _LocalisationInitResponse_default_instance_;
}  // namespace communication
}  // namespace xsproto
namespace xsproto {
namespace communication {

// ===================================================================

class LocalisationInitResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.LocalisationInitResponse) */ {
 public:
  LocalisationInitResponse();
  virtual ~LocalisationInitResponse();

  LocalisationInitResponse(const LocalisationInitResponse& from);

  inline LocalisationInitResponse& operator=(const LocalisationInitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalisationInitResponse(LocalisationInitResponse&& from) noexcept
    : LocalisationInitResponse() {
    *this = ::std::move(from);
  }

  inline LocalisationInitResponse& operator=(LocalisationInitResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalisationInitResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalisationInitResponse* internal_default_instance() {
    return reinterpret_cast<const LocalisationInitResponse*>(
               &_LocalisationInitResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LocalisationInitResponse* other);
  friend void swap(LocalisationInitResponse& a, LocalisationInitResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalisationInitResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  LocalisationInitResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocalisationInitResponse& from);
  void MergeFrom(const LocalisationInitResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocalisationInitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string result_msg = 6;
  void clear_result_msg();
  static const int kResultMsgFieldNumber = 6;
  const ::std::string& result_msg() const;
  void set_result_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_result_msg(::std::string&& value);
  #endif
  void set_result_msg(const char* value);
  void set_result_msg(const char* value, size_t size);
  ::std::string* mutable_result_msg();
  ::std::string* release_result_msg();
  void set_allocated_result_msg(::std::string* result_msg);

  // .xsproto.base.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::xsproto::base::Header& header() const;
  ::xsproto::base::Header* release_header();
  ::xsproto::base::Header* mutable_header();
  void set_allocated_header(::xsproto::base::Header* header);

  // .google.protobuf.Any msg_content = 7;
  bool has_msg_content() const;
  void clear_msg_content();
  static const int kMsgContentFieldNumber = 7;
  const ::google::protobuf::Any& msg_content() const;
  ::google::protobuf::Any* release_msg_content();
  ::google::protobuf::Any* mutable_msg_content();
  void set_allocated_msg_content(::google::protobuf::Any* msg_content);

  // int64 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // int32 seq_num = 3;
  void clear_seq_num();
  static const int kSeqNumFieldNumber = 3;
  ::google::protobuf::int32 seq_num() const;
  void set_seq_num(::google::protobuf::int32 value);

  // int32 msg_code = 4;
  void clear_msg_code();
  static const int kMsgCodeFieldNumber = 4;
  ::google::protobuf::int32 msg_code() const;
  void set_msg_code(::google::protobuf::int32 value);

  // int32 result = 5;
  void clear_result();
  static const int kResultFieldNumber = 5;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.LocalisationInitResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr result_msg_;
  ::xsproto::base::Header* header_;
  ::google::protobuf::Any* msg_content_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 seq_num_;
  ::google::protobuf::int32 msg_code_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::TableStruct;
  friend void ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::InitDefaultsLocalisationInitResponseImpl();
};
// -------------------------------------------------------------------

class InitStationList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.InitStationList) */ {
 public:
  InitStationList();
  virtual ~InitStationList();

  InitStationList(const InitStationList& from);

  inline InitStationList& operator=(const InitStationList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InitStationList(InitStationList&& from) noexcept
    : InitStationList() {
    *this = ::std::move(from);
  }

  inline InitStationList& operator=(InitStationList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InitStationList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InitStationList* internal_default_instance() {
    return reinterpret_cast<const InitStationList*>(
               &_InitStationList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(InitStationList* other);
  friend void swap(InitStationList& a, InitStationList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InitStationList* New() const PROTOBUF_FINAL { return New(NULL); }

  InitStationList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitStationList& from);
  void MergeFrom(const InitStationList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitStationList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xsproto.communication.InitStation stations = 1;
  int stations_size() const;
  void clear_stations();
  static const int kStationsFieldNumber = 1;
  const ::xsproto::communication::InitStation& stations(int index) const;
  ::xsproto::communication::InitStation* mutable_stations(int index);
  ::xsproto::communication::InitStation* add_stations();
  ::google::protobuf::RepeatedPtrField< ::xsproto::communication::InitStation >*
      mutable_stations();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::communication::InitStation >&
      stations() const;

  // @@protoc_insertion_point(class_scope:xsproto.communication.InitStationList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::communication::InitStation > stations_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::TableStruct;
  friend void ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::InitDefaultsInitStationListImpl();
};
// -------------------------------------------------------------------

class InitStation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.InitStation) */ {
 public:
  InitStation();
  virtual ~InitStation();

  InitStation(const InitStation& from);

  inline InitStation& operator=(const InitStation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InitStation(InitStation&& from) noexcept
    : InitStation() {
    *this = ::std::move(from);
  }

  inline InitStation& operator=(InitStation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InitStation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InitStation* internal_default_instance() {
    return reinterpret_cast<const InitStation*>(
               &_InitStation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(InitStation* other);
  friend void swap(InitStation& a, InitStation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InitStation* New() const PROTOBUF_FINAL { return New(NULL); }

  InitStation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitStation& from);
  void MergeFrom(const InitStation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitStation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .xsproto.communication.InitResponsePose pose = 3;
  bool has_pose() const;
  void clear_pose();
  static const int kPoseFieldNumber = 3;
  const ::xsproto::communication::InitResponsePose& pose() const;
  ::xsproto::communication::InitResponsePose* release_pose();
  ::xsproto::communication::InitResponsePose* mutable_pose();
  void set_allocated_pose(::xsproto::communication::InitResponsePose* pose);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.InitStation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::xsproto::communication::InitResponsePose* pose_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::TableStruct;
  friend void ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::InitDefaultsInitStationImpl();
};
// -------------------------------------------------------------------

class InitResponsePose : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.InitResponsePose) */ {
 public:
  InitResponsePose();
  virtual ~InitResponsePose();

  InitResponsePose(const InitResponsePose& from);

  inline InitResponsePose& operator=(const InitResponsePose& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InitResponsePose(InitResponsePose&& from) noexcept
    : InitResponsePose() {
    *this = ::std::move(from);
  }

  inline InitResponsePose& operator=(InitResponsePose&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InitResponsePose& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InitResponsePose* internal_default_instance() {
    return reinterpret_cast<const InitResponsePose*>(
               &_InitResponsePose_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(InitResponsePose* other);
  friend void swap(InitResponsePose& a, InitResponsePose& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InitResponsePose* New() const PROTOBUF_FINAL { return New(NULL); }

  InitResponsePose* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitResponsePose& from);
  void MergeFrom(const InitResponsePose& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitResponsePose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // int32 yaw = 3;
  void clear_yaw();
  static const int kYawFieldNumber = 3;
  ::google::protobuf::int32 yaw() const;
  void set_yaw(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.InitResponsePose)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 yaw_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::TableStruct;
  friend void ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::InitDefaultsInitResponsePoseImpl();
};
// -------------------------------------------------------------------

class InitMatchResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.InitMatchResult) */ {
 public:
  InitMatchResult();
  virtual ~InitMatchResult();

  InitMatchResult(const InitMatchResult& from);

  inline InitMatchResult& operator=(const InitMatchResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InitMatchResult(InitMatchResult&& from) noexcept
    : InitMatchResult() {
    *this = ::std::move(from);
  }

  inline InitMatchResult& operator=(InitMatchResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InitMatchResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InitMatchResult* internal_default_instance() {
    return reinterpret_cast<const InitMatchResult*>(
               &_InitMatchResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(InitMatchResult* other);
  friend void swap(InitMatchResult& a, InitMatchResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InitMatchResult* New() const PROTOBUF_FINAL { return New(NULL); }

  InitMatchResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitMatchResult& from);
  void MergeFrom(const InitMatchResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitMatchResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string map_path = 2;
  void clear_map_path();
  static const int kMapPathFieldNumber = 2;
  const ::std::string& map_path() const;
  void set_map_path(const ::std::string& value);
  #if LANG_CXX11
  void set_map_path(::std::string&& value);
  #endif
  void set_map_path(const char* value);
  void set_map_path(const char* value, size_t size);
  ::std::string* mutable_map_path();
  ::std::string* release_map_path();
  void set_allocated_map_path(::std::string* map_path);

  // string point_cloud_path = 3;
  void clear_point_cloud_path();
  static const int kPointCloudPathFieldNumber = 3;
  const ::std::string& point_cloud_path() const;
  void set_point_cloud_path(const ::std::string& value);
  #if LANG_CXX11
  void set_point_cloud_path(::std::string&& value);
  #endif
  void set_point_cloud_path(const char* value);
  void set_point_cloud_path(const char* value, size_t size);
  ::std::string* mutable_point_cloud_path();
  ::std::string* release_point_cloud_path();
  void set_allocated_point_cloud_path(::std::string* point_cloud_path);

  // .xsproto.communication.InitResponsePose pose = 1;
  bool has_pose() const;
  void clear_pose();
  static const int kPoseFieldNumber = 1;
  const ::xsproto::communication::InitResponsePose& pose() const;
  ::xsproto::communication::InitResponsePose* release_pose();
  ::xsproto::communication::InitResponsePose* mutable_pose();
  void set_allocated_pose(::xsproto::communication::InitResponsePose* pose);

  // .xsproto.communication.InitRangeData range_info = 4;
  bool has_range_info() const;
  void clear_range_info();
  static const int kRangeInfoFieldNumber = 4;
  const ::xsproto::communication::InitRangeData& range_info() const;
  ::xsproto::communication::InitRangeData* release_range_info();
  ::xsproto::communication::InitRangeData* mutable_range_info();
  void set_allocated_range_info(::xsproto::communication::InitRangeData* range_info);

  // int32 score = 5;
  void clear_score();
  static const int kScoreFieldNumber = 5;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.InitMatchResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr map_path_;
  ::google::protobuf::internal::ArenaStringPtr point_cloud_path_;
  ::xsproto::communication::InitResponsePose* pose_;
  ::xsproto::communication::InitRangeData* range_info_;
  ::google::protobuf::int32 score_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::TableStruct;
  friend void ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::InitDefaultsInitMatchResultImpl();
};
// -------------------------------------------------------------------

class InitRangeData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.InitRangeData) */ {
 public:
  InitRangeData();
  virtual ~InitRangeData();

  InitRangeData(const InitRangeData& from);

  inline InitRangeData& operator=(const InitRangeData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InitRangeData(InitRangeData&& from) noexcept
    : InitRangeData() {
    *this = ::std::move(from);
  }

  inline InitRangeData& operator=(InitRangeData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InitRangeData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InitRangeData* internal_default_instance() {
    return reinterpret_cast<const InitRangeData*>(
               &_InitRangeData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(InitRangeData* other);
  friend void swap(InitRangeData& a, InitRangeData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InitRangeData* New() const PROTOBUF_FINAL { return New(NULL); }

  InitRangeData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitRangeData& from);
  void MergeFrom(const InitRangeData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitRangeData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double minx = 1;
  void clear_minx();
  static const int kMinxFieldNumber = 1;
  double minx() const;
  void set_minx(double value);

  // double miny = 2;
  void clear_miny();
  static const int kMinyFieldNumber = 2;
  double miny() const;
  void set_miny(double value);

  // double maxx = 3;
  void clear_maxx();
  static const int kMaxxFieldNumber = 3;
  double maxx() const;
  void set_maxx(double value);

  // double maxy = 4;
  void clear_maxy();
  static const int kMaxyFieldNumber = 4;
  double maxy() const;
  void set_maxy(double value);

  // int32 grid_size = 5;
  void clear_grid_size();
  static const int kGridSizeFieldNumber = 5;
  ::google::protobuf::int32 grid_size() const;
  void set_grid_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.InitRangeData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double minx_;
  double miny_;
  double maxx_;
  double maxy_;
  ::google::protobuf::int32 grid_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::TableStruct;
  friend void ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::InitDefaultsInitRangeDataImpl();
};
// -------------------------------------------------------------------

class InitStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.InitStatus) */ {
 public:
  InitStatus();
  virtual ~InitStatus();

  InitStatus(const InitStatus& from);

  inline InitStatus& operator=(const InitStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InitStatus(InitStatus&& from) noexcept
    : InitStatus() {
    *this = ::std::move(from);
  }

  inline InitStatus& operator=(InitStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InitStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InitStatus* internal_default_instance() {
    return reinterpret_cast<const InitStatus*>(
               &_InitStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(InitStatus* other);
  friend void swap(InitStatus& a, InitStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InitStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  InitStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitStatus& from);
  void MergeFrom(const InitStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.InitStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::TableStruct;
  friend void ::protobuf_business_2flocalisation_5finit_5fresponse_2eproto::InitDefaultsInitStatusImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LocalisationInitResponse

// .xsproto.base.Header header = 1;
inline bool LocalisationInitResponse::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::xsproto::base::Header& LocalisationInitResponse::header() const {
  const ::xsproto::base::Header* p = header_;
  // @@protoc_insertion_point(field_get:xsproto.communication.LocalisationInitResponse.header)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::base::Header*>(
      &::xsproto::base::_Header_default_instance_);
}
inline ::xsproto::base::Header* LocalisationInitResponse::release_header() {
  // @@protoc_insertion_point(field_release:xsproto.communication.LocalisationInitResponse.header)
  
  ::xsproto::base::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::xsproto::base::Header* LocalisationInitResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::xsproto::base::Header;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.LocalisationInitResponse.header)
  return header_;
}
inline void LocalisationInitResponse::set_allocated_header(::xsproto::base::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.LocalisationInitResponse.header)
}

// int64 timestamp = 2;
inline void LocalisationInitResponse::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LocalisationInitResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.LocalisationInitResponse.timestamp)
  return timestamp_;
}
inline void LocalisationInitResponse::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.LocalisationInitResponse.timestamp)
}

// int32 seq_num = 3;
inline void LocalisationInitResponse::clear_seq_num() {
  seq_num_ = 0;
}
inline ::google::protobuf::int32 LocalisationInitResponse::seq_num() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.LocalisationInitResponse.seq_num)
  return seq_num_;
}
inline void LocalisationInitResponse::set_seq_num(::google::protobuf::int32 value) {
  
  seq_num_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.LocalisationInitResponse.seq_num)
}

// int32 msg_code = 4;
inline void LocalisationInitResponse::clear_msg_code() {
  msg_code_ = 0;
}
inline ::google::protobuf::int32 LocalisationInitResponse::msg_code() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.LocalisationInitResponse.msg_code)
  return msg_code_;
}
inline void LocalisationInitResponse::set_msg_code(::google::protobuf::int32 value) {
  
  msg_code_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.LocalisationInitResponse.msg_code)
}

// int32 result = 5;
inline void LocalisationInitResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 LocalisationInitResponse::result() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.LocalisationInitResponse.result)
  return result_;
}
inline void LocalisationInitResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.LocalisationInitResponse.result)
}

// string result_msg = 6;
inline void LocalisationInitResponse::clear_result_msg() {
  result_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalisationInitResponse::result_msg() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.LocalisationInitResponse.result_msg)
  return result_msg_.GetNoArena();
}
inline void LocalisationInitResponse::set_result_msg(const ::std::string& value) {
  
  result_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.LocalisationInitResponse.result_msg)
}
#if LANG_CXX11
inline void LocalisationInitResponse::set_result_msg(::std::string&& value) {
  
  result_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.LocalisationInitResponse.result_msg)
}
#endif
inline void LocalisationInitResponse::set_result_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  result_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.LocalisationInitResponse.result_msg)
}
inline void LocalisationInitResponse::set_result_msg(const char* value, size_t size) {
  
  result_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.LocalisationInitResponse.result_msg)
}
inline ::std::string* LocalisationInitResponse::mutable_result_msg() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.LocalisationInitResponse.result_msg)
  return result_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalisationInitResponse::release_result_msg() {
  // @@protoc_insertion_point(field_release:xsproto.communication.LocalisationInitResponse.result_msg)
  
  return result_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalisationInitResponse::set_allocated_result_msg(::std::string* result_msg) {
  if (result_msg != NULL) {
    
  } else {
    
  }
  result_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_msg);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.LocalisationInitResponse.result_msg)
}

// .google.protobuf.Any msg_content = 7;
inline bool LocalisationInitResponse::has_msg_content() const {
  return this != internal_default_instance() && msg_content_ != NULL;
}
inline const ::google::protobuf::Any& LocalisationInitResponse::msg_content() const {
  const ::google::protobuf::Any* p = msg_content_;
  // @@protoc_insertion_point(field_get:xsproto.communication.LocalisationInitResponse.msg_content)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* LocalisationInitResponse::release_msg_content() {
  // @@protoc_insertion_point(field_release:xsproto.communication.LocalisationInitResponse.msg_content)
  
  ::google::protobuf::Any* temp = msg_content_;
  msg_content_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* LocalisationInitResponse::mutable_msg_content() {
  
  if (msg_content_ == NULL) {
    msg_content_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.LocalisationInitResponse.msg_content)
  return msg_content_;
}
inline void LocalisationInitResponse::set_allocated_msg_content(::google::protobuf::Any* msg_content) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(msg_content_);
  }
  if (msg_content) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg_content = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg_content, submessage_arena);
    }
    
  } else {
    
  }
  msg_content_ = msg_content;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.LocalisationInitResponse.msg_content)
}

// -------------------------------------------------------------------

// InitStationList

// repeated .xsproto.communication.InitStation stations = 1;
inline int InitStationList::stations_size() const {
  return stations_.size();
}
inline void InitStationList::clear_stations() {
  stations_.Clear();
}
inline const ::xsproto::communication::InitStation& InitStationList::stations(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitStationList.stations)
  return stations_.Get(index);
}
inline ::xsproto::communication::InitStation* InitStationList::mutable_stations(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.communication.InitStationList.stations)
  return stations_.Mutable(index);
}
inline ::xsproto::communication::InitStation* InitStationList::add_stations() {
  // @@protoc_insertion_point(field_add:xsproto.communication.InitStationList.stations)
  return stations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::communication::InitStation >*
InitStationList::mutable_stations() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.communication.InitStationList.stations)
  return &stations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::communication::InitStation >&
InitStationList::stations() const {
  // @@protoc_insertion_point(field_list:xsproto.communication.InitStationList.stations)
  return stations_;
}

// -------------------------------------------------------------------

// InitStation

// string name = 1;
inline void InitStation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InitStation::name() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitStation.name)
  return name_.GetNoArena();
}
inline void InitStation::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.InitStation.name)
}
#if LANG_CXX11
inline void InitStation::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.InitStation.name)
}
#endif
inline void InitStation::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.InitStation.name)
}
inline void InitStation::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.InitStation.name)
}
inline ::std::string* InitStation::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.InitStation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitStation::release_name() {
  // @@protoc_insertion_point(field_release:xsproto.communication.InitStation.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitStation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.InitStation.name)
}

// int32 id = 2;
inline void InitStation::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 InitStation::id() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitStation.id)
  return id_;
}
inline void InitStation::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.InitStation.id)
}

// .xsproto.communication.InitResponsePose pose = 3;
inline bool InitStation::has_pose() const {
  return this != internal_default_instance() && pose_ != NULL;
}
inline void InitStation::clear_pose() {
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
}
inline const ::xsproto::communication::InitResponsePose& InitStation::pose() const {
  const ::xsproto::communication::InitResponsePose* p = pose_;
  // @@protoc_insertion_point(field_get:xsproto.communication.InitStation.pose)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::communication::InitResponsePose*>(
      &::xsproto::communication::_InitResponsePose_default_instance_);
}
inline ::xsproto::communication::InitResponsePose* InitStation::release_pose() {
  // @@protoc_insertion_point(field_release:xsproto.communication.InitStation.pose)
  
  ::xsproto::communication::InitResponsePose* temp = pose_;
  pose_ = NULL;
  return temp;
}
inline ::xsproto::communication::InitResponsePose* InitStation::mutable_pose() {
  
  if (pose_ == NULL) {
    pose_ = new ::xsproto::communication::InitResponsePose;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.InitStation.pose)
  return pose_;
}
inline void InitStation::set_allocated_pose(::xsproto::communication::InitResponsePose* pose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pose_;
  }
  if (pose) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pose, submessage_arena);
    }
    
  } else {
    
  }
  pose_ = pose;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.InitStation.pose)
}

// -------------------------------------------------------------------

// InitResponsePose

// int32 x = 1;
inline void InitResponsePose::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 InitResponsePose::x() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitResponsePose.x)
  return x_;
}
inline void InitResponsePose::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.InitResponsePose.x)
}

// int32 y = 2;
inline void InitResponsePose::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 InitResponsePose::y() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitResponsePose.y)
  return y_;
}
inline void InitResponsePose::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.InitResponsePose.y)
}

// int32 yaw = 3;
inline void InitResponsePose::clear_yaw() {
  yaw_ = 0;
}
inline ::google::protobuf::int32 InitResponsePose::yaw() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitResponsePose.yaw)
  return yaw_;
}
inline void InitResponsePose::set_yaw(::google::protobuf::int32 value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.InitResponsePose.yaw)
}

// -------------------------------------------------------------------

// InitMatchResult

// .xsproto.communication.InitResponsePose pose = 1;
inline bool InitMatchResult::has_pose() const {
  return this != internal_default_instance() && pose_ != NULL;
}
inline void InitMatchResult::clear_pose() {
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
}
inline const ::xsproto::communication::InitResponsePose& InitMatchResult::pose() const {
  const ::xsproto::communication::InitResponsePose* p = pose_;
  // @@protoc_insertion_point(field_get:xsproto.communication.InitMatchResult.pose)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::communication::InitResponsePose*>(
      &::xsproto::communication::_InitResponsePose_default_instance_);
}
inline ::xsproto::communication::InitResponsePose* InitMatchResult::release_pose() {
  // @@protoc_insertion_point(field_release:xsproto.communication.InitMatchResult.pose)
  
  ::xsproto::communication::InitResponsePose* temp = pose_;
  pose_ = NULL;
  return temp;
}
inline ::xsproto::communication::InitResponsePose* InitMatchResult::mutable_pose() {
  
  if (pose_ == NULL) {
    pose_ = new ::xsproto::communication::InitResponsePose;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.InitMatchResult.pose)
  return pose_;
}
inline void InitMatchResult::set_allocated_pose(::xsproto::communication::InitResponsePose* pose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pose_;
  }
  if (pose) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pose, submessage_arena);
    }
    
  } else {
    
  }
  pose_ = pose;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.InitMatchResult.pose)
}

// string map_path = 2;
inline void InitMatchResult::clear_map_path() {
  map_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InitMatchResult::map_path() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitMatchResult.map_path)
  return map_path_.GetNoArena();
}
inline void InitMatchResult::set_map_path(const ::std::string& value) {
  
  map_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.InitMatchResult.map_path)
}
#if LANG_CXX11
inline void InitMatchResult::set_map_path(::std::string&& value) {
  
  map_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.InitMatchResult.map_path)
}
#endif
inline void InitMatchResult::set_map_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  map_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.InitMatchResult.map_path)
}
inline void InitMatchResult::set_map_path(const char* value, size_t size) {
  
  map_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.InitMatchResult.map_path)
}
inline ::std::string* InitMatchResult::mutable_map_path() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.InitMatchResult.map_path)
  return map_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitMatchResult::release_map_path() {
  // @@protoc_insertion_point(field_release:xsproto.communication.InitMatchResult.map_path)
  
  return map_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitMatchResult::set_allocated_map_path(::std::string* map_path) {
  if (map_path != NULL) {
    
  } else {
    
  }
  map_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_path);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.InitMatchResult.map_path)
}

// string point_cloud_path = 3;
inline void InitMatchResult::clear_point_cloud_path() {
  point_cloud_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InitMatchResult::point_cloud_path() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitMatchResult.point_cloud_path)
  return point_cloud_path_.GetNoArena();
}
inline void InitMatchResult::set_point_cloud_path(const ::std::string& value) {
  
  point_cloud_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.InitMatchResult.point_cloud_path)
}
#if LANG_CXX11
inline void InitMatchResult::set_point_cloud_path(::std::string&& value) {
  
  point_cloud_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.InitMatchResult.point_cloud_path)
}
#endif
inline void InitMatchResult::set_point_cloud_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  point_cloud_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.InitMatchResult.point_cloud_path)
}
inline void InitMatchResult::set_point_cloud_path(const char* value, size_t size) {
  
  point_cloud_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.InitMatchResult.point_cloud_path)
}
inline ::std::string* InitMatchResult::mutable_point_cloud_path() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.InitMatchResult.point_cloud_path)
  return point_cloud_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitMatchResult::release_point_cloud_path() {
  // @@protoc_insertion_point(field_release:xsproto.communication.InitMatchResult.point_cloud_path)
  
  return point_cloud_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitMatchResult::set_allocated_point_cloud_path(::std::string* point_cloud_path) {
  if (point_cloud_path != NULL) {
    
  } else {
    
  }
  point_cloud_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), point_cloud_path);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.InitMatchResult.point_cloud_path)
}

// .xsproto.communication.InitRangeData range_info = 4;
inline bool InitMatchResult::has_range_info() const {
  return this != internal_default_instance() && range_info_ != NULL;
}
inline void InitMatchResult::clear_range_info() {
  if (GetArenaNoVirtual() == NULL && range_info_ != NULL) {
    delete range_info_;
  }
  range_info_ = NULL;
}
inline const ::xsproto::communication::InitRangeData& InitMatchResult::range_info() const {
  const ::xsproto::communication::InitRangeData* p = range_info_;
  // @@protoc_insertion_point(field_get:xsproto.communication.InitMatchResult.range_info)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::communication::InitRangeData*>(
      &::xsproto::communication::_InitRangeData_default_instance_);
}
inline ::xsproto::communication::InitRangeData* InitMatchResult::release_range_info() {
  // @@protoc_insertion_point(field_release:xsproto.communication.InitMatchResult.range_info)
  
  ::xsproto::communication::InitRangeData* temp = range_info_;
  range_info_ = NULL;
  return temp;
}
inline ::xsproto::communication::InitRangeData* InitMatchResult::mutable_range_info() {
  
  if (range_info_ == NULL) {
    range_info_ = new ::xsproto::communication::InitRangeData;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.InitMatchResult.range_info)
  return range_info_;
}
inline void InitMatchResult::set_allocated_range_info(::xsproto::communication::InitRangeData* range_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete range_info_;
  }
  if (range_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range_info, submessage_arena);
    }
    
  } else {
    
  }
  range_info_ = range_info;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.InitMatchResult.range_info)
}

// int32 score = 5;
inline void InitMatchResult::clear_score() {
  score_ = 0;
}
inline ::google::protobuf::int32 InitMatchResult::score() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitMatchResult.score)
  return score_;
}
inline void InitMatchResult::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.InitMatchResult.score)
}

// -------------------------------------------------------------------

// InitRangeData

// double minx = 1;
inline void InitRangeData::clear_minx() {
  minx_ = 0;
}
inline double InitRangeData::minx() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitRangeData.minx)
  return minx_;
}
inline void InitRangeData::set_minx(double value) {
  
  minx_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.InitRangeData.minx)
}

// double miny = 2;
inline void InitRangeData::clear_miny() {
  miny_ = 0;
}
inline double InitRangeData::miny() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitRangeData.miny)
  return miny_;
}
inline void InitRangeData::set_miny(double value) {
  
  miny_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.InitRangeData.miny)
}

// double maxx = 3;
inline void InitRangeData::clear_maxx() {
  maxx_ = 0;
}
inline double InitRangeData::maxx() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitRangeData.maxx)
  return maxx_;
}
inline void InitRangeData::set_maxx(double value) {
  
  maxx_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.InitRangeData.maxx)
}

// double maxy = 4;
inline void InitRangeData::clear_maxy() {
  maxy_ = 0;
}
inline double InitRangeData::maxy() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitRangeData.maxy)
  return maxy_;
}
inline void InitRangeData::set_maxy(double value) {
  
  maxy_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.InitRangeData.maxy)
}

// int32 grid_size = 5;
inline void InitRangeData::clear_grid_size() {
  grid_size_ = 0;
}
inline ::google::protobuf::int32 InitRangeData::grid_size() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitRangeData.grid_size)
  return grid_size_;
}
inline void InitRangeData::set_grid_size(::google::protobuf::int32 value) {
  
  grid_size_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.InitRangeData.grid_size)
}

// -------------------------------------------------------------------

// InitStatus

// int32 status = 1;
inline void InitStatus::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 InitStatus::status() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.InitStatus.status)
  return status_;
}
inline void InitStatus::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.InitStatus.status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace communication
}  // namespace xsproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_business_2flocalisation_5finit_5fresponse_2eproto__INCLUDED
