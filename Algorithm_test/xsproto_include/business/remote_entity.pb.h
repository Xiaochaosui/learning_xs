// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: business/remote_entity.proto

#ifndef PROTOBUF_business_2fremote_5fentity_2eproto__INCLUDED
#define PROTOBUF_business_2fremote_5fentity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base/header.pb.h"
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_business_2fremote_5fentity_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRemoteEntityImpl();
void InitDefaultsRemoteEntity();
void InitDefaultsEntityObjImpl();
void InitDefaultsEntityObj();
inline void InitDefaults() {
  InitDefaultsRemoteEntity();
  InitDefaultsEntityObj();
}
}  // namespace protobuf_business_2fremote_5fentity_2eproto
namespace xsproto {
namespace communication {
class EntityObj;
class EntityObjDefaultTypeInternal;
extern EntityObjDefaultTypeInternal _EntityObj_default_instance_;
class RemoteEntity;
class RemoteEntityDefaultTypeInternal;
extern RemoteEntityDefaultTypeInternal _RemoteEntity_default_instance_;
}  // namespace communication
}  // namespace xsproto
namespace xsproto {
namespace communication {

enum EntityObj_ObjType {
  EntityObj_ObjType_OBJ_B1B = 0,
  EntityObj_ObjType_OBJ_C6 = 1,
  EntityObj_ObjType_OBJ_B2D = 2,
  EntityObj_ObjType_OBJ_VEHICLE = 3,
  EntityObj_ObjType_EntityObj_ObjType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityObj_ObjType_EntityObj_ObjType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityObj_ObjType_IsValid(int value);
const EntityObj_ObjType EntityObj_ObjType_ObjType_MIN = EntityObj_ObjType_OBJ_B1B;
const EntityObj_ObjType EntityObj_ObjType_ObjType_MAX = EntityObj_ObjType_OBJ_VEHICLE;
const int EntityObj_ObjType_ObjType_ARRAYSIZE = EntityObj_ObjType_ObjType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityObj_ObjType_descriptor();
inline const ::std::string& EntityObj_ObjType_Name(EntityObj_ObjType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityObj_ObjType_descriptor(), value);
}
inline bool EntityObj_ObjType_Parse(
    const ::std::string& name, EntityObj_ObjType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityObj_ObjType>(
    EntityObj_ObjType_descriptor(), name, value);
}
enum EntityObj_DriveMode {
  EntityObj_DriveMode_Standby = 0,
  EntityObj_DriveMode_Manual = 1,
  EntityObj_DriveMode_Auto = 2,
  EntityObj_DriveMode_RemoteControl = 3,
  EntityObj_DriveMode_EntityObj_DriveMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityObj_DriveMode_EntityObj_DriveMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityObj_DriveMode_IsValid(int value);
const EntityObj_DriveMode EntityObj_DriveMode_DriveMode_MIN = EntityObj_DriveMode_Standby;
const EntityObj_DriveMode EntityObj_DriveMode_DriveMode_MAX = EntityObj_DriveMode_RemoteControl;
const int EntityObj_DriveMode_DriveMode_ARRAYSIZE = EntityObj_DriveMode_DriveMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityObj_DriveMode_descriptor();
inline const ::std::string& EntityObj_DriveMode_Name(EntityObj_DriveMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityObj_DriveMode_descriptor(), value);
}
inline bool EntityObj_DriveMode_Parse(
    const ::std::string& name, EntityObj_DriveMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityObj_DriveMode>(
    EntityObj_DriveMode_descriptor(), name, value);
}
// ===================================================================

class RemoteEntity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.RemoteEntity) */ {
 public:
  RemoteEntity();
  virtual ~RemoteEntity();

  RemoteEntity(const RemoteEntity& from);

  inline RemoteEntity& operator=(const RemoteEntity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoteEntity(RemoteEntity&& from) noexcept
    : RemoteEntity() {
    *this = ::std::move(from);
  }

  inline RemoteEntity& operator=(RemoteEntity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoteEntity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteEntity* internal_default_instance() {
    return reinterpret_cast<const RemoteEntity*>(
               &_RemoteEntity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RemoteEntity* other);
  friend void swap(RemoteEntity& a, RemoteEntity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoteEntity* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoteEntity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoteEntity& from);
  void MergeFrom(const RemoteEntity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoteEntity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xsproto.communication.EntityObj objs = 3;
  int objs_size() const;
  void clear_objs();
  static const int kObjsFieldNumber = 3;
  const ::xsproto::communication::EntityObj& objs(int index) const;
  ::xsproto::communication::EntityObj* mutable_objs(int index);
  ::xsproto::communication::EntityObj* add_objs();
  ::google::protobuf::RepeatedPtrField< ::xsproto::communication::EntityObj >*
      mutable_objs();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::communication::EntityObj >&
      objs() const;

  // .xsproto.base.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::xsproto::base::Header& header() const;
  ::xsproto::base::Header* release_header();
  ::xsproto::base::Header* mutable_header();
  void set_allocated_header(::xsproto::base::Header* header);

  // double time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  double time() const;
  void set_time(double value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.RemoteEntity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::communication::EntityObj > objs_;
  ::xsproto::base::Header* header_;
  double time_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2fremote_5fentity_2eproto::TableStruct;
  friend void ::protobuf_business_2fremote_5fentity_2eproto::InitDefaultsRemoteEntityImpl();
};
// -------------------------------------------------------------------

class EntityObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.communication.EntityObj) */ {
 public:
  EntityObj();
  virtual ~EntityObj();

  EntityObj(const EntityObj& from);

  inline EntityObj& operator=(const EntityObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityObj(EntityObj&& from) noexcept
    : EntityObj() {
    *this = ::std::move(from);
  }

  inline EntityObj& operator=(EntityObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityObj& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EntityObj* internal_default_instance() {
    return reinterpret_cast<const EntityObj*>(
               &_EntityObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(EntityObj* other);
  friend void swap(EntityObj& a, EntityObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityObj* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityObj& from);
  void MergeFrom(const EntityObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EntityObj_ObjType ObjType;
  static const ObjType OBJ_B1B =
    EntityObj_ObjType_OBJ_B1B;
  static const ObjType OBJ_C6 =
    EntityObj_ObjType_OBJ_C6;
  static const ObjType OBJ_B2D =
    EntityObj_ObjType_OBJ_B2D;
  static const ObjType OBJ_VEHICLE =
    EntityObj_ObjType_OBJ_VEHICLE;
  static inline bool ObjType_IsValid(int value) {
    return EntityObj_ObjType_IsValid(value);
  }
  static const ObjType ObjType_MIN =
    EntityObj_ObjType_ObjType_MIN;
  static const ObjType ObjType_MAX =
    EntityObj_ObjType_ObjType_MAX;
  static const int ObjType_ARRAYSIZE =
    EntityObj_ObjType_ObjType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ObjType_descriptor() {
    return EntityObj_ObjType_descriptor();
  }
  static inline const ::std::string& ObjType_Name(ObjType value) {
    return EntityObj_ObjType_Name(value);
  }
  static inline bool ObjType_Parse(const ::std::string& name,
      ObjType* value) {
    return EntityObj_ObjType_Parse(name, value);
  }

  typedef EntityObj_DriveMode DriveMode;
  static const DriveMode Standby =
    EntityObj_DriveMode_Standby;
  static const DriveMode Manual =
    EntityObj_DriveMode_Manual;
  static const DriveMode Auto =
    EntityObj_DriveMode_Auto;
  static const DriveMode RemoteControl =
    EntityObj_DriveMode_RemoteControl;
  static inline bool DriveMode_IsValid(int value) {
    return EntityObj_DriveMode_IsValid(value);
  }
  static const DriveMode DriveMode_MIN =
    EntityObj_DriveMode_DriveMode_MIN;
  static const DriveMode DriveMode_MAX =
    EntityObj_DriveMode_DriveMode_MAX;
  static const int DriveMode_ARRAYSIZE =
    EntityObj_DriveMode_DriveMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DriveMode_descriptor() {
    return EntityObj_DriveMode_descriptor();
  }
  static inline const ::std::string& DriveMode_Name(DriveMode value) {
    return EntityObj_DriveMode_Name(value);
  }
  static inline bool DriveMode_Parse(const ::std::string& name,
      DriveMode* value) {
    return EntityObj_DriveMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated double vertex_x = 8;
  int vertex_x_size() const;
  void clear_vertex_x();
  static const int kVertexXFieldNumber = 8;
  double vertex_x(int index) const;
  void set_vertex_x(int index, double value);
  void add_vertex_x(double value);
  const ::google::protobuf::RepeatedField< double >&
      vertex_x() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_vertex_x();

  // repeated double vertex_y = 9;
  int vertex_y_size() const;
  void clear_vertex_y();
  static const int kVertexYFieldNumber = 9;
  double vertex_y(int index) const;
  void set_vertex_y(int index, double value);
  void add_vertex_y(double value);
  const ::google::protobuf::RepeatedField< double >&
      vertex_y() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_vertex_y();

  // repeated double traj_x = 10;
  int traj_x_size() const;
  void clear_traj_x();
  static const int kTrajXFieldNumber = 10;
  double traj_x(int index) const;
  void set_traj_x(int index, double value);
  void add_traj_x(double value);
  const ::google::protobuf::RepeatedField< double >&
      traj_x() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_traj_x();

  // repeated double traj_y = 11;
  int traj_y_size() const;
  void clear_traj_y();
  static const int kTrajYFieldNumber = 11;
  double traj_y(int index) const;
  void set_traj_y(int index, double value);
  void add_traj_y(double value);
  const ::google::protobuf::RepeatedField< double >&
      traj_y() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_traj_y();

  // repeated int32 centerline_id = 15;
  int centerline_id_size() const;
  void clear_centerline_id();
  static const int kCenterlineIdFieldNumber = 15;
  ::google::protobuf::int32 centerline_id(int index) const;
  void set_centerline_id(int index, ::google::protobuf::int32 value);
  void add_centerline_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      centerline_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_centerline_id();

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .google.protobuf.Any plan_data = 14;
  bool has_plan_data() const;
  void clear_plan_data();
  static const int kPlanDataFieldNumber = 14;
  const ::google::protobuf::Any& plan_data() const;
  ::google::protobuf::Any* release_plan_data();
  ::google::protobuf::Any* mutable_plan_data();
  void set_allocated_plan_data(::google::protobuf::Any* plan_data);

  // double time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  double time() const;
  void set_time(double value);

  // double center_x = 4;
  void clear_center_x();
  static const int kCenterXFieldNumber = 4;
  double center_x() const;
  void set_center_x(double value);

  // double center_y = 5;
  void clear_center_y();
  static const int kCenterYFieldNumber = 5;
  double center_y() const;
  void set_center_y(double value);

  // double velocity = 6;
  void clear_velocity();
  static const int kVelocityFieldNumber = 6;
  double velocity() const;
  void set_velocity(double value);

  // double direction = 7;
  void clear_direction();
  static const int kDirectionFieldNumber = 7;
  double direction() const;
  void set_direction(double value);

  // .xsproto.communication.EntityObj.ObjType obj_type = 3;
  void clear_obj_type();
  static const int kObjTypeFieldNumber = 3;
  ::xsproto::communication::EntityObj_ObjType obj_type() const;
  void set_obj_type(::xsproto::communication::EntityObj_ObjType value);

  // .xsproto.communication.EntityObj.DriveMode dirve_mode = 13;
  void clear_dirve_mode();
  static const int kDirveModeFieldNumber = 13;
  ::xsproto::communication::EntityObj_DriveMode dirve_mode() const;
  void set_dirve_mode(::xsproto::communication::EntityObj_DriveMode value);

  // double delay = 12;
  void clear_delay();
  static const int kDelayFieldNumber = 12;
  double delay() const;
  void set_delay(double value);

  // @@protoc_insertion_point(class_scope:xsproto.communication.EntityObj)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > vertex_x_;
  mutable int _vertex_x_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > vertex_y_;
  mutable int _vertex_y_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > traj_x_;
  mutable int _traj_x_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > traj_y_;
  mutable int _traj_y_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > centerline_id_;
  mutable int _centerline_id_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::Any* plan_data_;
  double time_;
  double center_x_;
  double center_y_;
  double velocity_;
  double direction_;
  int obj_type_;
  int dirve_mode_;
  double delay_;
  mutable int _cached_size_;
  friend struct ::protobuf_business_2fremote_5fentity_2eproto::TableStruct;
  friend void ::protobuf_business_2fremote_5fentity_2eproto::InitDefaultsEntityObjImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RemoteEntity

// .xsproto.base.Header header = 1;
inline bool RemoteEntity::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::xsproto::base::Header& RemoteEntity::header() const {
  const ::xsproto::base::Header* p = header_;
  // @@protoc_insertion_point(field_get:xsproto.communication.RemoteEntity.header)
  return p != NULL ? *p : *reinterpret_cast<const ::xsproto::base::Header*>(
      &::xsproto::base::_Header_default_instance_);
}
inline ::xsproto::base::Header* RemoteEntity::release_header() {
  // @@protoc_insertion_point(field_release:xsproto.communication.RemoteEntity.header)
  
  ::xsproto::base::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::xsproto::base::Header* RemoteEntity::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::xsproto::base::Header;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.RemoteEntity.header)
  return header_;
}
inline void RemoteEntity::set_allocated_header(::xsproto::base::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.RemoteEntity.header)
}

// double time = 2;
inline void RemoteEntity::clear_time() {
  time_ = 0;
}
inline double RemoteEntity::time() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.RemoteEntity.time)
  return time_;
}
inline void RemoteEntity::set_time(double value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.RemoteEntity.time)
}

// repeated .xsproto.communication.EntityObj objs = 3;
inline int RemoteEntity::objs_size() const {
  return objs_.size();
}
inline void RemoteEntity::clear_objs() {
  objs_.Clear();
}
inline const ::xsproto::communication::EntityObj& RemoteEntity::objs(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.communication.RemoteEntity.objs)
  return objs_.Get(index);
}
inline ::xsproto::communication::EntityObj* RemoteEntity::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.communication.RemoteEntity.objs)
  return objs_.Mutable(index);
}
inline ::xsproto::communication::EntityObj* RemoteEntity::add_objs() {
  // @@protoc_insertion_point(field_add:xsproto.communication.RemoteEntity.objs)
  return objs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::communication::EntityObj >*
RemoteEntity::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.communication.RemoteEntity.objs)
  return &objs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::communication::EntityObj >&
RemoteEntity::objs() const {
  // @@protoc_insertion_point(field_list:xsproto.communication.RemoteEntity.objs)
  return objs_;
}

// -------------------------------------------------------------------

// EntityObj

// double time = 1;
inline void EntityObj::clear_time() {
  time_ = 0;
}
inline double EntityObj::time() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.time)
  return time_;
}
inline void EntityObj::set_time(double value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.time)
}

// string id = 2;
inline void EntityObj::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EntityObj::id() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.id)
  return id_.GetNoArena();
}
inline void EntityObj::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.id)
}
#if LANG_CXX11
inline void EntityObj::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xsproto.communication.EntityObj.id)
}
#endif
inline void EntityObj::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xsproto.communication.EntityObj.id)
}
inline void EntityObj::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xsproto.communication.EntityObj.id)
}
inline ::std::string* EntityObj::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:xsproto.communication.EntityObj.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EntityObj::release_id() {
  // @@protoc_insertion_point(field_release:xsproto.communication.EntityObj.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EntityObj::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.EntityObj.id)
}

// .xsproto.communication.EntityObj.ObjType obj_type = 3;
inline void EntityObj::clear_obj_type() {
  obj_type_ = 0;
}
inline ::xsproto::communication::EntityObj_ObjType EntityObj::obj_type() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.obj_type)
  return static_cast< ::xsproto::communication::EntityObj_ObjType >(obj_type_);
}
inline void EntityObj::set_obj_type(::xsproto::communication::EntityObj_ObjType value) {
  
  obj_type_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.obj_type)
}

// double center_x = 4;
inline void EntityObj::clear_center_x() {
  center_x_ = 0;
}
inline double EntityObj::center_x() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.center_x)
  return center_x_;
}
inline void EntityObj::set_center_x(double value) {
  
  center_x_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.center_x)
}

// double center_y = 5;
inline void EntityObj::clear_center_y() {
  center_y_ = 0;
}
inline double EntityObj::center_y() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.center_y)
  return center_y_;
}
inline void EntityObj::set_center_y(double value) {
  
  center_y_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.center_y)
}

// double velocity = 6;
inline void EntityObj::clear_velocity() {
  velocity_ = 0;
}
inline double EntityObj::velocity() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.velocity)
  return velocity_;
}
inline void EntityObj::set_velocity(double value) {
  
  velocity_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.velocity)
}

// double direction = 7;
inline void EntityObj::clear_direction() {
  direction_ = 0;
}
inline double EntityObj::direction() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.direction)
  return direction_;
}
inline void EntityObj::set_direction(double value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.direction)
}

// repeated double vertex_x = 8;
inline int EntityObj::vertex_x_size() const {
  return vertex_x_.size();
}
inline void EntityObj::clear_vertex_x() {
  vertex_x_.Clear();
}
inline double EntityObj::vertex_x(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.vertex_x)
  return vertex_x_.Get(index);
}
inline void EntityObj::set_vertex_x(int index, double value) {
  vertex_x_.Set(index, value);
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.vertex_x)
}
inline void EntityObj::add_vertex_x(double value) {
  vertex_x_.Add(value);
  // @@protoc_insertion_point(field_add:xsproto.communication.EntityObj.vertex_x)
}
inline const ::google::protobuf::RepeatedField< double >&
EntityObj::vertex_x() const {
  // @@protoc_insertion_point(field_list:xsproto.communication.EntityObj.vertex_x)
  return vertex_x_;
}
inline ::google::protobuf::RepeatedField< double >*
EntityObj::mutable_vertex_x() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.communication.EntityObj.vertex_x)
  return &vertex_x_;
}

// repeated double vertex_y = 9;
inline int EntityObj::vertex_y_size() const {
  return vertex_y_.size();
}
inline void EntityObj::clear_vertex_y() {
  vertex_y_.Clear();
}
inline double EntityObj::vertex_y(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.vertex_y)
  return vertex_y_.Get(index);
}
inline void EntityObj::set_vertex_y(int index, double value) {
  vertex_y_.Set(index, value);
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.vertex_y)
}
inline void EntityObj::add_vertex_y(double value) {
  vertex_y_.Add(value);
  // @@protoc_insertion_point(field_add:xsproto.communication.EntityObj.vertex_y)
}
inline const ::google::protobuf::RepeatedField< double >&
EntityObj::vertex_y() const {
  // @@protoc_insertion_point(field_list:xsproto.communication.EntityObj.vertex_y)
  return vertex_y_;
}
inline ::google::protobuf::RepeatedField< double >*
EntityObj::mutable_vertex_y() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.communication.EntityObj.vertex_y)
  return &vertex_y_;
}

// repeated double traj_x = 10;
inline int EntityObj::traj_x_size() const {
  return traj_x_.size();
}
inline void EntityObj::clear_traj_x() {
  traj_x_.Clear();
}
inline double EntityObj::traj_x(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.traj_x)
  return traj_x_.Get(index);
}
inline void EntityObj::set_traj_x(int index, double value) {
  traj_x_.Set(index, value);
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.traj_x)
}
inline void EntityObj::add_traj_x(double value) {
  traj_x_.Add(value);
  // @@protoc_insertion_point(field_add:xsproto.communication.EntityObj.traj_x)
}
inline const ::google::protobuf::RepeatedField< double >&
EntityObj::traj_x() const {
  // @@protoc_insertion_point(field_list:xsproto.communication.EntityObj.traj_x)
  return traj_x_;
}
inline ::google::protobuf::RepeatedField< double >*
EntityObj::mutable_traj_x() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.communication.EntityObj.traj_x)
  return &traj_x_;
}

// repeated double traj_y = 11;
inline int EntityObj::traj_y_size() const {
  return traj_y_.size();
}
inline void EntityObj::clear_traj_y() {
  traj_y_.Clear();
}
inline double EntityObj::traj_y(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.traj_y)
  return traj_y_.Get(index);
}
inline void EntityObj::set_traj_y(int index, double value) {
  traj_y_.Set(index, value);
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.traj_y)
}
inline void EntityObj::add_traj_y(double value) {
  traj_y_.Add(value);
  // @@protoc_insertion_point(field_add:xsproto.communication.EntityObj.traj_y)
}
inline const ::google::protobuf::RepeatedField< double >&
EntityObj::traj_y() const {
  // @@protoc_insertion_point(field_list:xsproto.communication.EntityObj.traj_y)
  return traj_y_;
}
inline ::google::protobuf::RepeatedField< double >*
EntityObj::mutable_traj_y() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.communication.EntityObj.traj_y)
  return &traj_y_;
}

// double delay = 12;
inline void EntityObj::clear_delay() {
  delay_ = 0;
}
inline double EntityObj::delay() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.delay)
  return delay_;
}
inline void EntityObj::set_delay(double value) {
  
  delay_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.delay)
}

// .xsproto.communication.EntityObj.DriveMode dirve_mode = 13;
inline void EntityObj::clear_dirve_mode() {
  dirve_mode_ = 0;
}
inline ::xsproto::communication::EntityObj_DriveMode EntityObj::dirve_mode() const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.dirve_mode)
  return static_cast< ::xsproto::communication::EntityObj_DriveMode >(dirve_mode_);
}
inline void EntityObj::set_dirve_mode(::xsproto::communication::EntityObj_DriveMode value) {
  
  dirve_mode_ = value;
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.dirve_mode)
}

// .google.protobuf.Any plan_data = 14;
inline bool EntityObj::has_plan_data() const {
  return this != internal_default_instance() && plan_data_ != NULL;
}
inline const ::google::protobuf::Any& EntityObj::plan_data() const {
  const ::google::protobuf::Any* p = plan_data_;
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.plan_data)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* EntityObj::release_plan_data() {
  // @@protoc_insertion_point(field_release:xsproto.communication.EntityObj.plan_data)
  
  ::google::protobuf::Any* temp = plan_data_;
  plan_data_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* EntityObj::mutable_plan_data() {
  
  if (plan_data_ == NULL) {
    plan_data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:xsproto.communication.EntityObj.plan_data)
  return plan_data_;
}
inline void EntityObj::set_allocated_plan_data(::google::protobuf::Any* plan_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(plan_data_);
  }
  if (plan_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      plan_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plan_data, submessage_arena);
    }
    
  } else {
    
  }
  plan_data_ = plan_data;
  // @@protoc_insertion_point(field_set_allocated:xsproto.communication.EntityObj.plan_data)
}

// repeated int32 centerline_id = 15;
inline int EntityObj::centerline_id_size() const {
  return centerline_id_.size();
}
inline void EntityObj::clear_centerline_id() {
  centerline_id_.Clear();
}
inline ::google::protobuf::int32 EntityObj::centerline_id(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.communication.EntityObj.centerline_id)
  return centerline_id_.Get(index);
}
inline void EntityObj::set_centerline_id(int index, ::google::protobuf::int32 value) {
  centerline_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:xsproto.communication.EntityObj.centerline_id)
}
inline void EntityObj::add_centerline_id(::google::protobuf::int32 value) {
  centerline_id_.Add(value);
  // @@protoc_insertion_point(field_add:xsproto.communication.EntityObj.centerline_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
EntityObj::centerline_id() const {
  // @@protoc_insertion_point(field_list:xsproto.communication.EntityObj.centerline_id)
  return centerline_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
EntityObj::mutable_centerline_id() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.communication.EntityObj.centerline_id)
  return &centerline_id_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace communication
}  // namespace xsproto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xsproto::communication::EntityObj_ObjType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::communication::EntityObj_ObjType>() {
  return ::xsproto::communication::EntityObj_ObjType_descriptor();
}
template <> struct is_proto_enum< ::xsproto::communication::EntityObj_DriveMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xsproto::communication::EntityObj_DriveMode>() {
  return ::xsproto::communication::EntityObj_DriveMode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_business_2fremote_5fentity_2eproto__INCLUDED
