// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: globalpath/task_path.proto

#ifndef PROTOBUF_globalpath_2ftask_5fpath_2eproto__INCLUDED
#define PROTOBUF_globalpath_2ftask_5fpath_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "base/header.pb.h"
#include "globalpath/task_list.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_globalpath_2ftask_5fpath_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsTaskPathImpl();
void InitDefaultsTaskPath();
inline void InitDefaults() {
  InitDefaultsTaskPath();
}
}  // namespace protobuf_globalpath_2ftask_5fpath_2eproto
namespace xsproto {
namespace globalpath {
class TaskPath;
class TaskPathDefaultTypeInternal;
extern TaskPathDefaultTypeInternal _TaskPath_default_instance_;
}  // namespace globalpath
}  // namespace xsproto
namespace xsproto {
namespace globalpath {

// ===================================================================

class TaskPath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xsproto.globalpath.TaskPath) */ {
 public:
  TaskPath();
  virtual ~TaskPath();

  TaskPath(const TaskPath& from);

  inline TaskPath& operator=(const TaskPath& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TaskPath(TaskPath&& from) noexcept
    : TaskPath() {
    *this = ::std::move(from);
  }

  inline TaskPath& operator=(TaskPath&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskPath& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TaskPath* internal_default_instance() {
    return reinterpret_cast<const TaskPath*>(
               &_TaskPath_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TaskPath* other);
  friend void swap(TaskPath& a, TaskPath& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TaskPath* New() const PROTOBUF_FINAL { return New(NULL); }

  TaskPath* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TaskPath& from);
  void MergeFrom(const TaskPath& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TaskPath* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xsproto.globalpath.TaskPoint points = 3;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  const ::xsproto::globalpath::TaskPoint& points(int index) const;
  ::xsproto::globalpath::TaskPoint* mutable_points(int index);
  ::xsproto::globalpath::TaskPoint* add_points();
  ::google::protobuf::RepeatedPtrField< ::xsproto::globalpath::TaskPoint >*
      mutable_points();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::globalpath::TaskPoint >&
      points() const;

  // repeated .xsproto.globalpath.TaskPoint pre_points = 4;
  int pre_points_size() const;
  void clear_pre_points();
  static const int kPrePointsFieldNumber = 4;
  const ::xsproto::globalpath::TaskPoint& pre_points(int index) const;
  ::xsproto::globalpath::TaskPoint* mutable_pre_points(int index);
  ::xsproto::globalpath::TaskPoint* add_pre_points();
  ::google::protobuf::RepeatedPtrField< ::xsproto::globalpath::TaskPoint >*
      mutable_pre_points();
  const ::google::protobuf::RepeatedPtrField< ::xsproto::globalpath::TaskPoint >&
      pre_points() const;

  // double localpose_time = 1;
  void clear_localpose_time();
  static const int kLocalposeTimeFieldNumber = 1;
  double localpose_time() const;
  void set_localpose_time(double value);

  // double globalpose_time = 2;
  void clear_globalpose_time();
  static const int kGlobalposeTimeFieldNumber = 2;
  double globalpose_time() const;
  void set_globalpose_time(double value);

  // @@protoc_insertion_point(class_scope:xsproto.globalpath.TaskPath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::globalpath::TaskPoint > points_;
  ::google::protobuf::RepeatedPtrField< ::xsproto::globalpath::TaskPoint > pre_points_;
  double localpose_time_;
  double globalpose_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_globalpath_2ftask_5fpath_2eproto::TableStruct;
  friend void ::protobuf_globalpath_2ftask_5fpath_2eproto::InitDefaultsTaskPathImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TaskPath

// double localpose_time = 1;
inline void TaskPath::clear_localpose_time() {
  localpose_time_ = 0;
}
inline double TaskPath::localpose_time() const {
  // @@protoc_insertion_point(field_get:xsproto.globalpath.TaskPath.localpose_time)
  return localpose_time_;
}
inline void TaskPath::set_localpose_time(double value) {
  
  localpose_time_ = value;
  // @@protoc_insertion_point(field_set:xsproto.globalpath.TaskPath.localpose_time)
}

// double globalpose_time = 2;
inline void TaskPath::clear_globalpose_time() {
  globalpose_time_ = 0;
}
inline double TaskPath::globalpose_time() const {
  // @@protoc_insertion_point(field_get:xsproto.globalpath.TaskPath.globalpose_time)
  return globalpose_time_;
}
inline void TaskPath::set_globalpose_time(double value) {
  
  globalpose_time_ = value;
  // @@protoc_insertion_point(field_set:xsproto.globalpath.TaskPath.globalpose_time)
}

// repeated .xsproto.globalpath.TaskPoint points = 3;
inline int TaskPath::points_size() const {
  return points_.size();
}
inline const ::xsproto::globalpath::TaskPoint& TaskPath::points(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.globalpath.TaskPath.points)
  return points_.Get(index);
}
inline ::xsproto::globalpath::TaskPoint* TaskPath::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.globalpath.TaskPath.points)
  return points_.Mutable(index);
}
inline ::xsproto::globalpath::TaskPoint* TaskPath::add_points() {
  // @@protoc_insertion_point(field_add:xsproto.globalpath.TaskPath.points)
  return points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::globalpath::TaskPoint >*
TaskPath::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.globalpath.TaskPath.points)
  return &points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::globalpath::TaskPoint >&
TaskPath::points() const {
  // @@protoc_insertion_point(field_list:xsproto.globalpath.TaskPath.points)
  return points_;
}

// repeated .xsproto.globalpath.TaskPoint pre_points = 4;
inline int TaskPath::pre_points_size() const {
  return pre_points_.size();
}
inline const ::xsproto::globalpath::TaskPoint& TaskPath::pre_points(int index) const {
  // @@protoc_insertion_point(field_get:xsproto.globalpath.TaskPath.pre_points)
  return pre_points_.Get(index);
}
inline ::xsproto::globalpath::TaskPoint* TaskPath::mutable_pre_points(int index) {
  // @@protoc_insertion_point(field_mutable:xsproto.globalpath.TaskPath.pre_points)
  return pre_points_.Mutable(index);
}
inline ::xsproto::globalpath::TaskPoint* TaskPath::add_pre_points() {
  // @@protoc_insertion_point(field_add:xsproto.globalpath.TaskPath.pre_points)
  return pre_points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xsproto::globalpath::TaskPoint >*
TaskPath::mutable_pre_points() {
  // @@protoc_insertion_point(field_mutable_list:xsproto.globalpath.TaskPath.pre_points)
  return &pre_points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xsproto::globalpath::TaskPoint >&
TaskPath::pre_points() const {
  // @@protoc_insertion_point(field_list:xsproto.globalpath.TaskPath.pre_points)
  return pre_points_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace globalpath
}  // namespace xsproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_globalpath_2ftask_5fpath_2eproto__INCLUDED
